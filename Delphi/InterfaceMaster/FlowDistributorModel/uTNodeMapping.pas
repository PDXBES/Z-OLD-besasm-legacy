{*******************************************************}
{* 
{* uTNodeMapping.pas
{* Delphi Implementation of the Class TNodeMapping
{* Generated by Enterprise Architect
{* Created on:      03-May-2006 11:45:49 AM
{* Original author: Arnel Mandilag
{*  
{*******************************************************}

unit uTNodeMapping;

interface

uses SysUtils, Classes, uTNode, uTDistribution;

type

  TNodeMapping = class
  private
    Node: TNode;
    Distribution: TDistribution;
  public
    function GetFlow: Double;
		constructor Create(ADistribution: TDistribution; ANodeID: String); overload;
		function SameMapping(ANodeMapping: TNodeMapping): Boolean;
		destructor Destroy; override;
	end;

implementation

{implementation of TNodeMapping}

destructor TNodeMapping.Destroy;
begin
	inherited Destroy;
end;

function TNodeMapping.GetFlow: Double;
begin
	Result := Distribution.FlowAt(Node);
end;

function TNodeMapping.SameMapping(ANodeMapping: TNodeMapping): Boolean;
begin
	Result := (ANodeMapping.Node = Node) and (ANodeMapping.Distribution = Distribution);
end;

constructor TNodeMapping.Create(ADistribution: TDistribution; ANodeID: String);
begin
	Self.Node := ADistribution.NodeById(ANodeID);
	Self.Distribution := ADistribution;
end;

end.