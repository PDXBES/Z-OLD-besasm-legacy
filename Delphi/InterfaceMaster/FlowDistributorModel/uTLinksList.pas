{*******************************************************}
{* 
{* uTLinksList.pas
{* Delphi Implementation of the Class TLinksList
{* Generated by Enterprise Architect
{* Created on:      03-May-2006 11:45:49 AM
{* Original author: Arnel Mandilag
{*
{*******************************************************}

unit uTLinksList;

interface

uses SysUtils, Classes, Contnrs, uTLink;

type

	TLinksList = class
	private
		List: TObjectList;
	protected
		//Returns the TLink via its index in the list
		function GetItem(AIndex: Integer): TLink;
	public
		//Adds a link and returns its index
		function Add(ALink: TLink): Integer;
		//Clears the list
		procedure Clear;
		//Returns the number of items in the list
		function Count: Integer;
		//Deletes a link by its index
		procedure Delete(AIndex: Integer);
		constructor Create(OwnsLinks: Boolean); overload;
		constructor Create; overload;
		destructor Destroy; override;
		property Items[Index : Integer]:TLink read GetItem; default;
	end;

implementation

{implementation of TLinksList}

function TLinksList.Add(ALink: TLink): Integer;
begin
	Result := List.Add(ALink);
end;

procedure TLinksList.Clear;
begin
	List.Clear;
end;

function TLinksList.Count: Integer;
begin
	Result := List.Count;
end;

constructor TLinksList.Create(OwnsLinks: Boolean);
begin
	List := TObjectList.Create(OwnsLinks);
end;

procedure TLinksList.Delete(AIndex: Integer);
begin
	List.Delete(AIndex);
end;

function TLinksList.GetItem(AIndex: Integer): TLink;
begin
	Result := TLink(List[AIndex]);
end;

constructor TLinksList.Create;
begin
	List := TObjectList.Create(True);
end;

destructor TLinksList.Destroy;
begin
	List.Free;
	inherited;
end;

end.