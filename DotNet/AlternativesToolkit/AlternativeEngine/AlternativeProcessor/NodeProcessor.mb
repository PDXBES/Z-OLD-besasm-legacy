'
'	============ EMGAATS Workbench =================
'
'	Copyright (c) 2001,	2003  City of Portland,	OR Bureau of Environmental Services	
'
' 20Jul2006	Adapted
'	22Mar2004 Collins added	call to	InitOpenUtilGlobals	so that	EMGOpenUtils can be	used here
'
'
include "MapBasic.def"
'include "\\cassio\modeling\Model_Programs\Emgaats\CodeV2.2\Common\Inc\EMGGlobal.def"
include "\\cassio\modeling\Model_Programs\Emgaats\CodeV2.2\Common\Inc\EMGToolGlobal.def"
include "\\cassio\modeling\Model_Programs\Emgaats\CodeV2.2\Common\Inc\EMGLogger.def"
include "\\cassio\modeling\Model_Programs\Emgaats\CodeV2.2\Common\Inc\EMGOpenUtils.def"
include "\\cassio\modeling\Model_Programs\Emgaats\CodeV2.2\Common\Inc\EMGMTabUtil.def"
include "\\cassio\modeling\Model_Programs\Emgaats\CodeV2.2\Common\Inc\INIUtils.def"
include "\\cassio\modeling\Model_Programs\Emgaats\CodeV2.2\Workbench\Inc\EMGInit.def"
include "\\cassio\modeling\Model_Programs\Emgaats\CodeV2.2\LinkTool\Inc\EMGLinkColData.def"
include "\\cassio\modeling\Model_Programs\Emgaats\CodeV2.2\NodeTool\Inc\NodeTool.def"
include "\\cassio\modeling\Model_Programs\Emgaats\CodeV2.2\LinkTool\inc\EMGLinkCommit.def"
include "\\cassio\modeling\Model_Programs\Emgaats\CodeV2.2\common\inc\EMGCoordSys.def"

Declare Sub Main()
'Declare Sub EndHandler()

'Required for all Framework MBX Apps
Declare Sub ExitApplication()
Declare Sub Function_Menu()

'Globals required for all Framework Apps
Global gReturnStatus as String
global gDebugMode as Logical

'Functions specific to this Framework App
Declare Sub SetupNodeProcessor
Declare Sub DeleteOrphanNodes
Declare Sub AddGroundElevations

'Globals specific to this Framework App
global gOutputModelPath as String
global gElevField as String
global gElevationSubSectionList as String

'---------------------------------------------------------
' the following	is a delphi	code snippit that shows	how	the	MB globals are accessed
'---------------------------------------------------------
  'strMBmsg	= 'gstrCurrentMessage';
  'strMBrc = 'gstrReturnStatus';

  'STEP	ONE: Start mapinfo
  'goleMI :=Zcreateoleobject('Mapinfo.Application');
  
  'STEP	TWO: find the full path	of the application
  'mbxFullPath := systemini.ReadString('code','TestBench','notfound');	
	
	'STEP THREE: Run the mbx
	'DoStr := 'Run Application '+ #34 +	mbxFullPath	+ #34;
	'oleMI.do doStr
	
  'STEP	FOUR: Initialize global	to something that is not SUCCESS
  'oleMI.mbapplications.item('TestBench').mbglobals.item(strMBrc).value	:= 'NULL';
  
  'STEP	FIVE: run subroutines within the mapinfo application and test for success
  'olemi.do	('Run Menu Command ID '	+ cmdID);
  'sleep(1000);
  'if myrc <> 'SUCCESS'	Then
	' error	stuff here
  'end if


'---------------------------------------------------------
Sub AddGroundElevations
	gReturnStatus="Entered AddGroundElevations()"	
		
	Call AssignGroundElev("mdl_nodes", gElevField, gElevationSubSectionList)
	
	gReturnStatus="Succesfully called AddGroundElevations()"	
	
End Sub
'---------------------------------------------------------
Sub DeleteOrphanNodes
	gReturnStatus="Entered DeleteOrphanNodes()"	
		
	Call OrphanNodes()
	Commit Table mdl_nodes
	Pack Table mdl_nodes Graphic Data
	
	gReturnStatus="Succesfully called DeleteOrphanNodes()"	
	
End Sub
'---------------------------------------------------------
Sub SetupNodeProcessor

	gReturnStatus="Entered SetupNodeProcessor()"	
	
	Call SetStdCoordSys()
	
	gmdlINIfullpath = gOutputModelPath
	call InitOpenUtilGlobals()
	dim mdlIndex(4) as integer
	mdlIndex(1) = NDX_MDL_LINKS
	mdlIndex(2) = NDX_MDL_NODES 				
	mdlIndex(3) = NDX_MDL_DIRSC 				
	mdlIndex(4) = NDX_MDL_SURFSC
	
	dim result as integer
	result = setOKToOpen(gmdlFiles, mdlIndex)	
	result = setAllowWrite(gmdlFiles, mdlIndex)
	result = ReallyOpenModel()
	
	gReturnStatus="Succesfully called SetupNodeProcessor()"	
End Sub 
'---------------------------------------------------------
Sub ExitApplication()					
	End Program
End Sub

'---------------------------------------------------------
' Modify to	add	menuitems for testing
'---------------------------------------------------------

Sub	Function_Menu() 'Required for all Framework MBX apps

Create Menu	"Function Menu"	as 
	"Setup Node Processor" ID 10003 calling SetupNodeProcessor,	
	"Delete Orphan Nodes" ID 10001 calling DeleteOrphanNodes,
	"Add Ground Elevations" ID 10002 calling AddGroundElevations,		
	"Exit MBX Application" ID 9999 calling ExitApplication 'Required for all Framework MBX apps
  
  Alter	Menu Bar Remove	ID 6, ID 7 
  Alter	Menu Bar Add "Function Menu", ID 6,	ID 7

End	Sub

'--------------------------------------------------------

'No	changes	below here
'--------------------------------------------------------

Sub	Main()
		 
	gReturnStatus="Initialized"	
	OnError GoTo ErrorHandler
	Call InitHousekeeping		' have to init some globals before we can say hello
  Call InitOpenUtilGlobals  ' this sets up table names for the EMGOpenUtils functions
	
	Call Function_Menu
	
	Exit Sub
	
	ErrorHandler:
		gReturnStatus = "Error: " + Err()		
		OnError GoTo 0
		Error Err()
	
End	Sub
'---------------------------------------------------------
'All functions should be sure to save tables as needed. When MapInfo exits,
'all tables will be closed without saving (to prevent user prompt in event of a crash
'Sub EndHandler
'	Close All
'End Sub

