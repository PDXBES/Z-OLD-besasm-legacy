//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ViRT {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("NEPTUNEDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NEPTUNEDataSet : global::System.Data.DataSet {
        
        private DOWNTIMEDataTable tableDOWNTIME;
        
        private RAIN_DATADataTable tableRAIN_DATA;
        
        private RAIN_DATA_DOWNDataTable tableRAIN_DATA_DOWN;
        
        private RAIN_SENSORDataTable tableRAIN_SENSOR;
        
        private STATIONDataTable tableSTATION;
        
        private V_DOWNTIMEDataTable tableV_DOWNTIME;
        
        private V_MODEL_RAIN_DOWNTIMEDataTable tableV_MODEL_RAIN_DOWNTIME;
        
        private V_MODEL_RAIN_FIFTEEN_MINUTEDataTable tableV_MODEL_RAIN_FIFTEEN_MINUTE;
        
        private V_MODEL_RAIN_FIVE_MINUTEDataTable tableV_MODEL_RAIN_FIVE_MINUTE;
        
        private V_MODEL_RAIN_ONE_HOURDataTable tableV_MODEL_RAIN_ONE_HOUR;
        
        private V_MODEL_RAIN_SIX_MINUTEDataTable tableV_MODEL_RAIN_SIX_MINUTE;
        
        private V_MODEL_RAIN_TEN_MINUTEDataTable tableV_MODEL_RAIN_TEN_MINUTE;
        
        private V_MODEL_RAIN_THIRTY_MINUTEDataTable tableV_MODEL_RAIN_THIRTY_MINUTE;
        
        private V_MODEL_RAIN_TWELVE_MINUTEDataTable tableV_MODEL_RAIN_TWELVE_MINUTE;
        
        private V_MODEL_RAIN_TWENTY_MINUTEDataTable tableV_MODEL_RAIN_TWENTY_MINUTE;
        
        private V_MODELING_RAIN_FIVE_MINUTEDataTable tableV_MODELING_RAIN_FIVE_MINUTE;
        
        private V_RAIN_DATADataTable tableV_RAIN_DATA;
        
        private V_RAIN_HISTORY_DOWNTIMEDataTable tableV_RAIN_HISTORY_DOWNTIME;
        
        private V_RAIN_SENSORDataTable tableV_RAIN_SENSOR;
        
        private DEPTH_DATADataTable tableDEPTH_DATA;
        
        private ENVIRON_SENSORDataTable tableENVIRON_SENSOR;
        
        private FLOW_DATADataTable tableFLOW_DATA;
        
        private FLOWCOMPUTED_DATADataTable tableFLOWCOMPUTED_DATA;
        
        private VELOCITY_DATADataTable tableVELOCITY_DATA;
        
        private DataTable1DataTable tableDataTable1;
        
        private global::System.Data.DataRelation relationFK_DOWNTIME_STATION;
        
        private global::System.Data.DataRelation relationFK_RAIN_SENSOR_STATION;
        
        private global::System.Data.DataRelation relationFK_ENVIRON_SENSOR_STATION;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NEPTUNEDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected NEPTUNEDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DOWNTIME"] != null)) {
                    base.Tables.Add(new DOWNTIMEDataTable(ds.Tables["DOWNTIME"]));
                }
                if ((ds.Tables["RAIN_DATA"] != null)) {
                    base.Tables.Add(new RAIN_DATADataTable(ds.Tables["RAIN_DATA"]));
                }
                if ((ds.Tables["RAIN_DATA_DOWN"] != null)) {
                    base.Tables.Add(new RAIN_DATA_DOWNDataTable(ds.Tables["RAIN_DATA_DOWN"]));
                }
                if ((ds.Tables["RAIN_SENSOR"] != null)) {
                    base.Tables.Add(new RAIN_SENSORDataTable(ds.Tables["RAIN_SENSOR"]));
                }
                if ((ds.Tables["STATION"] != null)) {
                    base.Tables.Add(new STATIONDataTable(ds.Tables["STATION"]));
                }
                if ((ds.Tables["V_DOWNTIME"] != null)) {
                    base.Tables.Add(new V_DOWNTIMEDataTable(ds.Tables["V_DOWNTIME"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_DOWNTIME"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_DOWNTIMEDataTable(ds.Tables["V_MODEL_RAIN_DOWNTIME"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_FIFTEEN_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_FIFTEEN_MINUTEDataTable(ds.Tables["V_MODEL_RAIN_FIFTEEN_MINUTE"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_FIVE_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_FIVE_MINUTEDataTable(ds.Tables["V_MODEL_RAIN_FIVE_MINUTE"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_ONE_HOUR"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_ONE_HOURDataTable(ds.Tables["V_MODEL_RAIN_ONE_HOUR"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_SIX_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_SIX_MINUTEDataTable(ds.Tables["V_MODEL_RAIN_SIX_MINUTE"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_TEN_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_TEN_MINUTEDataTable(ds.Tables["V_MODEL_RAIN_TEN_MINUTE"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_THIRTY_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_THIRTY_MINUTEDataTable(ds.Tables["V_MODEL_RAIN_THIRTY_MINUTE"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_TWELVE_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_TWELVE_MINUTEDataTable(ds.Tables["V_MODEL_RAIN_TWELVE_MINUTE"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_TWENTY_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_TWENTY_MINUTEDataTable(ds.Tables["V_MODEL_RAIN_TWENTY_MINUTE"]));
                }
                if ((ds.Tables["V_MODELING_RAIN_FIVE_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODELING_RAIN_FIVE_MINUTEDataTable(ds.Tables["V_MODELING_RAIN_FIVE_MINUTE"]));
                }
                if ((ds.Tables["V_RAIN_DATA"] != null)) {
                    base.Tables.Add(new V_RAIN_DATADataTable(ds.Tables["V_RAIN_DATA"]));
                }
                if ((ds.Tables["V_RAIN_HISTORY_DOWNTIME"] != null)) {
                    base.Tables.Add(new V_RAIN_HISTORY_DOWNTIMEDataTable(ds.Tables["V_RAIN_HISTORY_DOWNTIME"]));
                }
                if ((ds.Tables["V_RAIN_SENSOR"] != null)) {
                    base.Tables.Add(new V_RAIN_SENSORDataTable(ds.Tables["V_RAIN_SENSOR"]));
                }
                if ((ds.Tables["DEPTH_DATA"] != null)) {
                    base.Tables.Add(new DEPTH_DATADataTable(ds.Tables["DEPTH_DATA"]));
                }
                if ((ds.Tables["ENVIRON_SENSOR"] != null)) {
                    base.Tables.Add(new ENVIRON_SENSORDataTable(ds.Tables["ENVIRON_SENSOR"]));
                }
                if ((ds.Tables["FLOW_DATA"] != null)) {
                    base.Tables.Add(new FLOW_DATADataTable(ds.Tables["FLOW_DATA"]));
                }
                if ((ds.Tables["FLOWCOMPUTED_DATA"] != null)) {
                    base.Tables.Add(new FLOWCOMPUTED_DATADataTable(ds.Tables["FLOWCOMPUTED_DATA"]));
                }
                if ((ds.Tables["VELOCITY_DATA"] != null)) {
                    base.Tables.Add(new VELOCITY_DATADataTable(ds.Tables["VELOCITY_DATA"]));
                }
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DOWNTIMEDataTable DOWNTIME {
            get {
                return this.tableDOWNTIME;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RAIN_DATADataTable RAIN_DATA {
            get {
                return this.tableRAIN_DATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RAIN_DATA_DOWNDataTable RAIN_DATA_DOWN {
            get {
                return this.tableRAIN_DATA_DOWN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RAIN_SENSORDataTable RAIN_SENSOR {
            get {
                return this.tableRAIN_SENSOR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public STATIONDataTable STATION {
            get {
                return this.tableSTATION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_DOWNTIMEDataTable V_DOWNTIME {
            get {
                return this.tableV_DOWNTIME;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_MODEL_RAIN_DOWNTIMEDataTable V_MODEL_RAIN_DOWNTIME {
            get {
                return this.tableV_MODEL_RAIN_DOWNTIME;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_MODEL_RAIN_FIFTEEN_MINUTEDataTable V_MODEL_RAIN_FIFTEEN_MINUTE {
            get {
                return this.tableV_MODEL_RAIN_FIFTEEN_MINUTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_MODEL_RAIN_FIVE_MINUTEDataTable V_MODEL_RAIN_FIVE_MINUTE {
            get {
                return this.tableV_MODEL_RAIN_FIVE_MINUTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_MODEL_RAIN_ONE_HOURDataTable V_MODEL_RAIN_ONE_HOUR {
            get {
                return this.tableV_MODEL_RAIN_ONE_HOUR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_MODEL_RAIN_SIX_MINUTEDataTable V_MODEL_RAIN_SIX_MINUTE {
            get {
                return this.tableV_MODEL_RAIN_SIX_MINUTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_MODEL_RAIN_TEN_MINUTEDataTable V_MODEL_RAIN_TEN_MINUTE {
            get {
                return this.tableV_MODEL_RAIN_TEN_MINUTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_MODEL_RAIN_THIRTY_MINUTEDataTable V_MODEL_RAIN_THIRTY_MINUTE {
            get {
                return this.tableV_MODEL_RAIN_THIRTY_MINUTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_MODEL_RAIN_TWELVE_MINUTEDataTable V_MODEL_RAIN_TWELVE_MINUTE {
            get {
                return this.tableV_MODEL_RAIN_TWELVE_MINUTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_MODEL_RAIN_TWENTY_MINUTEDataTable V_MODEL_RAIN_TWENTY_MINUTE {
            get {
                return this.tableV_MODEL_RAIN_TWENTY_MINUTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_MODELING_RAIN_FIVE_MINUTEDataTable V_MODELING_RAIN_FIVE_MINUTE {
            get {
                return this.tableV_MODELING_RAIN_FIVE_MINUTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_RAIN_DATADataTable V_RAIN_DATA {
            get {
                return this.tableV_RAIN_DATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_RAIN_HISTORY_DOWNTIMEDataTable V_RAIN_HISTORY_DOWNTIME {
            get {
                return this.tableV_RAIN_HISTORY_DOWNTIME;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_RAIN_SENSORDataTable V_RAIN_SENSOR {
            get {
                return this.tableV_RAIN_SENSOR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DEPTH_DATADataTable DEPTH_DATA {
            get {
                return this.tableDEPTH_DATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ENVIRON_SENSORDataTable ENVIRON_SENSOR {
            get {
                return this.tableENVIRON_SENSOR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FLOW_DATADataTable FLOW_DATA {
            get {
                return this.tableFLOW_DATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FLOWCOMPUTED_DATADataTable FLOWCOMPUTED_DATA {
            get {
                return this.tableFLOWCOMPUTED_DATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VELOCITY_DATADataTable VELOCITY_DATA {
            get {
                return this.tableVELOCITY_DATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable1DataTable DataTable1 {
            get {
                return this.tableDataTable1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            NEPTUNEDataSet cln = ((NEPTUNEDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DOWNTIME"] != null)) {
                    base.Tables.Add(new DOWNTIMEDataTable(ds.Tables["DOWNTIME"]));
                }
                if ((ds.Tables["RAIN_DATA"] != null)) {
                    base.Tables.Add(new RAIN_DATADataTable(ds.Tables["RAIN_DATA"]));
                }
                if ((ds.Tables["RAIN_DATA_DOWN"] != null)) {
                    base.Tables.Add(new RAIN_DATA_DOWNDataTable(ds.Tables["RAIN_DATA_DOWN"]));
                }
                if ((ds.Tables["RAIN_SENSOR"] != null)) {
                    base.Tables.Add(new RAIN_SENSORDataTable(ds.Tables["RAIN_SENSOR"]));
                }
                if ((ds.Tables["STATION"] != null)) {
                    base.Tables.Add(new STATIONDataTable(ds.Tables["STATION"]));
                }
                if ((ds.Tables["V_DOWNTIME"] != null)) {
                    base.Tables.Add(new V_DOWNTIMEDataTable(ds.Tables["V_DOWNTIME"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_DOWNTIME"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_DOWNTIMEDataTable(ds.Tables["V_MODEL_RAIN_DOWNTIME"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_FIFTEEN_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_FIFTEEN_MINUTEDataTable(ds.Tables["V_MODEL_RAIN_FIFTEEN_MINUTE"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_FIVE_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_FIVE_MINUTEDataTable(ds.Tables["V_MODEL_RAIN_FIVE_MINUTE"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_ONE_HOUR"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_ONE_HOURDataTable(ds.Tables["V_MODEL_RAIN_ONE_HOUR"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_SIX_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_SIX_MINUTEDataTable(ds.Tables["V_MODEL_RAIN_SIX_MINUTE"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_TEN_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_TEN_MINUTEDataTable(ds.Tables["V_MODEL_RAIN_TEN_MINUTE"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_THIRTY_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_THIRTY_MINUTEDataTable(ds.Tables["V_MODEL_RAIN_THIRTY_MINUTE"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_TWELVE_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_TWELVE_MINUTEDataTable(ds.Tables["V_MODEL_RAIN_TWELVE_MINUTE"]));
                }
                if ((ds.Tables["V_MODEL_RAIN_TWENTY_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODEL_RAIN_TWENTY_MINUTEDataTable(ds.Tables["V_MODEL_RAIN_TWENTY_MINUTE"]));
                }
                if ((ds.Tables["V_MODELING_RAIN_FIVE_MINUTE"] != null)) {
                    base.Tables.Add(new V_MODELING_RAIN_FIVE_MINUTEDataTable(ds.Tables["V_MODELING_RAIN_FIVE_MINUTE"]));
                }
                if ((ds.Tables["V_RAIN_DATA"] != null)) {
                    base.Tables.Add(new V_RAIN_DATADataTable(ds.Tables["V_RAIN_DATA"]));
                }
                if ((ds.Tables["V_RAIN_HISTORY_DOWNTIME"] != null)) {
                    base.Tables.Add(new V_RAIN_HISTORY_DOWNTIMEDataTable(ds.Tables["V_RAIN_HISTORY_DOWNTIME"]));
                }
                if ((ds.Tables["V_RAIN_SENSOR"] != null)) {
                    base.Tables.Add(new V_RAIN_SENSORDataTable(ds.Tables["V_RAIN_SENSOR"]));
                }
                if ((ds.Tables["DEPTH_DATA"] != null)) {
                    base.Tables.Add(new DEPTH_DATADataTable(ds.Tables["DEPTH_DATA"]));
                }
                if ((ds.Tables["ENVIRON_SENSOR"] != null)) {
                    base.Tables.Add(new ENVIRON_SENSORDataTable(ds.Tables["ENVIRON_SENSOR"]));
                }
                if ((ds.Tables["FLOW_DATA"] != null)) {
                    base.Tables.Add(new FLOW_DATADataTable(ds.Tables["FLOW_DATA"]));
                }
                if ((ds.Tables["FLOWCOMPUTED_DATA"] != null)) {
                    base.Tables.Add(new FLOWCOMPUTED_DATADataTable(ds.Tables["FLOWCOMPUTED_DATA"]));
                }
                if ((ds.Tables["VELOCITY_DATA"] != null)) {
                    base.Tables.Add(new VELOCITY_DATADataTable(ds.Tables["VELOCITY_DATA"]));
                }
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDOWNTIME = ((DOWNTIMEDataTable)(base.Tables["DOWNTIME"]));
            if ((initTable == true)) {
                if ((this.tableDOWNTIME != null)) {
                    this.tableDOWNTIME.InitVars();
                }
            }
            this.tableRAIN_DATA = ((RAIN_DATADataTable)(base.Tables["RAIN_DATA"]));
            if ((initTable == true)) {
                if ((this.tableRAIN_DATA != null)) {
                    this.tableRAIN_DATA.InitVars();
                }
            }
            this.tableRAIN_DATA_DOWN = ((RAIN_DATA_DOWNDataTable)(base.Tables["RAIN_DATA_DOWN"]));
            if ((initTable == true)) {
                if ((this.tableRAIN_DATA_DOWN != null)) {
                    this.tableRAIN_DATA_DOWN.InitVars();
                }
            }
            this.tableRAIN_SENSOR = ((RAIN_SENSORDataTable)(base.Tables["RAIN_SENSOR"]));
            if ((initTable == true)) {
                if ((this.tableRAIN_SENSOR != null)) {
                    this.tableRAIN_SENSOR.InitVars();
                }
            }
            this.tableSTATION = ((STATIONDataTable)(base.Tables["STATION"]));
            if ((initTable == true)) {
                if ((this.tableSTATION != null)) {
                    this.tableSTATION.InitVars();
                }
            }
            this.tableV_DOWNTIME = ((V_DOWNTIMEDataTable)(base.Tables["V_DOWNTIME"]));
            if ((initTable == true)) {
                if ((this.tableV_DOWNTIME != null)) {
                    this.tableV_DOWNTIME.InitVars();
                }
            }
            this.tableV_MODEL_RAIN_DOWNTIME = ((V_MODEL_RAIN_DOWNTIMEDataTable)(base.Tables["V_MODEL_RAIN_DOWNTIME"]));
            if ((initTable == true)) {
                if ((this.tableV_MODEL_RAIN_DOWNTIME != null)) {
                    this.tableV_MODEL_RAIN_DOWNTIME.InitVars();
                }
            }
            this.tableV_MODEL_RAIN_FIFTEEN_MINUTE = ((V_MODEL_RAIN_FIFTEEN_MINUTEDataTable)(base.Tables["V_MODEL_RAIN_FIFTEEN_MINUTE"]));
            if ((initTable == true)) {
                if ((this.tableV_MODEL_RAIN_FIFTEEN_MINUTE != null)) {
                    this.tableV_MODEL_RAIN_FIFTEEN_MINUTE.InitVars();
                }
            }
            this.tableV_MODEL_RAIN_FIVE_MINUTE = ((V_MODEL_RAIN_FIVE_MINUTEDataTable)(base.Tables["V_MODEL_RAIN_FIVE_MINUTE"]));
            if ((initTable == true)) {
                if ((this.tableV_MODEL_RAIN_FIVE_MINUTE != null)) {
                    this.tableV_MODEL_RAIN_FIVE_MINUTE.InitVars();
                }
            }
            this.tableV_MODEL_RAIN_ONE_HOUR = ((V_MODEL_RAIN_ONE_HOURDataTable)(base.Tables["V_MODEL_RAIN_ONE_HOUR"]));
            if ((initTable == true)) {
                if ((this.tableV_MODEL_RAIN_ONE_HOUR != null)) {
                    this.tableV_MODEL_RAIN_ONE_HOUR.InitVars();
                }
            }
            this.tableV_MODEL_RAIN_SIX_MINUTE = ((V_MODEL_RAIN_SIX_MINUTEDataTable)(base.Tables["V_MODEL_RAIN_SIX_MINUTE"]));
            if ((initTable == true)) {
                if ((this.tableV_MODEL_RAIN_SIX_MINUTE != null)) {
                    this.tableV_MODEL_RAIN_SIX_MINUTE.InitVars();
                }
            }
            this.tableV_MODEL_RAIN_TEN_MINUTE = ((V_MODEL_RAIN_TEN_MINUTEDataTable)(base.Tables["V_MODEL_RAIN_TEN_MINUTE"]));
            if ((initTable == true)) {
                if ((this.tableV_MODEL_RAIN_TEN_MINUTE != null)) {
                    this.tableV_MODEL_RAIN_TEN_MINUTE.InitVars();
                }
            }
            this.tableV_MODEL_RAIN_THIRTY_MINUTE = ((V_MODEL_RAIN_THIRTY_MINUTEDataTable)(base.Tables["V_MODEL_RAIN_THIRTY_MINUTE"]));
            if ((initTable == true)) {
                if ((this.tableV_MODEL_RAIN_THIRTY_MINUTE != null)) {
                    this.tableV_MODEL_RAIN_THIRTY_MINUTE.InitVars();
                }
            }
            this.tableV_MODEL_RAIN_TWELVE_MINUTE = ((V_MODEL_RAIN_TWELVE_MINUTEDataTable)(base.Tables["V_MODEL_RAIN_TWELVE_MINUTE"]));
            if ((initTable == true)) {
                if ((this.tableV_MODEL_RAIN_TWELVE_MINUTE != null)) {
                    this.tableV_MODEL_RAIN_TWELVE_MINUTE.InitVars();
                }
            }
            this.tableV_MODEL_RAIN_TWENTY_MINUTE = ((V_MODEL_RAIN_TWENTY_MINUTEDataTable)(base.Tables["V_MODEL_RAIN_TWENTY_MINUTE"]));
            if ((initTable == true)) {
                if ((this.tableV_MODEL_RAIN_TWENTY_MINUTE != null)) {
                    this.tableV_MODEL_RAIN_TWENTY_MINUTE.InitVars();
                }
            }
            this.tableV_MODELING_RAIN_FIVE_MINUTE = ((V_MODELING_RAIN_FIVE_MINUTEDataTable)(base.Tables["V_MODELING_RAIN_FIVE_MINUTE"]));
            if ((initTable == true)) {
                if ((this.tableV_MODELING_RAIN_FIVE_MINUTE != null)) {
                    this.tableV_MODELING_RAIN_FIVE_MINUTE.InitVars();
                }
            }
            this.tableV_RAIN_DATA = ((V_RAIN_DATADataTable)(base.Tables["V_RAIN_DATA"]));
            if ((initTable == true)) {
                if ((this.tableV_RAIN_DATA != null)) {
                    this.tableV_RAIN_DATA.InitVars();
                }
            }
            this.tableV_RAIN_HISTORY_DOWNTIME = ((V_RAIN_HISTORY_DOWNTIMEDataTable)(base.Tables["V_RAIN_HISTORY_DOWNTIME"]));
            if ((initTable == true)) {
                if ((this.tableV_RAIN_HISTORY_DOWNTIME != null)) {
                    this.tableV_RAIN_HISTORY_DOWNTIME.InitVars();
                }
            }
            this.tableV_RAIN_SENSOR = ((V_RAIN_SENSORDataTable)(base.Tables["V_RAIN_SENSOR"]));
            if ((initTable == true)) {
                if ((this.tableV_RAIN_SENSOR != null)) {
                    this.tableV_RAIN_SENSOR.InitVars();
                }
            }
            this.tableDEPTH_DATA = ((DEPTH_DATADataTable)(base.Tables["DEPTH_DATA"]));
            if ((initTable == true)) {
                if ((this.tableDEPTH_DATA != null)) {
                    this.tableDEPTH_DATA.InitVars();
                }
            }
            this.tableENVIRON_SENSOR = ((ENVIRON_SENSORDataTable)(base.Tables["ENVIRON_SENSOR"]));
            if ((initTable == true)) {
                if ((this.tableENVIRON_SENSOR != null)) {
                    this.tableENVIRON_SENSOR.InitVars();
                }
            }
            this.tableFLOW_DATA = ((FLOW_DATADataTable)(base.Tables["FLOW_DATA"]));
            if ((initTable == true)) {
                if ((this.tableFLOW_DATA != null)) {
                    this.tableFLOW_DATA.InitVars();
                }
            }
            this.tableFLOWCOMPUTED_DATA = ((FLOWCOMPUTED_DATADataTable)(base.Tables["FLOWCOMPUTED_DATA"]));
            if ((initTable == true)) {
                if ((this.tableFLOWCOMPUTED_DATA != null)) {
                    this.tableFLOWCOMPUTED_DATA.InitVars();
                }
            }
            this.tableVELOCITY_DATA = ((VELOCITY_DATADataTable)(base.Tables["VELOCITY_DATA"]));
            if ((initTable == true)) {
                if ((this.tableVELOCITY_DATA != null)) {
                    this.tableVELOCITY_DATA.InitVars();
                }
            }
            this.tableDataTable1 = ((DataTable1DataTable)(base.Tables["DataTable1"]));
            if ((initTable == true)) {
                if ((this.tableDataTable1 != null)) {
                    this.tableDataTable1.InitVars();
                }
            }
            this.relationFK_DOWNTIME_STATION = this.Relations["FK_DOWNTIME_STATION"];
            this.relationFK_RAIN_SENSOR_STATION = this.Relations["FK_RAIN_SENSOR_STATION"];
            this.relationFK_ENVIRON_SENSOR_STATION = this.Relations["FK_ENVIRON_SENSOR_STATION"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "NEPTUNEDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/NEPTUNEDataSet.xsd";
            this.EnforceConstraints = false;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDOWNTIME = new DOWNTIMEDataTable();
            base.Tables.Add(this.tableDOWNTIME);
            this.tableRAIN_DATA = new RAIN_DATADataTable();
            base.Tables.Add(this.tableRAIN_DATA);
            this.tableRAIN_DATA_DOWN = new RAIN_DATA_DOWNDataTable();
            base.Tables.Add(this.tableRAIN_DATA_DOWN);
            this.tableRAIN_SENSOR = new RAIN_SENSORDataTable();
            base.Tables.Add(this.tableRAIN_SENSOR);
            this.tableSTATION = new STATIONDataTable();
            base.Tables.Add(this.tableSTATION);
            this.tableV_DOWNTIME = new V_DOWNTIMEDataTable();
            base.Tables.Add(this.tableV_DOWNTIME);
            this.tableV_MODEL_RAIN_DOWNTIME = new V_MODEL_RAIN_DOWNTIMEDataTable();
            base.Tables.Add(this.tableV_MODEL_RAIN_DOWNTIME);
            this.tableV_MODEL_RAIN_FIFTEEN_MINUTE = new V_MODEL_RAIN_FIFTEEN_MINUTEDataTable();
            base.Tables.Add(this.tableV_MODEL_RAIN_FIFTEEN_MINUTE);
            this.tableV_MODEL_RAIN_FIVE_MINUTE = new V_MODEL_RAIN_FIVE_MINUTEDataTable();
            base.Tables.Add(this.tableV_MODEL_RAIN_FIVE_MINUTE);
            this.tableV_MODEL_RAIN_ONE_HOUR = new V_MODEL_RAIN_ONE_HOURDataTable();
            base.Tables.Add(this.tableV_MODEL_RAIN_ONE_HOUR);
            this.tableV_MODEL_RAIN_SIX_MINUTE = new V_MODEL_RAIN_SIX_MINUTEDataTable();
            base.Tables.Add(this.tableV_MODEL_RAIN_SIX_MINUTE);
            this.tableV_MODEL_RAIN_TEN_MINUTE = new V_MODEL_RAIN_TEN_MINUTEDataTable();
            base.Tables.Add(this.tableV_MODEL_RAIN_TEN_MINUTE);
            this.tableV_MODEL_RAIN_THIRTY_MINUTE = new V_MODEL_RAIN_THIRTY_MINUTEDataTable();
            base.Tables.Add(this.tableV_MODEL_RAIN_THIRTY_MINUTE);
            this.tableV_MODEL_RAIN_TWELVE_MINUTE = new V_MODEL_RAIN_TWELVE_MINUTEDataTable();
            base.Tables.Add(this.tableV_MODEL_RAIN_TWELVE_MINUTE);
            this.tableV_MODEL_RAIN_TWENTY_MINUTE = new V_MODEL_RAIN_TWENTY_MINUTEDataTable();
            base.Tables.Add(this.tableV_MODEL_RAIN_TWENTY_MINUTE);
            this.tableV_MODELING_RAIN_FIVE_MINUTE = new V_MODELING_RAIN_FIVE_MINUTEDataTable();
            base.Tables.Add(this.tableV_MODELING_RAIN_FIVE_MINUTE);
            this.tableV_RAIN_DATA = new V_RAIN_DATADataTable();
            base.Tables.Add(this.tableV_RAIN_DATA);
            this.tableV_RAIN_HISTORY_DOWNTIME = new V_RAIN_HISTORY_DOWNTIMEDataTable();
            base.Tables.Add(this.tableV_RAIN_HISTORY_DOWNTIME);
            this.tableV_RAIN_SENSOR = new V_RAIN_SENSORDataTable();
            base.Tables.Add(this.tableV_RAIN_SENSOR);
            this.tableDEPTH_DATA = new DEPTH_DATADataTable();
            base.Tables.Add(this.tableDEPTH_DATA);
            this.tableENVIRON_SENSOR = new ENVIRON_SENSORDataTable();
            base.Tables.Add(this.tableENVIRON_SENSOR);
            this.tableFLOW_DATA = new FLOW_DATADataTable();
            base.Tables.Add(this.tableFLOW_DATA);
            this.tableFLOWCOMPUTED_DATA = new FLOWCOMPUTED_DATADataTable();
            base.Tables.Add(this.tableFLOWCOMPUTED_DATA);
            this.tableVELOCITY_DATA = new VELOCITY_DATADataTable();
            base.Tables.Add(this.tableVELOCITY_DATA);
            this.tableDataTable1 = new DataTable1DataTable();
            base.Tables.Add(this.tableDataTable1);
            this.relationFK_DOWNTIME_STATION = new global::System.Data.DataRelation("FK_DOWNTIME_STATION", new global::System.Data.DataColumn[] {
                        this.tableSTATION.station_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableDOWNTIME.station_idColumn}, false);
            this.Relations.Add(this.relationFK_DOWNTIME_STATION);
            this.relationFK_RAIN_SENSOR_STATION = new global::System.Data.DataRelation("FK_RAIN_SENSOR_STATION", new global::System.Data.DataColumn[] {
                        this.tableSTATION.station_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableRAIN_SENSOR.station_idColumn}, false);
            this.Relations.Add(this.relationFK_RAIN_SENSOR_STATION);
            this.relationFK_ENVIRON_SENSOR_STATION = new global::System.Data.DataRelation("FK_ENVIRON_SENSOR_STATION", new global::System.Data.DataColumn[] {
                        this.tableSTATION.station_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableENVIRON_SENSOR.station_idColumn}, false);
            this.Relations.Add(this.relationFK_ENVIRON_SENSOR_STATION);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDOWNTIME() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRAIN_DATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRAIN_DATA_DOWN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRAIN_SENSOR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSTATION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_DOWNTIME() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_MODEL_RAIN_DOWNTIME() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_MODEL_RAIN_FIFTEEN_MINUTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_MODEL_RAIN_FIVE_MINUTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_MODEL_RAIN_ONE_HOUR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_MODEL_RAIN_SIX_MINUTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_MODEL_RAIN_TEN_MINUTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_MODEL_RAIN_THIRTY_MINUTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_MODEL_RAIN_TWELVE_MINUTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_MODEL_RAIN_TWENTY_MINUTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_MODELING_RAIN_FIVE_MINUTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_RAIN_DATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_RAIN_HISTORY_DOWNTIME() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_RAIN_SENSOR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDEPTH_DATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeENVIRON_SENSOR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFLOW_DATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFLOWCOMPUTED_DATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVELOCITY_DATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataTable1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            NEPTUNEDataSet ds = new NEPTUNEDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        /*public delegate void DOWNTIMERowChangeEventHandler(object sender, DOWNTIMERowChangeEvent e);
        
        public delegate void RAIN_DATARowChangeEventHandler(object sender, RAIN_DATARowChangeEvent e);
        
        public delegate void RAIN_DATA_DOWNRowChangeEventHandler(object sender, RAIN_DATA_DOWNRowChangeEvent e);
        
        public delegate void RAIN_SENSORRowChangeEventHandler(object sender, RAIN_SENSORRowChangeEvent e);
        
        public delegate void STATIONRowChangeEventHandler(object sender, STATIONRowChangeEvent e);
        
        public delegate void V_DOWNTIMERowChangeEventHandler(object sender, V_DOWNTIMERowChangeEvent e);
        
        public delegate void V_MODEL_RAIN_DOWNTIMERowChangeEventHandler(object sender, V_MODEL_RAIN_DOWNTIMERowChangeEvent e);
        
        public delegate void V_MODEL_RAIN_FIFTEEN_MINUTERowChangeEventHandler(object sender, V_MODEL_RAIN_FIFTEEN_MINUTERowChangeEvent e);
        
        public delegate void V_MODEL_RAIN_FIVE_MINUTERowChangeEventHandler(object sender, V_MODEL_RAIN_FIVE_MINUTERowChangeEvent e);
        
        public delegate void V_MODEL_RAIN_ONE_HOURRowChangeEventHandler(object sender, V_MODEL_RAIN_ONE_HOURRowChangeEvent e);
        
        public delegate void V_MODEL_RAIN_SIX_MINUTERowChangeEventHandler(object sender, V_MODEL_RAIN_SIX_MINUTERowChangeEvent e);
        
        public delegate void V_MODEL_RAIN_TEN_MINUTERowChangeEventHandler(object sender, V_MODEL_RAIN_TEN_MINUTERowChangeEvent e);
        
        public delegate void V_MODEL_RAIN_THIRTY_MINUTERowChangeEventHandler(object sender, V_MODEL_RAIN_THIRTY_MINUTERowChangeEvent e);
        
        public delegate void V_MODEL_RAIN_TWELVE_MINUTERowChangeEventHandler(object sender, V_MODEL_RAIN_TWELVE_MINUTERowChangeEvent e);
        
        public delegate void V_MODEL_RAIN_TWENTY_MINUTERowChangeEventHandler(object sender, V_MODEL_RAIN_TWENTY_MINUTERowChangeEvent e);
        
        public delegate void V_MODELING_RAIN_FIVE_MINUTERowChangeEventHandler(object sender, V_MODELING_RAIN_FIVE_MINUTERowChangeEvent e);
        
        public delegate void V_RAIN_DATARowChangeEventHandler(object sender, V_RAIN_DATARowChangeEvent e);
        
        public delegate void V_RAIN_HISTORY_DOWNTIMERowChangeEventHandler(object sender, V_RAIN_HISTORY_DOWNTIMERowChangeEvent e);
        
        public delegate void V_RAIN_SENSORRowChangeEventHandler(object sender, V_RAIN_SENSORRowChangeEvent e);
        
        public delegate void DEPTH_DATARowChangeEventHandler(object sender, DEPTH_DATARowChangeEvent e);
        
        public delegate void ENVIRON_SENSORRowChangeEventHandler(object sender, ENVIRON_SENSORRowChangeEvent e);
        
        public delegate void FLOW_DATARowChangeEventHandler(object sender, FLOW_DATARowChangeEvent e);
        
        public delegate void FLOWCOMPUTED_DATARowChangeEventHandler(object sender, FLOWCOMPUTED_DATARowChangeEvent e);
        
        public delegate void VELOCITY_DATARowChangeEventHandler(object sender, VELOCITY_DATARowChangeEvent e);
        
        public delegate void DataTable1RowChangeEventHandler(object sender, DataTable1RowChangeEvent e);*/
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DOWNTIMEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columndowntime_id;
            
            private global::System.Data.DataColumn columnstation_id;
            
            private global::System.Data.DataColumn columnenviron_sensor_id;
            
            private global::System.Data.DataColumn columnlocation_qualifier;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columnevent_description;
            
            private global::System.Data.DataColumn columndata_category;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columncreate_by;
            
            private global::System.Data.DataColumn columnapplied_date;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnupdate_by;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOWNTIMEDataTable() {
                this.TableName = "DOWNTIME";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DOWNTIMEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DOWNTIMEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn downtime_idColumn {
                get {
                    return this.columndowntime_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn station_idColumn {
                get {
                    return this.columnstation_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn environ_sensor_idColumn {
                get {
                    return this.columnenviron_sensor_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn location_qualifierColumn {
                get {
                    return this.columnlocation_qualifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn event_descriptionColumn {
                get {
                    return this.columnevent_description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn data_categoryColumn {
                get {
                    return this.columndata_category;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_byColumn {
                get {
                    return this.columncreate_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn applied_dateColumn {
                get {
                    return this.columnapplied_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_byColumn {
                get {
                    return this.columnupdate_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOWNTIMERow this[int index] {
                get {
                    return ((DOWNTIMERow)(this.Rows[index]));
                }
            }
            
            public event DOWNTIMERowChangeEventHandler DOWNTIMERowChanging;
            
            public event DOWNTIMERowChangeEventHandler DOWNTIMERowChanged;
            
            public event DOWNTIMERowChangeEventHandler DOWNTIMERowDeleting;
            
            public event DOWNTIMERowChangeEventHandler DOWNTIMERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDOWNTIMERow(DOWNTIMERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOWNTIMERow AddDOWNTIMERow(STATIONRow parentSTATIONRowByFK_DOWNTIME_STATION, int environ_sensor_id, string location_qualifier, System.DateTime start_date, System.DateTime end_date, string event_description, string data_category, System.DateTime create_date, string create_by, System.DateTime applied_date, System.DateTime update_date, string update_by) {
                DOWNTIMERow rowDOWNTIMERow = ((DOWNTIMERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        environ_sensor_id,
                        location_qualifier,
                        start_date,
                        end_date,
                        event_description,
                        data_category,
                        create_date,
                        create_by,
                        applied_date,
                        update_date,
                        update_by};
                if ((parentSTATIONRowByFK_DOWNTIME_STATION != null)) {
                    columnValuesArray[1] = parentSTATIONRowByFK_DOWNTIME_STATION[0];
                }
                rowDOWNTIMERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDOWNTIMERow);
                return rowDOWNTIMERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOWNTIMERow FindBydowntime_id(int downtime_id) {
                return ((DOWNTIMERow)(this.Rows.Find(new object[] {
                            downtime_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DOWNTIMEDataTable cln = ((DOWNTIMEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DOWNTIMEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndowntime_id = base.Columns["downtime_id"];
                this.columnstation_id = base.Columns["station_id"];
                this.columnenviron_sensor_id = base.Columns["environ_sensor_id"];
                this.columnlocation_qualifier = base.Columns["location_qualifier"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columnevent_description = base.Columns["event_description"];
                this.columndata_category = base.Columns["data_category"];
                this.columncreate_date = base.Columns["create_date"];
                this.columncreate_by = base.Columns["create_by"];
                this.columnapplied_date = base.Columns["applied_date"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnupdate_by = base.Columns["update_by"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndowntime_id = new global::System.Data.DataColumn("downtime_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndowntime_id);
                this.columnstation_id = new global::System.Data.DataColumn("station_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstation_id);
                this.columnenviron_sensor_id = new global::System.Data.DataColumn("environ_sensor_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenviron_sensor_id);
                this.columnlocation_qualifier = new global::System.Data.DataColumn("location_qualifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocation_qualifier);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columnevent_description = new global::System.Data.DataColumn("event_description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnevent_description);
                this.columndata_category = new global::System.Data.DataColumn("data_category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndata_category);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columncreate_by = new global::System.Data.DataColumn("create_by", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_by);
                this.columnapplied_date = new global::System.Data.DataColumn("applied_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplied_date);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnupdate_by = new global::System.Data.DataColumn("update_by", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_by);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columndowntime_id}, true));
                this.columndowntime_id.AutoIncrement = true;
                this.columndowntime_id.AllowDBNull = false;
                this.columndowntime_id.ReadOnly = true;
                this.columndowntime_id.Unique = true;
                this.columnstation_id.AllowDBNull = false;
                this.columnlocation_qualifier.MaxLength = 25;
                this.columnstart_date.AllowDBNull = false;
                this.columnend_date.AllowDBNull = false;
                this.columnevent_description.AllowDBNull = false;
                this.columnevent_description.MaxLength = 255;
                this.columndata_category.AllowDBNull = false;
                this.columndata_category.MaxLength = 50;
                this.columncreate_date.AllowDBNull = false;
                this.columncreate_by.AllowDBNull = false;
                this.columncreate_by.MaxLength = 50;
                this.columnupdate_date.AllowDBNull = false;
                this.columnupdate_by.AllowDBNull = false;
                this.columnupdate_by.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOWNTIMERow NewDOWNTIMERow() {
                return ((DOWNTIMERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DOWNTIMERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DOWNTIMERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DOWNTIMERowChanged != null)) {
                    this.DOWNTIMERowChanged(this, new DOWNTIMERowChangeEvent(((DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DOWNTIMERowChanging != null)) {
                    this.DOWNTIMERowChanging(this, new DOWNTIMERowChangeEvent(((DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DOWNTIMERowDeleted != null)) {
                    this.DOWNTIMERowDeleted(this, new DOWNTIMERowChangeEvent(((DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DOWNTIMERowDeleting != null)) {
                    this.DOWNTIMERowDeleting(this, new DOWNTIMERowChangeEvent(((DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDOWNTIMERow(DOWNTIMERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DOWNTIMEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RAIN_DATADataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columncalendar_date_id;
            
            private global::System.Data.DataColumn columntime_of_day_id;
            
            private global::System.Data.DataColumn columnstation_id;
            
            private global::System.Data.DataColumn columnrain_tip_time;
            
            private global::System.Data.DataColumn columnrainfall_amount_inches;
            
            private global::System.Data.DataColumn columnload_date;
            
            private global::System.Data.DataColumn columnsource_filename;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_DATADataTable() {
                this.TableName = "RAIN_DATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RAIN_DATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RAIN_DATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn calendar_date_idColumn {
                get {
                    return this.columncalendar_date_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn time_of_day_idColumn {
                get {
                    return this.columntime_of_day_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn station_idColumn {
                get {
                    return this.columnstation_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rain_tip_timeColumn {
                get {
                    return this.columnrain_tip_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rainfall_amount_inchesColumn {
                get {
                    return this.columnrainfall_amount_inches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn load_dateColumn {
                get {
                    return this.columnload_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn source_filenameColumn {
                get {
                    return this.columnsource_filename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_DATARow this[int index] {
                get {
                    return ((RAIN_DATARow)(this.Rows[index]));
                }
            }
            
            public event RAIN_DATARowChangeEventHandler RAIN_DATARowChanging;
            
            public event RAIN_DATARowChangeEventHandler RAIN_DATARowChanged;
            
            public event RAIN_DATARowChangeEventHandler RAIN_DATARowDeleting;
            
            public event RAIN_DATARowChangeEventHandler RAIN_DATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRAIN_DATARow(RAIN_DATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_DATARow AddRAIN_DATARow(int calendar_date_id, int time_of_day_id, int station_id, System.DateTime rain_tip_time, decimal rainfall_amount_inches, System.DateTime load_date, string source_filename) {
                RAIN_DATARow rowRAIN_DATARow = ((RAIN_DATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        calendar_date_id,
                        time_of_day_id,
                        station_id,
                        rain_tip_time,
                        rainfall_amount_inches,
                        load_date,
                        source_filename};
                rowRAIN_DATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRAIN_DATARow);
                return rowRAIN_DATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RAIN_DATADataTable cln = ((RAIN_DATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RAIN_DATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncalendar_date_id = base.Columns["calendar_date_id"];
                this.columntime_of_day_id = base.Columns["time_of_day_id"];
                this.columnstation_id = base.Columns["station_id"];
                this.columnrain_tip_time = base.Columns["rain_tip_time"];
                this.columnrainfall_amount_inches = base.Columns["rainfall_amount_inches"];
                this.columnload_date = base.Columns["load_date"];
                this.columnsource_filename = base.Columns["source_filename"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncalendar_date_id = new global::System.Data.DataColumn("calendar_date_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalendar_date_id);
                this.columntime_of_day_id = new global::System.Data.DataColumn("time_of_day_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntime_of_day_id);
                this.columnstation_id = new global::System.Data.DataColumn("station_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstation_id);
                this.columnrain_tip_time = new global::System.Data.DataColumn("rain_tip_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrain_tip_time);
                this.columnrainfall_amount_inches = new global::System.Data.DataColumn("rainfall_amount_inches", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrainfall_amount_inches);
                this.columnload_date = new global::System.Data.DataColumn("load_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnload_date);
                this.columnsource_filename = new global::System.Data.DataColumn("source_filename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsource_filename);
                this.columncalendar_date_id.AllowDBNull = false;
                this.columntime_of_day_id.AllowDBNull = false;
                this.columnstation_id.AllowDBNull = false;
                this.columnrain_tip_time.AllowDBNull = false;
                this.columnrainfall_amount_inches.AllowDBNull = false;
                this.columnload_date.AllowDBNull = false;
                this.columnsource_filename.AllowDBNull = false;
                this.columnsource_filename.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_DATARow NewRAIN_DATARow() {
                return ((RAIN_DATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RAIN_DATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RAIN_DATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RAIN_DATARowChanged != null)) {
                    this.RAIN_DATARowChanged(this, new RAIN_DATARowChangeEvent(((RAIN_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RAIN_DATARowChanging != null)) {
                    this.RAIN_DATARowChanging(this, new RAIN_DATARowChangeEvent(((RAIN_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RAIN_DATARowDeleted != null)) {
                    this.RAIN_DATARowDeleted(this, new RAIN_DATARowChangeEvent(((RAIN_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RAIN_DATARowDeleting != null)) {
                    this.RAIN_DATARowDeleting(this, new RAIN_DATARowChangeEvent(((RAIN_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRAIN_DATARow(RAIN_DATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RAIN_DATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RAIN_DATA_DOWNDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrain_data_down_id;
            
            private global::System.Data.DataColumn columncalendar_date_id;
            
            private global::System.Data.DataColumn columntime_of_day_id;
            
            private global::System.Data.DataColumn columnstation_id;
            
            private global::System.Data.DataColumn columnrain_tip_time;
            
            private global::System.Data.DataColumn columnrainfall_amount_inches;
            
            private global::System.Data.DataColumn columnload_date;
            
            private global::System.Data.DataColumn columnsource_filename;
            
            private global::System.Data.DataColumn columndowntime_id;
            
            private global::System.Data.DataColumn columnapplied_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_DATA_DOWNDataTable() {
                this.TableName = "RAIN_DATA_DOWN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RAIN_DATA_DOWNDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RAIN_DATA_DOWNDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rain_data_down_idColumn {
                get {
                    return this.columnrain_data_down_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn calendar_date_idColumn {
                get {
                    return this.columncalendar_date_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn time_of_day_idColumn {
                get {
                    return this.columntime_of_day_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn station_idColumn {
                get {
                    return this.columnstation_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rain_tip_timeColumn {
                get {
                    return this.columnrain_tip_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rainfall_amount_inchesColumn {
                get {
                    return this.columnrainfall_amount_inches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn load_dateColumn {
                get {
                    return this.columnload_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn source_filenameColumn {
                get {
                    return this.columnsource_filename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn downtime_idColumn {
                get {
                    return this.columndowntime_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn applied_dateColumn {
                get {
                    return this.columnapplied_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_DATA_DOWNRow this[int index] {
                get {
                    return ((RAIN_DATA_DOWNRow)(this.Rows[index]));
                }
            }
            
            public event RAIN_DATA_DOWNRowChangeEventHandler RAIN_DATA_DOWNRowChanging;
            
            public event RAIN_DATA_DOWNRowChangeEventHandler RAIN_DATA_DOWNRowChanged;
            
            public event RAIN_DATA_DOWNRowChangeEventHandler RAIN_DATA_DOWNRowDeleting;
            
            public event RAIN_DATA_DOWNRowChangeEventHandler RAIN_DATA_DOWNRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRAIN_DATA_DOWNRow(RAIN_DATA_DOWNRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_DATA_DOWNRow AddRAIN_DATA_DOWNRow(int calendar_date_id, int time_of_day_id, int station_id, System.DateTime rain_tip_time, decimal rainfall_amount_inches, System.DateTime load_date, string source_filename, int downtime_id, System.DateTime applied_date) {
                RAIN_DATA_DOWNRow rowRAIN_DATA_DOWNRow = ((RAIN_DATA_DOWNRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        calendar_date_id,
                        time_of_day_id,
                        station_id,
                        rain_tip_time,
                        rainfall_amount_inches,
                        load_date,
                        source_filename,
                        downtime_id,
                        applied_date};
                rowRAIN_DATA_DOWNRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRAIN_DATA_DOWNRow);
                return rowRAIN_DATA_DOWNRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_DATA_DOWNRow FindByrain_data_down_id(int rain_data_down_id) {
                return ((RAIN_DATA_DOWNRow)(this.Rows.Find(new object[] {
                            rain_data_down_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RAIN_DATA_DOWNDataTable cln = ((RAIN_DATA_DOWNDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RAIN_DATA_DOWNDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrain_data_down_id = base.Columns["rain_data_down_id"];
                this.columncalendar_date_id = base.Columns["calendar_date_id"];
                this.columntime_of_day_id = base.Columns["time_of_day_id"];
                this.columnstation_id = base.Columns["station_id"];
                this.columnrain_tip_time = base.Columns["rain_tip_time"];
                this.columnrainfall_amount_inches = base.Columns["rainfall_amount_inches"];
                this.columnload_date = base.Columns["load_date"];
                this.columnsource_filename = base.Columns["source_filename"];
                this.columndowntime_id = base.Columns["downtime_id"];
                this.columnapplied_date = base.Columns["applied_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrain_data_down_id = new global::System.Data.DataColumn("rain_data_down_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrain_data_down_id);
                this.columncalendar_date_id = new global::System.Data.DataColumn("calendar_date_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalendar_date_id);
                this.columntime_of_day_id = new global::System.Data.DataColumn("time_of_day_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntime_of_day_id);
                this.columnstation_id = new global::System.Data.DataColumn("station_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstation_id);
                this.columnrain_tip_time = new global::System.Data.DataColumn("rain_tip_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrain_tip_time);
                this.columnrainfall_amount_inches = new global::System.Data.DataColumn("rainfall_amount_inches", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrainfall_amount_inches);
                this.columnload_date = new global::System.Data.DataColumn("load_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnload_date);
                this.columnsource_filename = new global::System.Data.DataColumn("source_filename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsource_filename);
                this.columndowntime_id = new global::System.Data.DataColumn("downtime_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndowntime_id);
                this.columnapplied_date = new global::System.Data.DataColumn("applied_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplied_date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnrain_data_down_id}, true));
                this.columnrain_data_down_id.AutoIncrement = true;
                this.columnrain_data_down_id.AllowDBNull = false;
                this.columnrain_data_down_id.ReadOnly = true;
                this.columnrain_data_down_id.Unique = true;
                this.columncalendar_date_id.AllowDBNull = false;
                this.columntime_of_day_id.AllowDBNull = false;
                this.columnstation_id.AllowDBNull = false;
                this.columnrain_tip_time.AllowDBNull = false;
                this.columnrainfall_amount_inches.AllowDBNull = false;
                this.columnload_date.AllowDBNull = false;
                this.columnsource_filename.AllowDBNull = false;
                this.columnsource_filename.MaxLength = 50;
                this.columndowntime_id.AllowDBNull = false;
                this.columnapplied_date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_DATA_DOWNRow NewRAIN_DATA_DOWNRow() {
                return ((RAIN_DATA_DOWNRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RAIN_DATA_DOWNRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RAIN_DATA_DOWNRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RAIN_DATA_DOWNRowChanged != null)) {
                    this.RAIN_DATA_DOWNRowChanged(this, new RAIN_DATA_DOWNRowChangeEvent(((RAIN_DATA_DOWNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RAIN_DATA_DOWNRowChanging != null)) {
                    this.RAIN_DATA_DOWNRowChanging(this, new RAIN_DATA_DOWNRowChangeEvent(((RAIN_DATA_DOWNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RAIN_DATA_DOWNRowDeleted != null)) {
                    this.RAIN_DATA_DOWNRowDeleted(this, new RAIN_DATA_DOWNRowChangeEvent(((RAIN_DATA_DOWNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RAIN_DATA_DOWNRowDeleting != null)) {
                    this.RAIN_DATA_DOWNRowDeleting(this, new RAIN_DATA_DOWNRowChangeEvent(((RAIN_DATA_DOWNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRAIN_DATA_DOWNRow(RAIN_DATA_DOWNRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RAIN_DATA_DOWNDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RAIN_SENSORDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrain_sensor_id;
            
            private global::System.Data.DataColumn columnstation_id;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columncreate_by;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnupdate_by;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_SENSORDataTable() {
                this.TableName = "RAIN_SENSOR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RAIN_SENSORDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RAIN_SENSORDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rain_sensor_idColumn {
                get {
                    return this.columnrain_sensor_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn station_idColumn {
                get {
                    return this.columnstation_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_byColumn {
                get {
                    return this.columncreate_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_byColumn {
                get {
                    return this.columnupdate_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_SENSORRow this[int index] {
                get {
                    return ((RAIN_SENSORRow)(this.Rows[index]));
                }
            }
            
            public event RAIN_SENSORRowChangeEventHandler RAIN_SENSORRowChanging;
            
            public event RAIN_SENSORRowChangeEventHandler RAIN_SENSORRowChanged;
            
            public event RAIN_SENSORRowChangeEventHandler RAIN_SENSORRowDeleting;
            
            public event RAIN_SENSORRowChangeEventHandler RAIN_SENSORRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRAIN_SENSORRow(RAIN_SENSORRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_SENSORRow AddRAIN_SENSORRow(STATIONRow parentSTATIONRowByFK_RAIN_SENSOR_STATION, System.DateTime start_date, System.DateTime end_date, System.DateTime create_date, string create_by, System.DateTime update_date, string update_by) {
                RAIN_SENSORRow rowRAIN_SENSORRow = ((RAIN_SENSORRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        start_date,
                        end_date,
                        create_date,
                        create_by,
                        update_date,
                        update_by};
                if ((parentSTATIONRowByFK_RAIN_SENSOR_STATION != null)) {
                    columnValuesArray[1] = parentSTATIONRowByFK_RAIN_SENSOR_STATION[0];
                }
                rowRAIN_SENSORRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRAIN_SENSORRow);
                return rowRAIN_SENSORRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_SENSORRow FindByrain_sensor_id(int rain_sensor_id) {
                return ((RAIN_SENSORRow)(this.Rows.Find(new object[] {
                            rain_sensor_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RAIN_SENSORDataTable cln = ((RAIN_SENSORDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RAIN_SENSORDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrain_sensor_id = base.Columns["rain_sensor_id"];
                this.columnstation_id = base.Columns["station_id"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columncreate_date = base.Columns["create_date"];
                this.columncreate_by = base.Columns["create_by"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnupdate_by = base.Columns["update_by"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrain_sensor_id = new global::System.Data.DataColumn("rain_sensor_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrain_sensor_id);
                this.columnstation_id = new global::System.Data.DataColumn("station_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstation_id);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columncreate_by = new global::System.Data.DataColumn("create_by", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_by);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnupdate_by = new global::System.Data.DataColumn("update_by", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_by);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnrain_sensor_id}, true));
                this.columnrain_sensor_id.AutoIncrement = true;
                this.columnrain_sensor_id.AllowDBNull = false;
                this.columnrain_sensor_id.ReadOnly = true;
                this.columnrain_sensor_id.Unique = true;
                this.columnstation_id.AllowDBNull = false;
                this.columnstart_date.AllowDBNull = false;
                this.columncreate_date.AllowDBNull = false;
                this.columncreate_by.AllowDBNull = false;
                this.columncreate_by.MaxLength = 50;
                this.columnupdate_date.AllowDBNull = false;
                this.columnupdate_by.AllowDBNull = false;
                this.columnupdate_by.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_SENSORRow NewRAIN_SENSORRow() {
                return ((RAIN_SENSORRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RAIN_SENSORRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RAIN_SENSORRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RAIN_SENSORRowChanged != null)) {
                    this.RAIN_SENSORRowChanged(this, new RAIN_SENSORRowChangeEvent(((RAIN_SENSORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RAIN_SENSORRowChanging != null)) {
                    this.RAIN_SENSORRowChanging(this, new RAIN_SENSORRowChangeEvent(((RAIN_SENSORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RAIN_SENSORRowDeleted != null)) {
                    this.RAIN_SENSORRowDeleted(this, new RAIN_SENSORRowChangeEvent(((RAIN_SENSORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RAIN_SENSORRowDeleting != null)) {
                    this.RAIN_SENSORRowDeleting(this, new RAIN_SENSORRowChangeEvent(((RAIN_SENSORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRAIN_SENSORRow(RAIN_SENSORRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RAIN_SENSORDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class STATIONDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnstation_id;
            
            private global::System.Data.DataColumn columnh2_number;
            
            private global::System.Data.DataColumn columnstation_name;
            
            private global::System.Data.DataColumn columnlocation_description;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columnlocation_type;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columnstate_plane_x_ft;
            
            private global::System.Data.DataColumn columnstate_plane_y_ft;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columncreate_by;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnupdate_by;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATIONDataTable() {
                this.TableName = "STATION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STATIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected STATIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn station_idColumn {
                get {
                    return this.columnstation_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn h2_numberColumn {
                get {
                    return this.columnh2_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn station_nameColumn {
                get {
                    return this.columnstation_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn location_descriptionColumn {
                get {
                    return this.columnlocation_description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn location_typeColumn {
                get {
                    return this.columnlocation_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn state_plane_x_ftColumn {
                get {
                    return this.columnstate_plane_x_ft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn state_plane_y_ftColumn {
                get {
                    return this.columnstate_plane_y_ft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_byColumn {
                get {
                    return this.columncreate_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_byColumn {
                get {
                    return this.columnupdate_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATIONRow this[int index] {
                get {
                    return ((STATIONRow)(this.Rows[index]));
                }
            }
            
            public event STATIONRowChangeEventHandler STATIONRowChanging;
            
            public event STATIONRowChangeEventHandler STATIONRowChanged;
            
            public event STATIONRowChangeEventHandler STATIONRowDeleting;
            
            public event STATIONRowChangeEventHandler STATIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSTATIONRow(STATIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATIONRow AddSTATIONRow(int h2_number, string station_name, string location_description, string address, string location_type, System.DateTime start_date, System.DateTime end_date, int state_plane_x_ft, int state_plane_y_ft, System.DateTime create_date, string create_by, System.DateTime update_date, string update_by) {
                STATIONRow rowSTATIONRow = ((STATIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        h2_number,
                        station_name,
                        location_description,
                        address,
                        location_type,
                        start_date,
                        end_date,
                        state_plane_x_ft,
                        state_plane_y_ft,
                        create_date,
                        create_by,
                        update_date,
                        update_by};
                rowSTATIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSTATIONRow);
                return rowSTATIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATIONRow FindBystation_id(int station_id) {
                return ((STATIONRow)(this.Rows.Find(new object[] {
                            station_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                STATIONDataTable cln = ((STATIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new STATIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstation_id = base.Columns["station_id"];
                this.columnh2_number = base.Columns["h2_number"];
                this.columnstation_name = base.Columns["station_name"];
                this.columnlocation_description = base.Columns["location_description"];
                this.columnaddress = base.Columns["address"];
                this.columnlocation_type = base.Columns["location_type"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columnstate_plane_x_ft = base.Columns["state_plane_x_ft"];
                this.columnstate_plane_y_ft = base.Columns["state_plane_y_ft"];
                this.columncreate_date = base.Columns["create_date"];
                this.columncreate_by = base.Columns["create_by"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnupdate_by = base.Columns["update_by"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstation_id = new global::System.Data.DataColumn("station_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstation_id);
                this.columnh2_number = new global::System.Data.DataColumn("h2_number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnh2_number);
                this.columnstation_name = new global::System.Data.DataColumn("station_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstation_name);
                this.columnlocation_description = new global::System.Data.DataColumn("location_description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocation_description);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columnlocation_type = new global::System.Data.DataColumn("location_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocation_type);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columnstate_plane_x_ft = new global::System.Data.DataColumn("state_plane_x_ft", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate_plane_x_ft);
                this.columnstate_plane_y_ft = new global::System.Data.DataColumn("state_plane_y_ft", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate_plane_y_ft);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columncreate_by = new global::System.Data.DataColumn("create_by", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_by);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnupdate_by = new global::System.Data.DataColumn("update_by", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_by);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnstation_id}, true));
                this.columnstation_id.AutoIncrement = true;
                this.columnstation_id.AllowDBNull = false;
                this.columnstation_id.ReadOnly = true;
                this.columnstation_id.Unique = true;
                this.columnh2_number.AllowDBNull = false;
                this.columnstation_name.AllowDBNull = false;
                this.columnstation_name.MaxLength = 50;
                this.columnlocation_description.MaxLength = 255;
                this.columnaddress.MaxLength = 80;
                this.columnlocation_type.MaxLength = 25;
                this.columnstart_date.AllowDBNull = false;
                this.columncreate_date.AllowDBNull = false;
                this.columncreate_by.AllowDBNull = false;
                this.columncreate_by.MaxLength = 50;
                this.columnupdate_date.AllowDBNull = false;
                this.columnupdate_by.AllowDBNull = false;
                this.columnupdate_by.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATIONRow NewSTATIONRow() {
                return ((STATIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new STATIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(STATIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.STATIONRowChanged != null)) {
                    this.STATIONRowChanged(this, new STATIONRowChangeEvent(((STATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.STATIONRowChanging != null)) {
                    this.STATIONRowChanging(this, new STATIONRowChangeEvent(((STATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.STATIONRowDeleted != null)) {
                    this.STATIONRowDeleted(this, new STATIONRowChangeEvent(((STATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.STATIONRowDeleting != null)) {
                    this.STATIONRowDeleting(this, new STATIONRowChangeEvent(((STATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSTATIONRow(STATIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "STATIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_DOWNTIMEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_DOWNTIMEDataTable() {
                this.TableName = "V_DOWNTIME";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_DOWNTIMEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_DOWNTIMEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_DOWNTIMERow this[int index] {
                get {
                    return ((V_DOWNTIMERow)(this.Rows[index]));
                }
            }
            
            public event V_DOWNTIMERowChangeEventHandler V_DOWNTIMERowChanging;
            
            public event V_DOWNTIMERowChangeEventHandler V_DOWNTIMERowChanged;
            
            public event V_DOWNTIMERowChangeEventHandler V_DOWNTIMERowDeleting;
            
            public event V_DOWNTIMERowChangeEventHandler V_DOWNTIMERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_DOWNTIMERow(V_DOWNTIMERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_DOWNTIMERow AddV_DOWNTIMERow() {
                V_DOWNTIMERow rowV_DOWNTIMERow = ((V_DOWNTIMERow)(this.NewRow()));
                object[] columnValuesArray = new object[0];
                rowV_DOWNTIMERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_DOWNTIMERow);
                return rowV_DOWNTIMERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_DOWNTIMEDataTable cln = ((V_DOWNTIMEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_DOWNTIMEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_DOWNTIMERow NewV_DOWNTIMERow() {
                return ((V_DOWNTIMERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_DOWNTIMERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_DOWNTIMERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_DOWNTIMERowChanged != null)) {
                    this.V_DOWNTIMERowChanged(this, new V_DOWNTIMERowChangeEvent(((V_DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_DOWNTIMERowChanging != null)) {
                    this.V_DOWNTIMERowChanging(this, new V_DOWNTIMERowChangeEvent(((V_DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_DOWNTIMERowDeleted != null)) {
                    this.V_DOWNTIMERowDeleted(this, new V_DOWNTIMERowChangeEvent(((V_DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_DOWNTIMERowDeleting != null)) {
                    this.V_DOWNTIMERowDeleting(this, new V_DOWNTIMERowChangeEvent(((V_DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_DOWNTIMERow(V_DOWNTIMERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_DOWNTIMEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_MODEL_RAIN_DOWNTIMEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnstation_id;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_DOWNTIMEDataTable() {
                this.TableName = "V_MODEL_RAIN_DOWNTIME";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_DOWNTIMEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_MODEL_RAIN_DOWNTIMEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn station_idColumn {
                get {
                    return this.columnstation_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_DOWNTIMERow this[int index] {
                get {
                    return ((V_MODEL_RAIN_DOWNTIMERow)(this.Rows[index]));
                }
            }
            
            public event V_MODEL_RAIN_DOWNTIMERowChangeEventHandler V_MODEL_RAIN_DOWNTIMERowChanging;
            
            public event V_MODEL_RAIN_DOWNTIMERowChangeEventHandler V_MODEL_RAIN_DOWNTIMERowChanged;
            
            public event V_MODEL_RAIN_DOWNTIMERowChangeEventHandler V_MODEL_RAIN_DOWNTIMERowDeleting;
            
            public event V_MODEL_RAIN_DOWNTIMERowChangeEventHandler V_MODEL_RAIN_DOWNTIMERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_MODEL_RAIN_DOWNTIMERow(V_MODEL_RAIN_DOWNTIMERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_DOWNTIMERow AddV_MODEL_RAIN_DOWNTIMERow(int station_id, System.DateTime start_date, System.DateTime end_date) {
                V_MODEL_RAIN_DOWNTIMERow rowV_MODEL_RAIN_DOWNTIMERow = ((V_MODEL_RAIN_DOWNTIMERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        station_id,
                        start_date,
                        end_date};
                rowV_MODEL_RAIN_DOWNTIMERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_MODEL_RAIN_DOWNTIMERow);
                return rowV_MODEL_RAIN_DOWNTIMERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_MODEL_RAIN_DOWNTIMEDataTable cln = ((V_MODEL_RAIN_DOWNTIMEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_MODEL_RAIN_DOWNTIMEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstation_id = base.Columns["station_id"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstation_id = new global::System.Data.DataColumn("station_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstation_id);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columnstart_date.AllowDBNull = false;
                this.columnend_date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_DOWNTIMERow NewV_MODEL_RAIN_DOWNTIMERow() {
                return ((V_MODEL_RAIN_DOWNTIMERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_MODEL_RAIN_DOWNTIMERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_MODEL_RAIN_DOWNTIMERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_MODEL_RAIN_DOWNTIMERowChanged != null)) {
                    this.V_MODEL_RAIN_DOWNTIMERowChanged(this, new V_MODEL_RAIN_DOWNTIMERowChangeEvent(((V_MODEL_RAIN_DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_MODEL_RAIN_DOWNTIMERowChanging != null)) {
                    this.V_MODEL_RAIN_DOWNTIMERowChanging(this, new V_MODEL_RAIN_DOWNTIMERowChangeEvent(((V_MODEL_RAIN_DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_MODEL_RAIN_DOWNTIMERowDeleted != null)) {
                    this.V_MODEL_RAIN_DOWNTIMERowDeleted(this, new V_MODEL_RAIN_DOWNTIMERowChangeEvent(((V_MODEL_RAIN_DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_MODEL_RAIN_DOWNTIMERowDeleting != null)) {
                    this.V_MODEL_RAIN_DOWNTIMERowDeleting(this, new V_MODEL_RAIN_DOWNTIMERowChangeEvent(((V_MODEL_RAIN_DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_MODEL_RAIN_DOWNTIMERow(V_MODEL_RAIN_DOWNTIMERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_MODEL_RAIN_DOWNTIMEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_MODEL_RAIN_FIFTEEN_MINUTEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnh2_number;
            
            private global::System.Data.DataColumn columnfifteen_minute_date_time;
            
            private global::System.Data.DataColumn columnfifteen_minute_sum_inches;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_FIFTEEN_MINUTEDataTable() {
                this.TableName = "V_MODEL_RAIN_FIFTEEN_MINUTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_FIFTEEN_MINUTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_MODEL_RAIN_FIFTEEN_MINUTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn h2_numberColumn {
                get {
                    return this.columnh2_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fifteen_minute_date_timeColumn {
                get {
                    return this.columnfifteen_minute_date_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fifteen_minute_sum_inchesColumn {
                get {
                    return this.columnfifteen_minute_sum_inches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_FIFTEEN_MINUTERow this[int index] {
                get {
                    return ((V_MODEL_RAIN_FIFTEEN_MINUTERow)(this.Rows[index]));
                }
            }
            
            public event V_MODEL_RAIN_FIFTEEN_MINUTERowChangeEventHandler V_MODEL_RAIN_FIFTEEN_MINUTERowChanging;
            
            public event V_MODEL_RAIN_FIFTEEN_MINUTERowChangeEventHandler V_MODEL_RAIN_FIFTEEN_MINUTERowChanged;
            
            public event V_MODEL_RAIN_FIFTEEN_MINUTERowChangeEventHandler V_MODEL_RAIN_FIFTEEN_MINUTERowDeleting;
            
            public event V_MODEL_RAIN_FIFTEEN_MINUTERowChangeEventHandler V_MODEL_RAIN_FIFTEEN_MINUTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_MODEL_RAIN_FIFTEEN_MINUTERow(V_MODEL_RAIN_FIFTEEN_MINUTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_FIFTEEN_MINUTERow AddV_MODEL_RAIN_FIFTEEN_MINUTERow(int h2_number, System.DateTime fifteen_minute_date_time, decimal fifteen_minute_sum_inches) {
                V_MODEL_RAIN_FIFTEEN_MINUTERow rowV_MODEL_RAIN_FIFTEEN_MINUTERow = ((V_MODEL_RAIN_FIFTEEN_MINUTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        h2_number,
                        fifteen_minute_date_time,
                        fifteen_minute_sum_inches};
                rowV_MODEL_RAIN_FIFTEEN_MINUTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_MODEL_RAIN_FIFTEEN_MINUTERow);
                return rowV_MODEL_RAIN_FIFTEEN_MINUTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_MODEL_RAIN_FIFTEEN_MINUTEDataTable cln = ((V_MODEL_RAIN_FIFTEEN_MINUTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_MODEL_RAIN_FIFTEEN_MINUTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnh2_number = base.Columns["h2_number"];
                this.columnfifteen_minute_date_time = base.Columns["fifteen_minute_date_time"];
                this.columnfifteen_minute_sum_inches = base.Columns["fifteen_minute_sum_inches"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnh2_number = new global::System.Data.DataColumn("h2_number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnh2_number);
                this.columnfifteen_minute_date_time = new global::System.Data.DataColumn("fifteen_minute_date_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfifteen_minute_date_time);
                this.columnfifteen_minute_sum_inches = new global::System.Data.DataColumn("fifteen_minute_sum_inches", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfifteen_minute_sum_inches);
                this.columnh2_number.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_FIFTEEN_MINUTERow NewV_MODEL_RAIN_FIFTEEN_MINUTERow() {
                return ((V_MODEL_RAIN_FIFTEEN_MINUTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_MODEL_RAIN_FIFTEEN_MINUTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_MODEL_RAIN_FIFTEEN_MINUTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_MODEL_RAIN_FIFTEEN_MINUTERowChanged != null)) {
                    this.V_MODEL_RAIN_FIFTEEN_MINUTERowChanged(this, new V_MODEL_RAIN_FIFTEEN_MINUTERowChangeEvent(((V_MODEL_RAIN_FIFTEEN_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_MODEL_RAIN_FIFTEEN_MINUTERowChanging != null)) {
                    this.V_MODEL_RAIN_FIFTEEN_MINUTERowChanging(this, new V_MODEL_RAIN_FIFTEEN_MINUTERowChangeEvent(((V_MODEL_RAIN_FIFTEEN_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_MODEL_RAIN_FIFTEEN_MINUTERowDeleted != null)) {
                    this.V_MODEL_RAIN_FIFTEEN_MINUTERowDeleted(this, new V_MODEL_RAIN_FIFTEEN_MINUTERowChangeEvent(((V_MODEL_RAIN_FIFTEEN_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_MODEL_RAIN_FIFTEEN_MINUTERowDeleting != null)) {
                    this.V_MODEL_RAIN_FIFTEEN_MINUTERowDeleting(this, new V_MODEL_RAIN_FIFTEEN_MINUTERowChangeEvent(((V_MODEL_RAIN_FIFTEEN_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_MODEL_RAIN_FIFTEEN_MINUTERow(V_MODEL_RAIN_FIFTEEN_MINUTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_MODEL_RAIN_FIFTEEN_MINUTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_MODEL_RAIN_FIVE_MINUTEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnstation_id;
            
            private global::System.Data.DataColumn columnfive_minute_date_time;
            
            private global::System.Data.DataColumn columnfive_minute_sum_inches;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_FIVE_MINUTEDataTable() {
                this.TableName = "V_MODEL_RAIN_FIVE_MINUTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_FIVE_MINUTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_MODEL_RAIN_FIVE_MINUTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn station_idColumn {
                get {
                    return this.columnstation_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn five_minute_date_timeColumn {
                get {
                    return this.columnfive_minute_date_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn five_minute_sum_inchesColumn {
                get {
                    return this.columnfive_minute_sum_inches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_FIVE_MINUTERow this[int index] {
                get {
                    return ((V_MODEL_RAIN_FIVE_MINUTERow)(this.Rows[index]));
                }
            }
            
            public event V_MODEL_RAIN_FIVE_MINUTERowChangeEventHandler V_MODEL_RAIN_FIVE_MINUTERowChanging;
            
            public event V_MODEL_RAIN_FIVE_MINUTERowChangeEventHandler V_MODEL_RAIN_FIVE_MINUTERowChanged;
            
            public event V_MODEL_RAIN_FIVE_MINUTERowChangeEventHandler V_MODEL_RAIN_FIVE_MINUTERowDeleting;
            
            public event V_MODEL_RAIN_FIVE_MINUTERowChangeEventHandler V_MODEL_RAIN_FIVE_MINUTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_MODEL_RAIN_FIVE_MINUTERow(V_MODEL_RAIN_FIVE_MINUTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_FIVE_MINUTERow AddV_MODEL_RAIN_FIVE_MINUTERow(int station_id, System.DateTime five_minute_date_time, decimal five_minute_sum_inches) {
                V_MODEL_RAIN_FIVE_MINUTERow rowV_MODEL_RAIN_FIVE_MINUTERow = ((V_MODEL_RAIN_FIVE_MINUTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        station_id,
                        five_minute_date_time,
                        five_minute_sum_inches};
                rowV_MODEL_RAIN_FIVE_MINUTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_MODEL_RAIN_FIVE_MINUTERow);
                return rowV_MODEL_RAIN_FIVE_MINUTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_MODEL_RAIN_FIVE_MINUTEDataTable cln = ((V_MODEL_RAIN_FIVE_MINUTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_MODEL_RAIN_FIVE_MINUTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstation_id = base.Columns["station_id"];
                this.columnfive_minute_date_time = base.Columns["five_minute_date_time"];
                this.columnfive_minute_sum_inches = base.Columns["five_minute_sum_inches"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstation_id = new global::System.Data.DataColumn("station_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstation_id);
                this.columnfive_minute_date_time = new global::System.Data.DataColumn("five_minute_date_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfive_minute_date_time);
                this.columnfive_minute_sum_inches = new global::System.Data.DataColumn("five_minute_sum_inches", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfive_minute_sum_inches);
                this.columnstation_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_FIVE_MINUTERow NewV_MODEL_RAIN_FIVE_MINUTERow() {
                return ((V_MODEL_RAIN_FIVE_MINUTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_MODEL_RAIN_FIVE_MINUTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_MODEL_RAIN_FIVE_MINUTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_MODEL_RAIN_FIVE_MINUTERowChanged != null)) {
                    this.V_MODEL_RAIN_FIVE_MINUTERowChanged(this, new V_MODEL_RAIN_FIVE_MINUTERowChangeEvent(((V_MODEL_RAIN_FIVE_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_MODEL_RAIN_FIVE_MINUTERowChanging != null)) {
                    this.V_MODEL_RAIN_FIVE_MINUTERowChanging(this, new V_MODEL_RAIN_FIVE_MINUTERowChangeEvent(((V_MODEL_RAIN_FIVE_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_MODEL_RAIN_FIVE_MINUTERowDeleted != null)) {
                    this.V_MODEL_RAIN_FIVE_MINUTERowDeleted(this, new V_MODEL_RAIN_FIVE_MINUTERowChangeEvent(((V_MODEL_RAIN_FIVE_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_MODEL_RAIN_FIVE_MINUTERowDeleting != null)) {
                    this.V_MODEL_RAIN_FIVE_MINUTERowDeleting(this, new V_MODEL_RAIN_FIVE_MINUTERowChangeEvent(((V_MODEL_RAIN_FIVE_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_MODEL_RAIN_FIVE_MINUTERow(V_MODEL_RAIN_FIVE_MINUTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_MODEL_RAIN_FIVE_MINUTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_MODEL_RAIN_ONE_HOURDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_ONE_HOURDataTable() {
                this.TableName = "V_MODEL_RAIN_ONE_HOUR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_ONE_HOURDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_MODEL_RAIN_ONE_HOURDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_ONE_HOURRow this[int index] {
                get {
                    return ((V_MODEL_RAIN_ONE_HOURRow)(this.Rows[index]));
                }
            }
            
            public event V_MODEL_RAIN_ONE_HOURRowChangeEventHandler V_MODEL_RAIN_ONE_HOURRowChanging;
            
            public event V_MODEL_RAIN_ONE_HOURRowChangeEventHandler V_MODEL_RAIN_ONE_HOURRowChanged;
            
            public event V_MODEL_RAIN_ONE_HOURRowChangeEventHandler V_MODEL_RAIN_ONE_HOURRowDeleting;
            
            public event V_MODEL_RAIN_ONE_HOURRowChangeEventHandler V_MODEL_RAIN_ONE_HOURRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_MODEL_RAIN_ONE_HOURRow(V_MODEL_RAIN_ONE_HOURRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_ONE_HOURRow AddV_MODEL_RAIN_ONE_HOURRow() {
                V_MODEL_RAIN_ONE_HOURRow rowV_MODEL_RAIN_ONE_HOURRow = ((V_MODEL_RAIN_ONE_HOURRow)(this.NewRow()));
                object[] columnValuesArray = new object[0];
                rowV_MODEL_RAIN_ONE_HOURRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_MODEL_RAIN_ONE_HOURRow);
                return rowV_MODEL_RAIN_ONE_HOURRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_MODEL_RAIN_ONE_HOURDataTable cln = ((V_MODEL_RAIN_ONE_HOURDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_MODEL_RAIN_ONE_HOURDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_ONE_HOURRow NewV_MODEL_RAIN_ONE_HOURRow() {
                return ((V_MODEL_RAIN_ONE_HOURRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_MODEL_RAIN_ONE_HOURRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_MODEL_RAIN_ONE_HOURRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_MODEL_RAIN_ONE_HOURRowChanged != null)) {
                    this.V_MODEL_RAIN_ONE_HOURRowChanged(this, new V_MODEL_RAIN_ONE_HOURRowChangeEvent(((V_MODEL_RAIN_ONE_HOURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_MODEL_RAIN_ONE_HOURRowChanging != null)) {
                    this.V_MODEL_RAIN_ONE_HOURRowChanging(this, new V_MODEL_RAIN_ONE_HOURRowChangeEvent(((V_MODEL_RAIN_ONE_HOURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_MODEL_RAIN_ONE_HOURRowDeleted != null)) {
                    this.V_MODEL_RAIN_ONE_HOURRowDeleted(this, new V_MODEL_RAIN_ONE_HOURRowChangeEvent(((V_MODEL_RAIN_ONE_HOURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_MODEL_RAIN_ONE_HOURRowDeleting != null)) {
                    this.V_MODEL_RAIN_ONE_HOURRowDeleting(this, new V_MODEL_RAIN_ONE_HOURRowChangeEvent(((V_MODEL_RAIN_ONE_HOURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_MODEL_RAIN_ONE_HOURRow(V_MODEL_RAIN_ONE_HOURRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_MODEL_RAIN_ONE_HOURDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_MODEL_RAIN_SIX_MINUTEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnh2_number;
            
            private global::System.Data.DataColumn columnsix_minute_date_time;
            
            private global::System.Data.DataColumn columnsix_minute_sum_inches;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_SIX_MINUTEDataTable() {
                this.TableName = "V_MODEL_RAIN_SIX_MINUTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_SIX_MINUTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_MODEL_RAIN_SIX_MINUTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn h2_numberColumn {
                get {
                    return this.columnh2_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn six_minute_date_timeColumn {
                get {
                    return this.columnsix_minute_date_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn six_minute_sum_inchesColumn {
                get {
                    return this.columnsix_minute_sum_inches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_SIX_MINUTERow this[int index] {
                get {
                    return ((V_MODEL_RAIN_SIX_MINUTERow)(this.Rows[index]));
                }
            }
            
            public event V_MODEL_RAIN_SIX_MINUTERowChangeEventHandler V_MODEL_RAIN_SIX_MINUTERowChanging;
            
            public event V_MODEL_RAIN_SIX_MINUTERowChangeEventHandler V_MODEL_RAIN_SIX_MINUTERowChanged;
            
            public event V_MODEL_RAIN_SIX_MINUTERowChangeEventHandler V_MODEL_RAIN_SIX_MINUTERowDeleting;
            
            public event V_MODEL_RAIN_SIX_MINUTERowChangeEventHandler V_MODEL_RAIN_SIX_MINUTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_MODEL_RAIN_SIX_MINUTERow(V_MODEL_RAIN_SIX_MINUTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_SIX_MINUTERow AddV_MODEL_RAIN_SIX_MINUTERow(int h2_number, System.DateTime six_minute_date_time, decimal six_minute_sum_inches) {
                V_MODEL_RAIN_SIX_MINUTERow rowV_MODEL_RAIN_SIX_MINUTERow = ((V_MODEL_RAIN_SIX_MINUTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        h2_number,
                        six_minute_date_time,
                        six_minute_sum_inches};
                rowV_MODEL_RAIN_SIX_MINUTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_MODEL_RAIN_SIX_MINUTERow);
                return rowV_MODEL_RAIN_SIX_MINUTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_MODEL_RAIN_SIX_MINUTEDataTable cln = ((V_MODEL_RAIN_SIX_MINUTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_MODEL_RAIN_SIX_MINUTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnh2_number = base.Columns["h2_number"];
                this.columnsix_minute_date_time = base.Columns["six_minute_date_time"];
                this.columnsix_minute_sum_inches = base.Columns["six_minute_sum_inches"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnh2_number = new global::System.Data.DataColumn("h2_number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnh2_number);
                this.columnsix_minute_date_time = new global::System.Data.DataColumn("six_minute_date_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsix_minute_date_time);
                this.columnsix_minute_sum_inches = new global::System.Data.DataColumn("six_minute_sum_inches", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsix_minute_sum_inches);
                this.columnh2_number.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_SIX_MINUTERow NewV_MODEL_RAIN_SIX_MINUTERow() {
                return ((V_MODEL_RAIN_SIX_MINUTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_MODEL_RAIN_SIX_MINUTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_MODEL_RAIN_SIX_MINUTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_MODEL_RAIN_SIX_MINUTERowChanged != null)) {
                    this.V_MODEL_RAIN_SIX_MINUTERowChanged(this, new V_MODEL_RAIN_SIX_MINUTERowChangeEvent(((V_MODEL_RAIN_SIX_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_MODEL_RAIN_SIX_MINUTERowChanging != null)) {
                    this.V_MODEL_RAIN_SIX_MINUTERowChanging(this, new V_MODEL_RAIN_SIX_MINUTERowChangeEvent(((V_MODEL_RAIN_SIX_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_MODEL_RAIN_SIX_MINUTERowDeleted != null)) {
                    this.V_MODEL_RAIN_SIX_MINUTERowDeleted(this, new V_MODEL_RAIN_SIX_MINUTERowChangeEvent(((V_MODEL_RAIN_SIX_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_MODEL_RAIN_SIX_MINUTERowDeleting != null)) {
                    this.V_MODEL_RAIN_SIX_MINUTERowDeleting(this, new V_MODEL_RAIN_SIX_MINUTERowChangeEvent(((V_MODEL_RAIN_SIX_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_MODEL_RAIN_SIX_MINUTERow(V_MODEL_RAIN_SIX_MINUTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_MODEL_RAIN_SIX_MINUTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_MODEL_RAIN_TEN_MINUTEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnh2_number;
            
            private global::System.Data.DataColumn columnten_minute_date_time;
            
            private global::System.Data.DataColumn columnten_minute_sum_inches;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TEN_MINUTEDataTable() {
                this.TableName = "V_MODEL_RAIN_TEN_MINUTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_TEN_MINUTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_MODEL_RAIN_TEN_MINUTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn h2_numberColumn {
                get {
                    return this.columnh2_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ten_minute_date_timeColumn {
                get {
                    return this.columnten_minute_date_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ten_minute_sum_inchesColumn {
                get {
                    return this.columnten_minute_sum_inches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TEN_MINUTERow this[int index] {
                get {
                    return ((V_MODEL_RAIN_TEN_MINUTERow)(this.Rows[index]));
                }
            }
            
            public event V_MODEL_RAIN_TEN_MINUTERowChangeEventHandler V_MODEL_RAIN_TEN_MINUTERowChanging;
            
            public event V_MODEL_RAIN_TEN_MINUTERowChangeEventHandler V_MODEL_RAIN_TEN_MINUTERowChanged;
            
            public event V_MODEL_RAIN_TEN_MINUTERowChangeEventHandler V_MODEL_RAIN_TEN_MINUTERowDeleting;
            
            public event V_MODEL_RAIN_TEN_MINUTERowChangeEventHandler V_MODEL_RAIN_TEN_MINUTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_MODEL_RAIN_TEN_MINUTERow(V_MODEL_RAIN_TEN_MINUTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TEN_MINUTERow AddV_MODEL_RAIN_TEN_MINUTERow(int h2_number, System.DateTime ten_minute_date_time, decimal ten_minute_sum_inches) {
                V_MODEL_RAIN_TEN_MINUTERow rowV_MODEL_RAIN_TEN_MINUTERow = ((V_MODEL_RAIN_TEN_MINUTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        h2_number,
                        ten_minute_date_time,
                        ten_minute_sum_inches};
                rowV_MODEL_RAIN_TEN_MINUTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_MODEL_RAIN_TEN_MINUTERow);
                return rowV_MODEL_RAIN_TEN_MINUTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_MODEL_RAIN_TEN_MINUTEDataTable cln = ((V_MODEL_RAIN_TEN_MINUTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_MODEL_RAIN_TEN_MINUTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnh2_number = base.Columns["h2_number"];
                this.columnten_minute_date_time = base.Columns["ten_minute_date_time"];
                this.columnten_minute_sum_inches = base.Columns["ten_minute_sum_inches"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnh2_number = new global::System.Data.DataColumn("h2_number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnh2_number);
                this.columnten_minute_date_time = new global::System.Data.DataColumn("ten_minute_date_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnten_minute_date_time);
                this.columnten_minute_sum_inches = new global::System.Data.DataColumn("ten_minute_sum_inches", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnten_minute_sum_inches);
                this.columnh2_number.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TEN_MINUTERow NewV_MODEL_RAIN_TEN_MINUTERow() {
                return ((V_MODEL_RAIN_TEN_MINUTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_MODEL_RAIN_TEN_MINUTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_MODEL_RAIN_TEN_MINUTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_MODEL_RAIN_TEN_MINUTERowChanged != null)) {
                    this.V_MODEL_RAIN_TEN_MINUTERowChanged(this, new V_MODEL_RAIN_TEN_MINUTERowChangeEvent(((V_MODEL_RAIN_TEN_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_MODEL_RAIN_TEN_MINUTERowChanging != null)) {
                    this.V_MODEL_RAIN_TEN_MINUTERowChanging(this, new V_MODEL_RAIN_TEN_MINUTERowChangeEvent(((V_MODEL_RAIN_TEN_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_MODEL_RAIN_TEN_MINUTERowDeleted != null)) {
                    this.V_MODEL_RAIN_TEN_MINUTERowDeleted(this, new V_MODEL_RAIN_TEN_MINUTERowChangeEvent(((V_MODEL_RAIN_TEN_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_MODEL_RAIN_TEN_MINUTERowDeleting != null)) {
                    this.V_MODEL_RAIN_TEN_MINUTERowDeleting(this, new V_MODEL_RAIN_TEN_MINUTERowChangeEvent(((V_MODEL_RAIN_TEN_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_MODEL_RAIN_TEN_MINUTERow(V_MODEL_RAIN_TEN_MINUTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_MODEL_RAIN_TEN_MINUTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_MODEL_RAIN_THIRTY_MINUTEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnh2_number;
            
            private global::System.Data.DataColumn columnthirty_minute_date_time;
            
            private global::System.Data.DataColumn columnthirty_minute_sum_inches;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_THIRTY_MINUTEDataTable() {
                this.TableName = "V_MODEL_RAIN_THIRTY_MINUTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_THIRTY_MINUTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_MODEL_RAIN_THIRTY_MINUTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn h2_numberColumn {
                get {
                    return this.columnh2_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn thirty_minute_date_timeColumn {
                get {
                    return this.columnthirty_minute_date_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn thirty_minute_sum_inchesColumn {
                get {
                    return this.columnthirty_minute_sum_inches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_THIRTY_MINUTERow this[int index] {
                get {
                    return ((V_MODEL_RAIN_THIRTY_MINUTERow)(this.Rows[index]));
                }
            }
            
            public event V_MODEL_RAIN_THIRTY_MINUTERowChangeEventHandler V_MODEL_RAIN_THIRTY_MINUTERowChanging;
            
            public event V_MODEL_RAIN_THIRTY_MINUTERowChangeEventHandler V_MODEL_RAIN_THIRTY_MINUTERowChanged;
            
            public event V_MODEL_RAIN_THIRTY_MINUTERowChangeEventHandler V_MODEL_RAIN_THIRTY_MINUTERowDeleting;
            
            public event V_MODEL_RAIN_THIRTY_MINUTERowChangeEventHandler V_MODEL_RAIN_THIRTY_MINUTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_MODEL_RAIN_THIRTY_MINUTERow(V_MODEL_RAIN_THIRTY_MINUTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_THIRTY_MINUTERow AddV_MODEL_RAIN_THIRTY_MINUTERow(int h2_number, System.DateTime thirty_minute_date_time, decimal thirty_minute_sum_inches) {
                V_MODEL_RAIN_THIRTY_MINUTERow rowV_MODEL_RAIN_THIRTY_MINUTERow = ((V_MODEL_RAIN_THIRTY_MINUTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        h2_number,
                        thirty_minute_date_time,
                        thirty_minute_sum_inches};
                rowV_MODEL_RAIN_THIRTY_MINUTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_MODEL_RAIN_THIRTY_MINUTERow);
                return rowV_MODEL_RAIN_THIRTY_MINUTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_MODEL_RAIN_THIRTY_MINUTEDataTable cln = ((V_MODEL_RAIN_THIRTY_MINUTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_MODEL_RAIN_THIRTY_MINUTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnh2_number = base.Columns["h2_number"];
                this.columnthirty_minute_date_time = base.Columns["thirty_minute_date_time"];
                this.columnthirty_minute_sum_inches = base.Columns["thirty_minute_sum_inches"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnh2_number = new global::System.Data.DataColumn("h2_number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnh2_number);
                this.columnthirty_minute_date_time = new global::System.Data.DataColumn("thirty_minute_date_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnthirty_minute_date_time);
                this.columnthirty_minute_sum_inches = new global::System.Data.DataColumn("thirty_minute_sum_inches", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnthirty_minute_sum_inches);
                this.columnh2_number.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_THIRTY_MINUTERow NewV_MODEL_RAIN_THIRTY_MINUTERow() {
                return ((V_MODEL_RAIN_THIRTY_MINUTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_MODEL_RAIN_THIRTY_MINUTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_MODEL_RAIN_THIRTY_MINUTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_MODEL_RAIN_THIRTY_MINUTERowChanged != null)) {
                    this.V_MODEL_RAIN_THIRTY_MINUTERowChanged(this, new V_MODEL_RAIN_THIRTY_MINUTERowChangeEvent(((V_MODEL_RAIN_THIRTY_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_MODEL_RAIN_THIRTY_MINUTERowChanging != null)) {
                    this.V_MODEL_RAIN_THIRTY_MINUTERowChanging(this, new V_MODEL_RAIN_THIRTY_MINUTERowChangeEvent(((V_MODEL_RAIN_THIRTY_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_MODEL_RAIN_THIRTY_MINUTERowDeleted != null)) {
                    this.V_MODEL_RAIN_THIRTY_MINUTERowDeleted(this, new V_MODEL_RAIN_THIRTY_MINUTERowChangeEvent(((V_MODEL_RAIN_THIRTY_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_MODEL_RAIN_THIRTY_MINUTERowDeleting != null)) {
                    this.V_MODEL_RAIN_THIRTY_MINUTERowDeleting(this, new V_MODEL_RAIN_THIRTY_MINUTERowChangeEvent(((V_MODEL_RAIN_THIRTY_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_MODEL_RAIN_THIRTY_MINUTERow(V_MODEL_RAIN_THIRTY_MINUTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_MODEL_RAIN_THIRTY_MINUTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_MODEL_RAIN_TWELVE_MINUTEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnh2_number;
            
            private global::System.Data.DataColumn columntwelve_minute_date_time;
            
            private global::System.Data.DataColumn columntwelve_minute_sum_inches;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TWELVE_MINUTEDataTable() {
                this.TableName = "V_MODEL_RAIN_TWELVE_MINUTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_TWELVE_MINUTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_MODEL_RAIN_TWELVE_MINUTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn h2_numberColumn {
                get {
                    return this.columnh2_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn twelve_minute_date_timeColumn {
                get {
                    return this.columntwelve_minute_date_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn twelve_minute_sum_inchesColumn {
                get {
                    return this.columntwelve_minute_sum_inches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TWELVE_MINUTERow this[int index] {
                get {
                    return ((V_MODEL_RAIN_TWELVE_MINUTERow)(this.Rows[index]));
                }
            }
            
            public event V_MODEL_RAIN_TWELVE_MINUTERowChangeEventHandler V_MODEL_RAIN_TWELVE_MINUTERowChanging;
            
            public event V_MODEL_RAIN_TWELVE_MINUTERowChangeEventHandler V_MODEL_RAIN_TWELVE_MINUTERowChanged;
            
            public event V_MODEL_RAIN_TWELVE_MINUTERowChangeEventHandler V_MODEL_RAIN_TWELVE_MINUTERowDeleting;
            
            public event V_MODEL_RAIN_TWELVE_MINUTERowChangeEventHandler V_MODEL_RAIN_TWELVE_MINUTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_MODEL_RAIN_TWELVE_MINUTERow(V_MODEL_RAIN_TWELVE_MINUTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TWELVE_MINUTERow AddV_MODEL_RAIN_TWELVE_MINUTERow(int h2_number, System.DateTime twelve_minute_date_time, decimal twelve_minute_sum_inches) {
                V_MODEL_RAIN_TWELVE_MINUTERow rowV_MODEL_RAIN_TWELVE_MINUTERow = ((V_MODEL_RAIN_TWELVE_MINUTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        h2_number,
                        twelve_minute_date_time,
                        twelve_minute_sum_inches};
                rowV_MODEL_RAIN_TWELVE_MINUTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_MODEL_RAIN_TWELVE_MINUTERow);
                return rowV_MODEL_RAIN_TWELVE_MINUTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_MODEL_RAIN_TWELVE_MINUTEDataTable cln = ((V_MODEL_RAIN_TWELVE_MINUTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_MODEL_RAIN_TWELVE_MINUTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnh2_number = base.Columns["h2_number"];
                this.columntwelve_minute_date_time = base.Columns["twelve_minute_date_time"];
                this.columntwelve_minute_sum_inches = base.Columns["twelve_minute_sum_inches"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnh2_number = new global::System.Data.DataColumn("h2_number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnh2_number);
                this.columntwelve_minute_date_time = new global::System.Data.DataColumn("twelve_minute_date_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntwelve_minute_date_time);
                this.columntwelve_minute_sum_inches = new global::System.Data.DataColumn("twelve_minute_sum_inches", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntwelve_minute_sum_inches);
                this.columnh2_number.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TWELVE_MINUTERow NewV_MODEL_RAIN_TWELVE_MINUTERow() {
                return ((V_MODEL_RAIN_TWELVE_MINUTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_MODEL_RAIN_TWELVE_MINUTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_MODEL_RAIN_TWELVE_MINUTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_MODEL_RAIN_TWELVE_MINUTERowChanged != null)) {
                    this.V_MODEL_RAIN_TWELVE_MINUTERowChanged(this, new V_MODEL_RAIN_TWELVE_MINUTERowChangeEvent(((V_MODEL_RAIN_TWELVE_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_MODEL_RAIN_TWELVE_MINUTERowChanging != null)) {
                    this.V_MODEL_RAIN_TWELVE_MINUTERowChanging(this, new V_MODEL_RAIN_TWELVE_MINUTERowChangeEvent(((V_MODEL_RAIN_TWELVE_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_MODEL_RAIN_TWELVE_MINUTERowDeleted != null)) {
                    this.V_MODEL_RAIN_TWELVE_MINUTERowDeleted(this, new V_MODEL_RAIN_TWELVE_MINUTERowChangeEvent(((V_MODEL_RAIN_TWELVE_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_MODEL_RAIN_TWELVE_MINUTERowDeleting != null)) {
                    this.V_MODEL_RAIN_TWELVE_MINUTERowDeleting(this, new V_MODEL_RAIN_TWELVE_MINUTERowChangeEvent(((V_MODEL_RAIN_TWELVE_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_MODEL_RAIN_TWELVE_MINUTERow(V_MODEL_RAIN_TWELVE_MINUTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_MODEL_RAIN_TWELVE_MINUTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_MODEL_RAIN_TWENTY_MINUTEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnh2_number;
            
            private global::System.Data.DataColumn columntwenty_minute_date_time;
            
            private global::System.Data.DataColumn columntwenty_minute_sum_inches;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TWENTY_MINUTEDataTable() {
                this.TableName = "V_MODEL_RAIN_TWENTY_MINUTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_TWENTY_MINUTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_MODEL_RAIN_TWENTY_MINUTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn h2_numberColumn {
                get {
                    return this.columnh2_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn twenty_minute_date_timeColumn {
                get {
                    return this.columntwenty_minute_date_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn twenty_minute_sum_inchesColumn {
                get {
                    return this.columntwenty_minute_sum_inches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TWENTY_MINUTERow this[int index] {
                get {
                    return ((V_MODEL_RAIN_TWENTY_MINUTERow)(this.Rows[index]));
                }
            }
            
            public event V_MODEL_RAIN_TWENTY_MINUTERowChangeEventHandler V_MODEL_RAIN_TWENTY_MINUTERowChanging;
            
            public event V_MODEL_RAIN_TWENTY_MINUTERowChangeEventHandler V_MODEL_RAIN_TWENTY_MINUTERowChanged;
            
            public event V_MODEL_RAIN_TWENTY_MINUTERowChangeEventHandler V_MODEL_RAIN_TWENTY_MINUTERowDeleting;
            
            public event V_MODEL_RAIN_TWENTY_MINUTERowChangeEventHandler V_MODEL_RAIN_TWENTY_MINUTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_MODEL_RAIN_TWENTY_MINUTERow(V_MODEL_RAIN_TWENTY_MINUTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TWENTY_MINUTERow AddV_MODEL_RAIN_TWENTY_MINUTERow(int h2_number, System.DateTime twenty_minute_date_time, decimal twenty_minute_sum_inches) {
                V_MODEL_RAIN_TWENTY_MINUTERow rowV_MODEL_RAIN_TWENTY_MINUTERow = ((V_MODEL_RAIN_TWENTY_MINUTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        h2_number,
                        twenty_minute_date_time,
                        twenty_minute_sum_inches};
                rowV_MODEL_RAIN_TWENTY_MINUTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_MODEL_RAIN_TWENTY_MINUTERow);
                return rowV_MODEL_RAIN_TWENTY_MINUTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_MODEL_RAIN_TWENTY_MINUTEDataTable cln = ((V_MODEL_RAIN_TWENTY_MINUTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_MODEL_RAIN_TWENTY_MINUTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnh2_number = base.Columns["h2_number"];
                this.columntwenty_minute_date_time = base.Columns["twenty_minute_date_time"];
                this.columntwenty_minute_sum_inches = base.Columns["twenty_minute_sum_inches"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnh2_number = new global::System.Data.DataColumn("h2_number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnh2_number);
                this.columntwenty_minute_date_time = new global::System.Data.DataColumn("twenty_minute_date_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntwenty_minute_date_time);
                this.columntwenty_minute_sum_inches = new global::System.Data.DataColumn("twenty_minute_sum_inches", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntwenty_minute_sum_inches);
                this.columnh2_number.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TWENTY_MINUTERow NewV_MODEL_RAIN_TWENTY_MINUTERow() {
                return ((V_MODEL_RAIN_TWENTY_MINUTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_MODEL_RAIN_TWENTY_MINUTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_MODEL_RAIN_TWENTY_MINUTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_MODEL_RAIN_TWENTY_MINUTERowChanged != null)) {
                    this.V_MODEL_RAIN_TWENTY_MINUTERowChanged(this, new V_MODEL_RAIN_TWENTY_MINUTERowChangeEvent(((V_MODEL_RAIN_TWENTY_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_MODEL_RAIN_TWENTY_MINUTERowChanging != null)) {
                    this.V_MODEL_RAIN_TWENTY_MINUTERowChanging(this, new V_MODEL_RAIN_TWENTY_MINUTERowChangeEvent(((V_MODEL_RAIN_TWENTY_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_MODEL_RAIN_TWENTY_MINUTERowDeleted != null)) {
                    this.V_MODEL_RAIN_TWENTY_MINUTERowDeleted(this, new V_MODEL_RAIN_TWENTY_MINUTERowChangeEvent(((V_MODEL_RAIN_TWENTY_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_MODEL_RAIN_TWENTY_MINUTERowDeleting != null)) {
                    this.V_MODEL_RAIN_TWENTY_MINUTERowDeleting(this, new V_MODEL_RAIN_TWENTY_MINUTERowChangeEvent(((V_MODEL_RAIN_TWENTY_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_MODEL_RAIN_TWENTY_MINUTERow(V_MODEL_RAIN_TWENTY_MINUTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_MODEL_RAIN_TWENTY_MINUTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_MODELING_RAIN_FIVE_MINUTEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnh2_number;
            
            private global::System.Data.DataColumn columncalendar_date;
            
            private global::System.Data.DataColumn columnhour_number_24;
            
            private global::System.Data.DataColumn columnfive_minute_interval_number;
            
            private global::System.Data.DataColumn columnfive_minute_sum_inches;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODELING_RAIN_FIVE_MINUTEDataTable() {
                this.TableName = "V_MODELING_RAIN_FIVE_MINUTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODELING_RAIN_FIVE_MINUTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_MODELING_RAIN_FIVE_MINUTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn h2_numberColumn {
                get {
                    return this.columnh2_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn calendar_dateColumn {
                get {
                    return this.columncalendar_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hour_number_24Column {
                get {
                    return this.columnhour_number_24;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn five_minute_interval_numberColumn {
                get {
                    return this.columnfive_minute_interval_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn five_minute_sum_inchesColumn {
                get {
                    return this.columnfive_minute_sum_inches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODELING_RAIN_FIVE_MINUTERow this[int index] {
                get {
                    return ((V_MODELING_RAIN_FIVE_MINUTERow)(this.Rows[index]));
                }
            }
            
            public event V_MODELING_RAIN_FIVE_MINUTERowChangeEventHandler V_MODELING_RAIN_FIVE_MINUTERowChanging;
            
            public event V_MODELING_RAIN_FIVE_MINUTERowChangeEventHandler V_MODELING_RAIN_FIVE_MINUTERowChanged;
            
            public event V_MODELING_RAIN_FIVE_MINUTERowChangeEventHandler V_MODELING_RAIN_FIVE_MINUTERowDeleting;
            
            public event V_MODELING_RAIN_FIVE_MINUTERowChangeEventHandler V_MODELING_RAIN_FIVE_MINUTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_MODELING_RAIN_FIVE_MINUTERow(V_MODELING_RAIN_FIVE_MINUTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODELING_RAIN_FIVE_MINUTERow AddV_MODELING_RAIN_FIVE_MINUTERow(int h2_number, System.DateTime calendar_date, byte hour_number_24, byte five_minute_interval_number, decimal five_minute_sum_inches) {
                V_MODELING_RAIN_FIVE_MINUTERow rowV_MODELING_RAIN_FIVE_MINUTERow = ((V_MODELING_RAIN_FIVE_MINUTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        h2_number,
                        calendar_date,
                        hour_number_24,
                        five_minute_interval_number,
                        five_minute_sum_inches};
                rowV_MODELING_RAIN_FIVE_MINUTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_MODELING_RAIN_FIVE_MINUTERow);
                return rowV_MODELING_RAIN_FIVE_MINUTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_MODELING_RAIN_FIVE_MINUTEDataTable cln = ((V_MODELING_RAIN_FIVE_MINUTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_MODELING_RAIN_FIVE_MINUTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnh2_number = base.Columns["h2_number"];
                this.columncalendar_date = base.Columns["calendar_date"];
                this.columnhour_number_24 = base.Columns["hour_number_24"];
                this.columnfive_minute_interval_number = base.Columns["five_minute_interval_number"];
                this.columnfive_minute_sum_inches = base.Columns["five_minute_sum_inches"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnh2_number = new global::System.Data.DataColumn("h2_number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnh2_number);
                this.columncalendar_date = new global::System.Data.DataColumn("calendar_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalendar_date);
                this.columnhour_number_24 = new global::System.Data.DataColumn("hour_number_24", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhour_number_24);
                this.columnfive_minute_interval_number = new global::System.Data.DataColumn("five_minute_interval_number", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfive_minute_interval_number);
                this.columnfive_minute_sum_inches = new global::System.Data.DataColumn("five_minute_sum_inches", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfive_minute_sum_inches);
                this.columnh2_number.AllowDBNull = false;
                this.columnhour_number_24.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODELING_RAIN_FIVE_MINUTERow NewV_MODELING_RAIN_FIVE_MINUTERow() {
                return ((V_MODELING_RAIN_FIVE_MINUTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_MODELING_RAIN_FIVE_MINUTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_MODELING_RAIN_FIVE_MINUTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_MODELING_RAIN_FIVE_MINUTERowChanged != null)) {
                    this.V_MODELING_RAIN_FIVE_MINUTERowChanged(this, new V_MODELING_RAIN_FIVE_MINUTERowChangeEvent(((V_MODELING_RAIN_FIVE_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_MODELING_RAIN_FIVE_MINUTERowChanging != null)) {
                    this.V_MODELING_RAIN_FIVE_MINUTERowChanging(this, new V_MODELING_RAIN_FIVE_MINUTERowChangeEvent(((V_MODELING_RAIN_FIVE_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_MODELING_RAIN_FIVE_MINUTERowDeleted != null)) {
                    this.V_MODELING_RAIN_FIVE_MINUTERowDeleted(this, new V_MODELING_RAIN_FIVE_MINUTERowChangeEvent(((V_MODELING_RAIN_FIVE_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_MODELING_RAIN_FIVE_MINUTERowDeleting != null)) {
                    this.V_MODELING_RAIN_FIVE_MINUTERowDeleting(this, new V_MODELING_RAIN_FIVE_MINUTERowChangeEvent(((V_MODELING_RAIN_FIVE_MINUTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_MODELING_RAIN_FIVE_MINUTERow(V_MODELING_RAIN_FIVE_MINUTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_MODELING_RAIN_FIVE_MINUTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_RAIN_DATADataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_DATADataTable() {
                this.TableName = "V_RAIN_DATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_RAIN_DATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_RAIN_DATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_DATARow this[int index] {
                get {
                    return ((V_RAIN_DATARow)(this.Rows[index]));
                }
            }
            
            public event V_RAIN_DATARowChangeEventHandler V_RAIN_DATARowChanging;
            
            public event V_RAIN_DATARowChangeEventHandler V_RAIN_DATARowChanged;
            
            public event V_RAIN_DATARowChangeEventHandler V_RAIN_DATARowDeleting;
            
            public event V_RAIN_DATARowChangeEventHandler V_RAIN_DATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_RAIN_DATARow(V_RAIN_DATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_DATARow AddV_RAIN_DATARow() {
                V_RAIN_DATARow rowV_RAIN_DATARow = ((V_RAIN_DATARow)(this.NewRow()));
                object[] columnValuesArray = new object[0];
                rowV_RAIN_DATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_RAIN_DATARow);
                return rowV_RAIN_DATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_RAIN_DATADataTable cln = ((V_RAIN_DATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_RAIN_DATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_DATARow NewV_RAIN_DATARow() {
                return ((V_RAIN_DATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_RAIN_DATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_RAIN_DATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_RAIN_DATARowChanged != null)) {
                    this.V_RAIN_DATARowChanged(this, new V_RAIN_DATARowChangeEvent(((V_RAIN_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_RAIN_DATARowChanging != null)) {
                    this.V_RAIN_DATARowChanging(this, new V_RAIN_DATARowChangeEvent(((V_RAIN_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_RAIN_DATARowDeleted != null)) {
                    this.V_RAIN_DATARowDeleted(this, new V_RAIN_DATARowChangeEvent(((V_RAIN_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_RAIN_DATARowDeleting != null)) {
                    this.V_RAIN_DATARowDeleting(this, new V_RAIN_DATARowChangeEvent(((V_RAIN_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_RAIN_DATARow(V_RAIN_DATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_RAIN_DATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_RAIN_HISTORY_DOWNTIMEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_HISTORY_DOWNTIMEDataTable() {
                this.TableName = "V_RAIN_HISTORY_DOWNTIME";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_RAIN_HISTORY_DOWNTIMEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_RAIN_HISTORY_DOWNTIMEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_HISTORY_DOWNTIMERow this[int index] {
                get {
                    return ((V_RAIN_HISTORY_DOWNTIMERow)(this.Rows[index]));
                }
            }
            
            public event V_RAIN_HISTORY_DOWNTIMERowChangeEventHandler V_RAIN_HISTORY_DOWNTIMERowChanging;
            
            public event V_RAIN_HISTORY_DOWNTIMERowChangeEventHandler V_RAIN_HISTORY_DOWNTIMERowChanged;
            
            public event V_RAIN_HISTORY_DOWNTIMERowChangeEventHandler V_RAIN_HISTORY_DOWNTIMERowDeleting;
            
            public event V_RAIN_HISTORY_DOWNTIMERowChangeEventHandler V_RAIN_HISTORY_DOWNTIMERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_RAIN_HISTORY_DOWNTIMERow(V_RAIN_HISTORY_DOWNTIMERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_HISTORY_DOWNTIMERow AddV_RAIN_HISTORY_DOWNTIMERow() {
                V_RAIN_HISTORY_DOWNTIMERow rowV_RAIN_HISTORY_DOWNTIMERow = ((V_RAIN_HISTORY_DOWNTIMERow)(this.NewRow()));
                object[] columnValuesArray = new object[0];
                rowV_RAIN_HISTORY_DOWNTIMERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_RAIN_HISTORY_DOWNTIMERow);
                return rowV_RAIN_HISTORY_DOWNTIMERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_RAIN_HISTORY_DOWNTIMEDataTable cln = ((V_RAIN_HISTORY_DOWNTIMEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_RAIN_HISTORY_DOWNTIMEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_HISTORY_DOWNTIMERow NewV_RAIN_HISTORY_DOWNTIMERow() {
                return ((V_RAIN_HISTORY_DOWNTIMERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_RAIN_HISTORY_DOWNTIMERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_RAIN_HISTORY_DOWNTIMERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_RAIN_HISTORY_DOWNTIMERowChanged != null)) {
                    this.V_RAIN_HISTORY_DOWNTIMERowChanged(this, new V_RAIN_HISTORY_DOWNTIMERowChangeEvent(((V_RAIN_HISTORY_DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_RAIN_HISTORY_DOWNTIMERowChanging != null)) {
                    this.V_RAIN_HISTORY_DOWNTIMERowChanging(this, new V_RAIN_HISTORY_DOWNTIMERowChangeEvent(((V_RAIN_HISTORY_DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_RAIN_HISTORY_DOWNTIMERowDeleted != null)) {
                    this.V_RAIN_HISTORY_DOWNTIMERowDeleted(this, new V_RAIN_HISTORY_DOWNTIMERowChangeEvent(((V_RAIN_HISTORY_DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_RAIN_HISTORY_DOWNTIMERowDeleting != null)) {
                    this.V_RAIN_HISTORY_DOWNTIMERowDeleting(this, new V_RAIN_HISTORY_DOWNTIMERowChangeEvent(((V_RAIN_HISTORY_DOWNTIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_RAIN_HISTORY_DOWNTIMERow(V_RAIN_HISTORY_DOWNTIMERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_RAIN_HISTORY_DOWNTIMEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_RAIN_SENSORDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_SENSORDataTable() {
                this.TableName = "V_RAIN_SENSOR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_RAIN_SENSORDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_RAIN_SENSORDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_SENSORRow this[int index] {
                get {
                    return ((V_RAIN_SENSORRow)(this.Rows[index]));
                }
            }
            
            public event V_RAIN_SENSORRowChangeEventHandler V_RAIN_SENSORRowChanging;
            
            public event V_RAIN_SENSORRowChangeEventHandler V_RAIN_SENSORRowChanged;
            
            public event V_RAIN_SENSORRowChangeEventHandler V_RAIN_SENSORRowDeleting;
            
            public event V_RAIN_SENSORRowChangeEventHandler V_RAIN_SENSORRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_RAIN_SENSORRow(V_RAIN_SENSORRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_SENSORRow AddV_RAIN_SENSORRow() {
                V_RAIN_SENSORRow rowV_RAIN_SENSORRow = ((V_RAIN_SENSORRow)(this.NewRow()));
                object[] columnValuesArray = new object[0];
                rowV_RAIN_SENSORRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_RAIN_SENSORRow);
                return rowV_RAIN_SENSORRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_RAIN_SENSORDataTable cln = ((V_RAIN_SENSORDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_RAIN_SENSORDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_SENSORRow NewV_RAIN_SENSORRow() {
                return ((V_RAIN_SENSORRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_RAIN_SENSORRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_RAIN_SENSORRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_RAIN_SENSORRowChanged != null)) {
                    this.V_RAIN_SENSORRowChanged(this, new V_RAIN_SENSORRowChangeEvent(((V_RAIN_SENSORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_RAIN_SENSORRowChanging != null)) {
                    this.V_RAIN_SENSORRowChanging(this, new V_RAIN_SENSORRowChangeEvent(((V_RAIN_SENSORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_RAIN_SENSORRowDeleted != null)) {
                    this.V_RAIN_SENSORRowDeleted(this, new V_RAIN_SENSORRowChangeEvent(((V_RAIN_SENSORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_RAIN_SENSORRowDeleting != null)) {
                    this.V_RAIN_SENSORRowDeleting(this, new V_RAIN_SENSORRowChangeEvent(((V_RAIN_SENSORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_RAIN_SENSORRow(V_RAIN_SENSORRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_RAIN_SENSORDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DEPTH_DATADataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columndepth_data_id;
            
            private global::System.Data.DataColumn columncalendar_date_id;
            
            private global::System.Data.DataColumn columntime_of_day_id;
            
            private global::System.Data.DataColumn columnstation_id;
            
            private global::System.Data.DataColumn columnenviron_sensor_id;
            
            private global::System.Data.DataColumn columnlocation_qualifier;
            
            private global::System.Data.DataColumn columnoriginal_sample_time;
            
            private global::System.Data.DataColumn columnassigned_sample_time;
            
            private global::System.Data.DataColumn columnraw_value;
            
            private global::System.Data.DataColumn columnfinal_value;
            
            private global::System.Data.DataColumn columnunits;
            
            private global::System.Data.DataColumn columnload_date;
            
            private global::System.Data.DataColumn columnsource_filename;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPTH_DATADataTable() {
                this.TableName = "DEPTH_DATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DEPTH_DATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DEPTH_DATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn depth_data_idColumn {
                get {
                    return this.columndepth_data_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn calendar_date_idColumn {
                get {
                    return this.columncalendar_date_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn time_of_day_idColumn {
                get {
                    return this.columntime_of_day_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn station_idColumn {
                get {
                    return this.columnstation_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn environ_sensor_idColumn {
                get {
                    return this.columnenviron_sensor_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn location_qualifierColumn {
                get {
                    return this.columnlocation_qualifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn original_sample_timeColumn {
                get {
                    return this.columnoriginal_sample_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assigned_sample_timeColumn {
                get {
                    return this.columnassigned_sample_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn raw_valueColumn {
                get {
                    return this.columnraw_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn final_valueColumn {
                get {
                    return this.columnfinal_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unitsColumn {
                get {
                    return this.columnunits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn load_dateColumn {
                get {
                    return this.columnload_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn source_filenameColumn {
                get {
                    return this.columnsource_filename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPTH_DATARow this[int index] {
                get {
                    return ((DEPTH_DATARow)(this.Rows[index]));
                }
            }
            
            public event DEPTH_DATARowChangeEventHandler DEPTH_DATARowChanging;
            
            public event DEPTH_DATARowChangeEventHandler DEPTH_DATARowChanged;
            
            public event DEPTH_DATARowChangeEventHandler DEPTH_DATARowDeleting;
            
            public event DEPTH_DATARowChangeEventHandler DEPTH_DATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDEPTH_DATARow(DEPTH_DATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPTH_DATARow AddDEPTH_DATARow(int calendar_date_id, int time_of_day_id, int station_id, int environ_sensor_id, string location_qualifier, System.DateTime original_sample_time, System.DateTime assigned_sample_time, int raw_value, decimal final_value, string units, System.DateTime load_date, string source_filename) {
                DEPTH_DATARow rowDEPTH_DATARow = ((DEPTH_DATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        calendar_date_id,
                        time_of_day_id,
                        station_id,
                        environ_sensor_id,
                        location_qualifier,
                        original_sample_time,
                        assigned_sample_time,
                        raw_value,
                        final_value,
                        units,
                        load_date,
                        source_filename};
                rowDEPTH_DATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDEPTH_DATARow);
                return rowDEPTH_DATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPTH_DATARow FindBydepth_data_id(long depth_data_id) {
                return ((DEPTH_DATARow)(this.Rows.Find(new object[] {
                            depth_data_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DEPTH_DATADataTable cln = ((DEPTH_DATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DEPTH_DATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndepth_data_id = base.Columns["depth_data_id"];
                this.columncalendar_date_id = base.Columns["calendar_date_id"];
                this.columntime_of_day_id = base.Columns["time_of_day_id"];
                this.columnstation_id = base.Columns["station_id"];
                this.columnenviron_sensor_id = base.Columns["environ_sensor_id"];
                this.columnlocation_qualifier = base.Columns["location_qualifier"];
                this.columnoriginal_sample_time = base.Columns["original_sample_time"];
                this.columnassigned_sample_time = base.Columns["assigned_sample_time"];
                this.columnraw_value = base.Columns["raw_value"];
                this.columnfinal_value = base.Columns["final_value"];
                this.columnunits = base.Columns["units"];
                this.columnload_date = base.Columns["load_date"];
                this.columnsource_filename = base.Columns["source_filename"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndepth_data_id = new global::System.Data.DataColumn("depth_data_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepth_data_id);
                this.columncalendar_date_id = new global::System.Data.DataColumn("calendar_date_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalendar_date_id);
                this.columntime_of_day_id = new global::System.Data.DataColumn("time_of_day_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntime_of_day_id);
                this.columnstation_id = new global::System.Data.DataColumn("station_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstation_id);
                this.columnenviron_sensor_id = new global::System.Data.DataColumn("environ_sensor_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenviron_sensor_id);
                this.columnlocation_qualifier = new global::System.Data.DataColumn("location_qualifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocation_qualifier);
                this.columnoriginal_sample_time = new global::System.Data.DataColumn("original_sample_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoriginal_sample_time);
                this.columnassigned_sample_time = new global::System.Data.DataColumn("assigned_sample_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassigned_sample_time);
                this.columnraw_value = new global::System.Data.DataColumn("raw_value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnraw_value);
                this.columnfinal_value = new global::System.Data.DataColumn("final_value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinal_value);
                this.columnunits = new global::System.Data.DataColumn("units", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunits);
                this.columnload_date = new global::System.Data.DataColumn("load_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnload_date);
                this.columnsource_filename = new global::System.Data.DataColumn("source_filename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsource_filename);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columndepth_data_id}, true));
                this.columndepth_data_id.AutoIncrement = true;
                this.columndepth_data_id.AllowDBNull = false;
                this.columndepth_data_id.ReadOnly = true;
                this.columndepth_data_id.Unique = true;
                this.columncalendar_date_id.AllowDBNull = false;
                this.columntime_of_day_id.AllowDBNull = false;
                this.columnstation_id.AllowDBNull = false;
                this.columnenviron_sensor_id.AllowDBNull = false;
                this.columnlocation_qualifier.AllowDBNull = false;
                this.columnlocation_qualifier.MaxLength = 25;
                this.columnoriginal_sample_time.AllowDBNull = false;
                this.columnassigned_sample_time.AllowDBNull = false;
                this.columnraw_value.AllowDBNull = false;
                this.columnfinal_value.AllowDBNull = false;
                this.columnunits.AllowDBNull = false;
                this.columnunits.MaxLength = 10;
                this.columnload_date.AllowDBNull = false;
                this.columnsource_filename.AllowDBNull = false;
                this.columnsource_filename.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPTH_DATARow NewDEPTH_DATARow() {
                return ((DEPTH_DATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DEPTH_DATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DEPTH_DATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DEPTH_DATARowChanged != null)) {
                    this.DEPTH_DATARowChanged(this, new DEPTH_DATARowChangeEvent(((DEPTH_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DEPTH_DATARowChanging != null)) {
                    this.DEPTH_DATARowChanging(this, new DEPTH_DATARowChangeEvent(((DEPTH_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DEPTH_DATARowDeleted != null)) {
                    this.DEPTH_DATARowDeleted(this, new DEPTH_DATARowChangeEvent(((DEPTH_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DEPTH_DATARowDeleting != null)) {
                    this.DEPTH_DATARowDeleting(this, new DEPTH_DATARowChangeEvent(((DEPTH_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDEPTH_DATARow(DEPTH_DATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DEPTH_DATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ENVIRON_SENSORDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnenviron_sensor_id;
            
            private global::System.Data.DataColumn columnstation_id;
            
            private global::System.Data.DataColumn columnx_data_category_loc_qual_combined;
            
            private global::System.Data.DataColumn columndata_category;
            
            private global::System.Data.DataColumn columnlocation_qualifier;
            
            private global::System.Data.DataColumn columnchannel;
            
            private global::System.Data.DataColumn columnchannel_name;
            
            private global::System.Data.DataColumn columnchannel_description;
            
            private global::System.Data.DataColumn columnengineering_unit_span;
            
            private global::System.Data.DataColumn columnengineering_unit_zero;
            
            private global::System.Data.DataColumn columnengineering_units;
            
            private global::System.Data.DataColumn columnhas_depth_to_flow;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columncreate_by;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnupdate_by;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ENVIRON_SENSORDataTable() {
                this.TableName = "ENVIRON_SENSOR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ENVIRON_SENSORDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ENVIRON_SENSORDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn environ_sensor_idColumn {
                get {
                    return this.columnenviron_sensor_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn station_idColumn {
                get {
                    return this.columnstation_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn x_data_category_loc_qual_combinedColumn {
                get {
                    return this.columnx_data_category_loc_qual_combined;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn data_categoryColumn {
                get {
                    return this.columndata_category;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn location_qualifierColumn {
                get {
                    return this.columnlocation_qualifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channelColumn {
                get {
                    return this.columnchannel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channel_nameColumn {
                get {
                    return this.columnchannel_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channel_descriptionColumn {
                get {
                    return this.columnchannel_description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn engineering_unit_spanColumn {
                get {
                    return this.columnengineering_unit_span;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn engineering_unit_zeroColumn {
                get {
                    return this.columnengineering_unit_zero;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn engineering_unitsColumn {
                get {
                    return this.columnengineering_units;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn has_depth_to_flowColumn {
                get {
                    return this.columnhas_depth_to_flow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_byColumn {
                get {
                    return this.columncreate_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_byColumn {
                get {
                    return this.columnupdate_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ENVIRON_SENSORRow this[int index] {
                get {
                    return ((ENVIRON_SENSORRow)(this.Rows[index]));
                }
            }
            
            public event ENVIRON_SENSORRowChangeEventHandler ENVIRON_SENSORRowChanging;
            
            public event ENVIRON_SENSORRowChangeEventHandler ENVIRON_SENSORRowChanged;
            
            public event ENVIRON_SENSORRowChangeEventHandler ENVIRON_SENSORRowDeleting;
            
            public event ENVIRON_SENSORRowChangeEventHandler ENVIRON_SENSORRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddENVIRON_SENSORRow(ENVIRON_SENSORRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ENVIRON_SENSORRow AddENVIRON_SENSORRow(
                        STATIONRow parentSTATIONRowByFK_ENVIRON_SENSOR_STATION, 
                        string x_data_category_loc_qual_combined, 
                        string data_category, 
                        string location_qualifier, 
                        string channel, 
                        string channel_name, 
                        string channel_description, 
                        decimal engineering_unit_span, 
                        decimal engineering_unit_zero, 
                        string engineering_units, 
                        string has_depth_to_flow, 
                        System.DateTime start_date, 
                        System.DateTime end_date, 
                        System.DateTime create_date, 
                        string create_by, 
                        System.DateTime update_date, 
                        string update_by) {
                ENVIRON_SENSORRow rowENVIRON_SENSORRow = ((ENVIRON_SENSORRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        x_data_category_loc_qual_combined,
                        data_category,
                        location_qualifier,
                        channel,
                        channel_name,
                        channel_description,
                        engineering_unit_span,
                        engineering_unit_zero,
                        engineering_units,
                        has_depth_to_flow,
                        start_date,
                        end_date,
                        create_date,
                        create_by,
                        update_date,
                        update_by};
                if ((parentSTATIONRowByFK_ENVIRON_SENSOR_STATION != null)) {
                    columnValuesArray[1] = parentSTATIONRowByFK_ENVIRON_SENSOR_STATION[0];
                }
                rowENVIRON_SENSORRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowENVIRON_SENSORRow);
                return rowENVIRON_SENSORRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ENVIRON_SENSORRow FindByenviron_sensor_id(int environ_sensor_id) {
                return ((ENVIRON_SENSORRow)(this.Rows.Find(new object[] {
                            environ_sensor_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ENVIRON_SENSORDataTable cln = ((ENVIRON_SENSORDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ENVIRON_SENSORDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnenviron_sensor_id = base.Columns["environ_sensor_id"];
                this.columnstation_id = base.Columns["station_id"];
                this.columnx_data_category_loc_qual_combined = base.Columns["x_data_category_loc_qual_combined"];
                this.columndata_category = base.Columns["data_category"];
                this.columnlocation_qualifier = base.Columns["location_qualifier"];
                this.columnchannel = base.Columns["channel"];
                this.columnchannel_name = base.Columns["channel_name"];
                this.columnchannel_description = base.Columns["channel_description"];
                this.columnengineering_unit_span = base.Columns["engineering_unit_span"];
                this.columnengineering_unit_zero = base.Columns["engineering_unit_zero"];
                this.columnengineering_units = base.Columns["engineering_units"];
                this.columnhas_depth_to_flow = base.Columns["has_depth_to_flow"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columncreate_date = base.Columns["create_date"];
                this.columncreate_by = base.Columns["create_by"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnupdate_by = base.Columns["update_by"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnenviron_sensor_id = new global::System.Data.DataColumn("environ_sensor_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenviron_sensor_id);
                this.columnstation_id = new global::System.Data.DataColumn("station_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstation_id);
                this.columnx_data_category_loc_qual_combined = new global::System.Data.DataColumn("x_data_category_loc_qual_combined", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnx_data_category_loc_qual_combined);
                this.columndata_category = new global::System.Data.DataColumn("data_category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndata_category);
                this.columnlocation_qualifier = new global::System.Data.DataColumn("location_qualifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocation_qualifier);
                this.columnchannel = new global::System.Data.DataColumn("channel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel);
                this.columnchannel_name = new global::System.Data.DataColumn("channel_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel_name);
                this.columnchannel_description = new global::System.Data.DataColumn("channel_description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel_description);
                this.columnengineering_unit_span = new global::System.Data.DataColumn("engineering_unit_span", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnengineering_unit_span);
                this.columnengineering_unit_zero = new global::System.Data.DataColumn("engineering_unit_zero", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnengineering_unit_zero);
                this.columnengineering_units = new global::System.Data.DataColumn("engineering_units", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnengineering_units);
                this.columnhas_depth_to_flow = new global::System.Data.DataColumn("has_depth_to_flow", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhas_depth_to_flow);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columncreate_by = new global::System.Data.DataColumn("create_by", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_by);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnupdate_by = new global::System.Data.DataColumn("update_by", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_by);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnenviron_sensor_id}, true));
                this.columnenviron_sensor_id.AutoIncrement = true;
                this.columnenviron_sensor_id.AllowDBNull = false;
                this.columnenviron_sensor_id.ReadOnly = true;
                this.columnenviron_sensor_id.Unique = true;
                this.columnstation_id.AllowDBNull = false;
                this.columnx_data_category_loc_qual_combined.MaxLength = 25;
                this.columndata_category.AllowDBNull = false;
                this.columndata_category.MaxLength = 25;
                this.columnlocation_qualifier.AllowDBNull = false;
                this.columnlocation_qualifier.MaxLength = 25;
                this.columnchannel.AllowDBNull = false;
                this.columnchannel.MaxLength = 1;
                this.columnchannel_name.AllowDBNull = false;
                this.columnchannel_name.MaxLength = 30;
                this.columnchannel_description.MaxLength = 255;
                this.columnengineering_unit_span.AllowDBNull = false;
                this.columnengineering_unit_zero.AllowDBNull = false;
                this.columnengineering_units.AllowDBNull = false;
                this.columnengineering_units.MaxLength = 10;
                this.columnhas_depth_to_flow.AllowDBNull = false;
                this.columnhas_depth_to_flow.MaxLength = 1;
                this.columnstart_date.AllowDBNull = false;
                this.columncreate_date.AllowDBNull = false;
                this.columncreate_by.AllowDBNull = false;
                this.columncreate_by.MaxLength = 50;
                this.columnupdate_date.AllowDBNull = false;
                this.columnupdate_by.AllowDBNull = false;
                this.columnupdate_by.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ENVIRON_SENSORRow NewENVIRON_SENSORRow() {
                return ((ENVIRON_SENSORRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ENVIRON_SENSORRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ENVIRON_SENSORRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ENVIRON_SENSORRowChanged != null)) {
                    this.ENVIRON_SENSORRowChanged(this, new ENVIRON_SENSORRowChangeEvent(((ENVIRON_SENSORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ENVIRON_SENSORRowChanging != null)) {
                    this.ENVIRON_SENSORRowChanging(this, new ENVIRON_SENSORRowChangeEvent(((ENVIRON_SENSORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ENVIRON_SENSORRowDeleted != null)) {
                    this.ENVIRON_SENSORRowDeleted(this, new ENVIRON_SENSORRowChangeEvent(((ENVIRON_SENSORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ENVIRON_SENSORRowDeleting != null)) {
                    this.ENVIRON_SENSORRowDeleting(this, new ENVIRON_SENSORRowChangeEvent(((ENVIRON_SENSORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveENVIRON_SENSORRow(ENVIRON_SENSORRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ENVIRON_SENSORDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FLOW_DATADataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnflow_data_id;
            
            private global::System.Data.DataColumn columncalendar_date_id;
            
            private global::System.Data.DataColumn columntime_of_day_id;
            
            private global::System.Data.DataColumn columnstation_id;
            
            private global::System.Data.DataColumn columnenviron_sensor_id;
            
            private global::System.Data.DataColumn columnlocation_qualifier;
            
            private global::System.Data.DataColumn columnoriginal_sample_time;
            
            private global::System.Data.DataColumn columnassigned_sample_time;
            
            private global::System.Data.DataColumn columnraw_value;
            
            private global::System.Data.DataColumn columnfinal_value;
            
            private global::System.Data.DataColumn columnunits;
            
            private global::System.Data.DataColumn columnload_date;
            
            private global::System.Data.DataColumn columnsource_filename;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FLOW_DATADataTable() {
                this.TableName = "FLOW_DATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FLOW_DATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FLOW_DATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flow_data_idColumn {
                get {
                    return this.columnflow_data_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn calendar_date_idColumn {
                get {
                    return this.columncalendar_date_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn time_of_day_idColumn {
                get {
                    return this.columntime_of_day_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn station_idColumn {
                get {
                    return this.columnstation_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn environ_sensor_idColumn {
                get {
                    return this.columnenviron_sensor_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn location_qualifierColumn {
                get {
                    return this.columnlocation_qualifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn original_sample_timeColumn {
                get {
                    return this.columnoriginal_sample_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assigned_sample_timeColumn {
                get {
                    return this.columnassigned_sample_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn raw_valueColumn {
                get {
                    return this.columnraw_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn final_valueColumn {
                get {
                    return this.columnfinal_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unitsColumn {
                get {
                    return this.columnunits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn load_dateColumn {
                get {
                    return this.columnload_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn source_filenameColumn {
                get {
                    return this.columnsource_filename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FLOW_DATARow this[int index] {
                get {
                    return ((FLOW_DATARow)(this.Rows[index]));
                }
            }
            
            public event FLOW_DATARowChangeEventHandler FLOW_DATARowChanging;
            
            public event FLOW_DATARowChangeEventHandler FLOW_DATARowChanged;
            
            public event FLOW_DATARowChangeEventHandler FLOW_DATARowDeleting;
            
            public event FLOW_DATARowChangeEventHandler FLOW_DATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFLOW_DATARow(FLOW_DATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FLOW_DATARow AddFLOW_DATARow(int calendar_date_id, int time_of_day_id, int station_id, int environ_sensor_id, string location_qualifier, System.DateTime original_sample_time, System.DateTime assigned_sample_time, int raw_value, decimal final_value, string units, System.DateTime load_date, string source_filename) {
                FLOW_DATARow rowFLOW_DATARow = ((FLOW_DATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        calendar_date_id,
                        time_of_day_id,
                        station_id,
                        environ_sensor_id,
                        location_qualifier,
                        original_sample_time,
                        assigned_sample_time,
                        raw_value,
                        final_value,
                        units,
                        load_date,
                        source_filename};
                rowFLOW_DATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFLOW_DATARow);
                return rowFLOW_DATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FLOW_DATARow FindByflow_data_id(int flow_data_id) {
                return ((FLOW_DATARow)(this.Rows.Find(new object[] {
                            flow_data_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FLOW_DATADataTable cln = ((FLOW_DATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FLOW_DATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnflow_data_id = base.Columns["flow_data_id"];
                this.columncalendar_date_id = base.Columns["calendar_date_id"];
                this.columntime_of_day_id = base.Columns["time_of_day_id"];
                this.columnstation_id = base.Columns["station_id"];
                this.columnenviron_sensor_id = base.Columns["environ_sensor_id"];
                this.columnlocation_qualifier = base.Columns["location_qualifier"];
                this.columnoriginal_sample_time = base.Columns["original_sample_time"];
                this.columnassigned_sample_time = base.Columns["assigned_sample_time"];
                this.columnraw_value = base.Columns["raw_value"];
                this.columnfinal_value = base.Columns["final_value"];
                this.columnunits = base.Columns["units"];
                this.columnload_date = base.Columns["load_date"];
                this.columnsource_filename = base.Columns["source_filename"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnflow_data_id = new global::System.Data.DataColumn("flow_data_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflow_data_id);
                this.columncalendar_date_id = new global::System.Data.DataColumn("calendar_date_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalendar_date_id);
                this.columntime_of_day_id = new global::System.Data.DataColumn("time_of_day_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntime_of_day_id);
                this.columnstation_id = new global::System.Data.DataColumn("station_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstation_id);
                this.columnenviron_sensor_id = new global::System.Data.DataColumn("environ_sensor_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenviron_sensor_id);
                this.columnlocation_qualifier = new global::System.Data.DataColumn("location_qualifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocation_qualifier);
                this.columnoriginal_sample_time = new global::System.Data.DataColumn("original_sample_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoriginal_sample_time);
                this.columnassigned_sample_time = new global::System.Data.DataColumn("assigned_sample_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassigned_sample_time);
                this.columnraw_value = new global::System.Data.DataColumn("raw_value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnraw_value);
                this.columnfinal_value = new global::System.Data.DataColumn("final_value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinal_value);
                this.columnunits = new global::System.Data.DataColumn("units", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunits);
                this.columnload_date = new global::System.Data.DataColumn("load_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnload_date);
                this.columnsource_filename = new global::System.Data.DataColumn("source_filename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsource_filename);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnflow_data_id}, true));
                this.columnflow_data_id.AutoIncrement = true;
                this.columnflow_data_id.AllowDBNull = false;
                this.columnflow_data_id.ReadOnly = true;
                this.columnflow_data_id.Unique = true;
                this.columncalendar_date_id.AllowDBNull = false;
                this.columntime_of_day_id.AllowDBNull = false;
                this.columnstation_id.AllowDBNull = false;
                this.columnenviron_sensor_id.AllowDBNull = false;
                this.columnlocation_qualifier.AllowDBNull = false;
                this.columnlocation_qualifier.MaxLength = 25;
                this.columnoriginal_sample_time.AllowDBNull = false;
                this.columnassigned_sample_time.AllowDBNull = false;
                this.columnraw_value.AllowDBNull = false;
                this.columnfinal_value.AllowDBNull = false;
                this.columnunits.AllowDBNull = false;
                this.columnunits.MaxLength = 10;
                this.columnload_date.AllowDBNull = false;
                this.columnsource_filename.AllowDBNull = false;
                this.columnsource_filename.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FLOW_DATARow NewFLOW_DATARow() {
                return ((FLOW_DATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FLOW_DATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FLOW_DATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FLOW_DATARowChanged != null)) {
                    this.FLOW_DATARowChanged(this, new FLOW_DATARowChangeEvent(((FLOW_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FLOW_DATARowChanging != null)) {
                    this.FLOW_DATARowChanging(this, new FLOW_DATARowChangeEvent(((FLOW_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FLOW_DATARowDeleted != null)) {
                    this.FLOW_DATARowDeleted(this, new FLOW_DATARowChangeEvent(((FLOW_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FLOW_DATARowDeleting != null)) {
                    this.FLOW_DATARowDeleting(this, new FLOW_DATARowChangeEvent(((FLOW_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFLOW_DATARow(FLOW_DATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FLOW_DATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FLOWCOMPUTED_DATADataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnflowcomputed_data_id;
            
            private global::System.Data.DataColumn columncalendar_date_id;
            
            private global::System.Data.DataColumn columntime_of_day_id;
            
            private global::System.Data.DataColumn columnstation_id;
            
            private global::System.Data.DataColumn columnenviron_sensor_id;
            
            private global::System.Data.DataColumn columnlocation_qualifier;
            
            private global::System.Data.DataColumn columnoriginal_sample_time;
            
            private global::System.Data.DataColumn columnassigned_sample_time;
            
            private global::System.Data.DataColumn columnfinal_value;
            
            private global::System.Data.DataColumn columnunits;
            
            private global::System.Data.DataColumn columnload_date;
            
            private global::System.Data.DataColumn columnsource_filename;
            
            private global::System.Data.DataColumn columndepth_data_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FLOWCOMPUTED_DATADataTable() {
                this.TableName = "FLOWCOMPUTED_DATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FLOWCOMPUTED_DATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FLOWCOMPUTED_DATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flowcomputed_data_idColumn {
                get {
                    return this.columnflowcomputed_data_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn calendar_date_idColumn {
                get {
                    return this.columncalendar_date_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn time_of_day_idColumn {
                get {
                    return this.columntime_of_day_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn station_idColumn {
                get {
                    return this.columnstation_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn environ_sensor_idColumn {
                get {
                    return this.columnenviron_sensor_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn location_qualifierColumn {
                get {
                    return this.columnlocation_qualifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn original_sample_timeColumn {
                get {
                    return this.columnoriginal_sample_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assigned_sample_timeColumn {
                get {
                    return this.columnassigned_sample_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn final_valueColumn {
                get {
                    return this.columnfinal_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unitsColumn {
                get {
                    return this.columnunits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn load_dateColumn {
                get {
                    return this.columnload_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn source_filenameColumn {
                get {
                    return this.columnsource_filename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn depth_data_idColumn {
                get {
                    return this.columndepth_data_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FLOWCOMPUTED_DATARow this[int index] {
                get {
                    return ((FLOWCOMPUTED_DATARow)(this.Rows[index]));
                }
            }
            
            public event FLOWCOMPUTED_DATARowChangeEventHandler FLOWCOMPUTED_DATARowChanging;
            
            public event FLOWCOMPUTED_DATARowChangeEventHandler FLOWCOMPUTED_DATARowChanged;
            
            public event FLOWCOMPUTED_DATARowChangeEventHandler FLOWCOMPUTED_DATARowDeleting;
            
            public event FLOWCOMPUTED_DATARowChangeEventHandler FLOWCOMPUTED_DATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFLOWCOMPUTED_DATARow(FLOWCOMPUTED_DATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FLOWCOMPUTED_DATARow AddFLOWCOMPUTED_DATARow(int calendar_date_id, int time_of_day_id, int station_id, int environ_sensor_id, string location_qualifier, System.DateTime original_sample_time, System.DateTime assigned_sample_time, decimal final_value, string units, System.DateTime load_date, string source_filename, long depth_data_id) {
                FLOWCOMPUTED_DATARow rowFLOWCOMPUTED_DATARow = ((FLOWCOMPUTED_DATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        calendar_date_id,
                        time_of_day_id,
                        station_id,
                        environ_sensor_id,
                        location_qualifier,
                        original_sample_time,
                        assigned_sample_time,
                        final_value,
                        units,
                        load_date,
                        source_filename,
                        depth_data_id};
                rowFLOWCOMPUTED_DATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFLOWCOMPUTED_DATARow);
                return rowFLOWCOMPUTED_DATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FLOWCOMPUTED_DATARow FindByflowcomputed_data_id(long flowcomputed_data_id) {
                return ((FLOWCOMPUTED_DATARow)(this.Rows.Find(new object[] {
                            flowcomputed_data_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FLOWCOMPUTED_DATADataTable cln = ((FLOWCOMPUTED_DATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FLOWCOMPUTED_DATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnflowcomputed_data_id = base.Columns["flowcomputed_data_id"];
                this.columncalendar_date_id = base.Columns["calendar_date_id"];
                this.columntime_of_day_id = base.Columns["time_of_day_id"];
                this.columnstation_id = base.Columns["station_id"];
                this.columnenviron_sensor_id = base.Columns["environ_sensor_id"];
                this.columnlocation_qualifier = base.Columns["location_qualifier"];
                this.columnoriginal_sample_time = base.Columns["original_sample_time"];
                this.columnassigned_sample_time = base.Columns["assigned_sample_time"];
                this.columnfinal_value = base.Columns["final_value"];
                this.columnunits = base.Columns["units"];
                this.columnload_date = base.Columns["load_date"];
                this.columnsource_filename = base.Columns["source_filename"];
                this.columndepth_data_id = base.Columns["depth_data_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnflowcomputed_data_id = new global::System.Data.DataColumn("flowcomputed_data_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflowcomputed_data_id);
                this.columncalendar_date_id = new global::System.Data.DataColumn("calendar_date_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalendar_date_id);
                this.columntime_of_day_id = new global::System.Data.DataColumn("time_of_day_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntime_of_day_id);
                this.columnstation_id = new global::System.Data.DataColumn("station_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstation_id);
                this.columnenviron_sensor_id = new global::System.Data.DataColumn("environ_sensor_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenviron_sensor_id);
                this.columnlocation_qualifier = new global::System.Data.DataColumn("location_qualifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocation_qualifier);
                this.columnoriginal_sample_time = new global::System.Data.DataColumn("original_sample_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoriginal_sample_time);
                this.columnassigned_sample_time = new global::System.Data.DataColumn("assigned_sample_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassigned_sample_time);
                this.columnfinal_value = new global::System.Data.DataColumn("final_value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinal_value);
                this.columnunits = new global::System.Data.DataColumn("units", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunits);
                this.columnload_date = new global::System.Data.DataColumn("load_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnload_date);
                this.columnsource_filename = new global::System.Data.DataColumn("source_filename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsource_filename);
                this.columndepth_data_id = new global::System.Data.DataColumn("depth_data_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepth_data_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnflowcomputed_data_id}, true));
                this.columnflowcomputed_data_id.AutoIncrement = true;
                this.columnflowcomputed_data_id.AllowDBNull = false;
                this.columnflowcomputed_data_id.ReadOnly = true;
                this.columnflowcomputed_data_id.Unique = true;
                this.columncalendar_date_id.AllowDBNull = false;
                this.columntime_of_day_id.AllowDBNull = false;
                this.columnstation_id.AllowDBNull = false;
                this.columnenviron_sensor_id.AllowDBNull = false;
                this.columnlocation_qualifier.AllowDBNull = false;
                this.columnlocation_qualifier.MaxLength = 25;
                this.columnoriginal_sample_time.AllowDBNull = false;
                this.columnassigned_sample_time.AllowDBNull = false;
                this.columnfinal_value.AllowDBNull = false;
                this.columnunits.AllowDBNull = false;
                this.columnunits.MaxLength = 10;
                this.columnload_date.AllowDBNull = false;
                this.columnsource_filename.AllowDBNull = false;
                this.columnsource_filename.MaxLength = 50;
                this.columndepth_data_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FLOWCOMPUTED_DATARow NewFLOWCOMPUTED_DATARow() {
                return ((FLOWCOMPUTED_DATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FLOWCOMPUTED_DATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FLOWCOMPUTED_DATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FLOWCOMPUTED_DATARowChanged != null)) {
                    this.FLOWCOMPUTED_DATARowChanged(this, new FLOWCOMPUTED_DATARowChangeEvent(((FLOWCOMPUTED_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FLOWCOMPUTED_DATARowChanging != null)) {
                    this.FLOWCOMPUTED_DATARowChanging(this, new FLOWCOMPUTED_DATARowChangeEvent(((FLOWCOMPUTED_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FLOWCOMPUTED_DATARowDeleted != null)) {
                    this.FLOWCOMPUTED_DATARowDeleted(this, new FLOWCOMPUTED_DATARowChangeEvent(((FLOWCOMPUTED_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FLOWCOMPUTED_DATARowDeleting != null)) {
                    this.FLOWCOMPUTED_DATARowDeleting(this, new FLOWCOMPUTED_DATARowChangeEvent(((FLOWCOMPUTED_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFLOWCOMPUTED_DATARow(FLOWCOMPUTED_DATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FLOWCOMPUTED_DATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VELOCITY_DATADataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnvelocity_data_id;
            
            private global::System.Data.DataColumn columncalendar_date_id;
            
            private global::System.Data.DataColumn columntime_of_day_id;
            
            private global::System.Data.DataColumn columnstation_id;
            
            private global::System.Data.DataColumn columnenviron_sensor_id;
            
            private global::System.Data.DataColumn columnlocation_qualifier;
            
            private global::System.Data.DataColumn columnoriginal_sample_time;
            
            private global::System.Data.DataColumn columnassigned_sample_time;
            
            private global::System.Data.DataColumn columnraw_value;
            
            private global::System.Data.DataColumn columnfinal_value;
            
            private global::System.Data.DataColumn columnload_date;
            
            private global::System.Data.DataColumn columnsource_filename;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VELOCITY_DATADataTable() {
                this.TableName = "VELOCITY_DATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VELOCITY_DATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VELOCITY_DATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn velocity_data_idColumn {
                get {
                    return this.columnvelocity_data_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn calendar_date_idColumn {
                get {
                    return this.columncalendar_date_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn time_of_day_idColumn {
                get {
                    return this.columntime_of_day_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn station_idColumn {
                get {
                    return this.columnstation_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn environ_sensor_idColumn {
                get {
                    return this.columnenviron_sensor_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn location_qualifierColumn {
                get {
                    return this.columnlocation_qualifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn original_sample_timeColumn {
                get {
                    return this.columnoriginal_sample_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assigned_sample_timeColumn {
                get {
                    return this.columnassigned_sample_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn raw_valueColumn {
                get {
                    return this.columnraw_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn final_valueColumn {
                get {
                    return this.columnfinal_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn load_dateColumn {
                get {
                    return this.columnload_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn source_filenameColumn {
                get {
                    return this.columnsource_filename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VELOCITY_DATARow this[int index] {
                get {
                    return ((VELOCITY_DATARow)(this.Rows[index]));
                }
            }
            
            public event VELOCITY_DATARowChangeEventHandler VELOCITY_DATARowChanging;
            
            public event VELOCITY_DATARowChangeEventHandler VELOCITY_DATARowChanged;
            
            public event VELOCITY_DATARowChangeEventHandler VELOCITY_DATARowDeleting;
            
            public event VELOCITY_DATARowChangeEventHandler VELOCITY_DATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVELOCITY_DATARow(VELOCITY_DATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VELOCITY_DATARow AddVELOCITY_DATARow(int calendar_date_id, int time_of_day_id, int station_id, int environ_sensor_id, string location_qualifier, System.DateTime original_sample_time, System.DateTime assigned_sample_time, int raw_value, decimal final_value, System.DateTime load_date, string source_filename) {
                VELOCITY_DATARow rowVELOCITY_DATARow = ((VELOCITY_DATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        calendar_date_id,
                        time_of_day_id,
                        station_id,
                        environ_sensor_id,
                        location_qualifier,
                        original_sample_time,
                        assigned_sample_time,
                        raw_value,
                        final_value,
                        load_date,
                        source_filename};
                rowVELOCITY_DATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVELOCITY_DATARow);
                return rowVELOCITY_DATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VELOCITY_DATARow FindByvelocity_data_id(int velocity_data_id) {
                return ((VELOCITY_DATARow)(this.Rows.Find(new object[] {
                            velocity_data_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                VELOCITY_DATADataTable cln = ((VELOCITY_DATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VELOCITY_DATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnvelocity_data_id = base.Columns["velocity_data_id"];
                this.columncalendar_date_id = base.Columns["calendar_date_id"];
                this.columntime_of_day_id = base.Columns["time_of_day_id"];
                this.columnstation_id = base.Columns["station_id"];
                this.columnenviron_sensor_id = base.Columns["environ_sensor_id"];
                this.columnlocation_qualifier = base.Columns["location_qualifier"];
                this.columnoriginal_sample_time = base.Columns["original_sample_time"];
                this.columnassigned_sample_time = base.Columns["assigned_sample_time"];
                this.columnraw_value = base.Columns["raw_value"];
                this.columnfinal_value = base.Columns["final_value"];
                this.columnload_date = base.Columns["load_date"];
                this.columnsource_filename = base.Columns["source_filename"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnvelocity_data_id = new global::System.Data.DataColumn("velocity_data_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvelocity_data_id);
                this.columncalendar_date_id = new global::System.Data.DataColumn("calendar_date_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalendar_date_id);
                this.columntime_of_day_id = new global::System.Data.DataColumn("time_of_day_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntime_of_day_id);
                this.columnstation_id = new global::System.Data.DataColumn("station_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstation_id);
                this.columnenviron_sensor_id = new global::System.Data.DataColumn("environ_sensor_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenviron_sensor_id);
                this.columnlocation_qualifier = new global::System.Data.DataColumn("location_qualifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocation_qualifier);
                this.columnoriginal_sample_time = new global::System.Data.DataColumn("original_sample_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoriginal_sample_time);
                this.columnassigned_sample_time = new global::System.Data.DataColumn("assigned_sample_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassigned_sample_time);
                this.columnraw_value = new global::System.Data.DataColumn("raw_value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnraw_value);
                this.columnfinal_value = new global::System.Data.DataColumn("final_value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinal_value);
                this.columnload_date = new global::System.Data.DataColumn("load_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnload_date);
                this.columnsource_filename = new global::System.Data.DataColumn("source_filename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsource_filename);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnvelocity_data_id}, true));
                this.columnvelocity_data_id.AutoIncrement = true;
                this.columnvelocity_data_id.AllowDBNull = false;
                this.columnvelocity_data_id.ReadOnly = true;
                this.columnvelocity_data_id.Unique = true;
                this.columncalendar_date_id.AllowDBNull = false;
                this.columntime_of_day_id.AllowDBNull = false;
                this.columnstation_id.AllowDBNull = false;
                this.columnenviron_sensor_id.AllowDBNull = false;
                this.columnlocation_qualifier.AllowDBNull = false;
                this.columnlocation_qualifier.MaxLength = 25;
                this.columnoriginal_sample_time.AllowDBNull = false;
                this.columnassigned_sample_time.AllowDBNull = false;
                this.columnraw_value.AllowDBNull = false;
                this.columnfinal_value.AllowDBNull = false;
                this.columnload_date.AllowDBNull = false;
                this.columnsource_filename.AllowDBNull = false;
                this.columnsource_filename.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VELOCITY_DATARow NewVELOCITY_DATARow() {
                return ((VELOCITY_DATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VELOCITY_DATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(VELOCITY_DATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VELOCITY_DATARowChanged != null)) {
                    this.VELOCITY_DATARowChanged(this, new VELOCITY_DATARowChangeEvent(((VELOCITY_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VELOCITY_DATARowChanging != null)) {
                    this.VELOCITY_DATARowChanging(this, new VELOCITY_DATARowChangeEvent(((VELOCITY_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VELOCITY_DATARowDeleted != null)) {
                    this.VELOCITY_DATARowDeleted(this, new VELOCITY_DATARowChangeEvent(((VELOCITY_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VELOCITY_DATARowDeleting != null)) {
                    this.VELOCITY_DATARowDeleting(this, new VELOCITY_DATARowChangeEvent(((VELOCITY_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVELOCITY_DATARow(VELOCITY_DATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VELOCITY_DATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columndate_time;
            
            private global::System.Data.DataColumn columnsum_inches;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1DataTable() {
                this.TableName = "DataTable1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTable1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataTable1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn date_timeColumn {
                get {
                    return this.columndate_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sum_inchesColumn {
                get {
                    return this.columnsum_inches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row this[int index] {
                get {
                    return ((DataTable1Row)(this.Rows[index]));
                }
            }
            
            public event DataTable1RowChangeEventHandler DataTable1RowChanging;
            
            public event DataTable1RowChangeEventHandler DataTable1RowChanged;
            
            public event DataTable1RowChangeEventHandler DataTable1RowDeleting;
            
            public event DataTable1RowChangeEventHandler DataTable1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataTable1Row(DataTable1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row AddDataTable1Row(System.DateTime date_time, decimal sum_inches) {
                DataTable1Row rowDataTable1Row = ((DataTable1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        date_time,
                        sum_inches};
                rowDataTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable1Row);
                return rowDataTable1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataTable1DataTable cln = ((DataTable1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndate_time = base.Columns["date_time"];
                this.columnsum_inches = base.Columns["sum_inches"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndate_time = new global::System.Data.DataColumn("date_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate_time);
                this.columnsum_inches = new global::System.Data.DataColumn("sum_inches", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsum_inches);
                this.columnsum_inches.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row NewDataTable1Row() {
                return ((DataTable1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable1RowChanged != null)) {
                    this.DataTable1RowChanged(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable1RowChanging != null)) {
                    this.DataTable1RowChanging(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable1RowDeleted != null)) {
                    this.DataTable1RowDeleted(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable1RowDeleting != null)) {
                    this.DataTable1RowDeleting(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataTable1Row(DataTable1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NEPTUNEDataSet ds = new NEPTUNEDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DOWNTIMERow : global::System.Data.DataRow {
            
            private DOWNTIMEDataTable tableDOWNTIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DOWNTIMERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDOWNTIME = ((DOWNTIMEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int downtime_id {
                get {
                    return ((int)(this[this.tableDOWNTIME.downtime_idColumn]));
                }
                set {
                    this[this.tableDOWNTIME.downtime_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int station_id {
                get {
                    return ((int)(this[this.tableDOWNTIME.station_idColumn]));
                }
                set {
                    this[this.tableDOWNTIME.station_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int environ_sensor_id {
                get {
                    try {
                        return ((int)(this[this.tableDOWNTIME.environ_sensor_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'environ_sensor_id\' in table \'DOWNTIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDOWNTIME.environ_sensor_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string location_qualifier {
                get {
                    try {
                        return ((string)(this[this.tableDOWNTIME.location_qualifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'location_qualifier\' in table \'DOWNTIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDOWNTIME.location_qualifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    return ((global::System.DateTime)(this[this.tableDOWNTIME.start_dateColumn]));
                }
                set {
                    this[this.tableDOWNTIME.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    return ((global::System.DateTime)(this[this.tableDOWNTIME.end_dateColumn]));
                }
                set {
                    this[this.tableDOWNTIME.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string event_description {
                get {
                    return ((string)(this[this.tableDOWNTIME.event_descriptionColumn]));
                }
                set {
                    this[this.tableDOWNTIME.event_descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string data_category {
                get {
                    return ((string)(this[this.tableDOWNTIME.data_categoryColumn]));
                }
                set {
                    this[this.tableDOWNTIME.data_categoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    return ((global::System.DateTime)(this[this.tableDOWNTIME.create_dateColumn]));
                }
                set {
                    this[this.tableDOWNTIME.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string create_by {
                get {
                    return ((string)(this[this.tableDOWNTIME.create_byColumn]));
                }
                set {
                    this[this.tableDOWNTIME.create_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime applied_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDOWNTIME.applied_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'applied_date\' in table \'DOWNTIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDOWNTIME.applied_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    return ((global::System.DateTime)(this[this.tableDOWNTIME.update_dateColumn]));
                }
                set {
                    this[this.tableDOWNTIME.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string update_by {
                get {
                    return ((string)(this[this.tableDOWNTIME.update_byColumn]));
                }
                set {
                    this[this.tableDOWNTIME.update_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATIONRow STATIONRow {
                get {
                    return ((STATIONRow)(this.GetParentRow(this.Table.ParentRelations["FK_DOWNTIME_STATION"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DOWNTIME_STATION"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isenviron_sensor_idNull() {
                return this.IsNull(this.tableDOWNTIME.environ_sensor_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setenviron_sensor_idNull() {
                this[this.tableDOWNTIME.environ_sensor_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islocation_qualifierNull() {
                return this.IsNull(this.tableDOWNTIME.location_qualifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlocation_qualifierNull() {
                this[this.tableDOWNTIME.location_qualifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isapplied_dateNull() {
                return this.IsNull(this.tableDOWNTIME.applied_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setapplied_dateNull() {
                this[this.tableDOWNTIME.applied_dateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RAIN_DATARow : global::System.Data.DataRow {
            
            private RAIN_DATADataTable tableRAIN_DATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RAIN_DATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRAIN_DATA = ((RAIN_DATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int calendar_date_id {
                get {
                    return ((int)(this[this.tableRAIN_DATA.calendar_date_idColumn]));
                }
                set {
                    this[this.tableRAIN_DATA.calendar_date_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int time_of_day_id {
                get {
                    return ((int)(this[this.tableRAIN_DATA.time_of_day_idColumn]));
                }
                set {
                    this[this.tableRAIN_DATA.time_of_day_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int station_id {
                get {
                    return ((int)(this[this.tableRAIN_DATA.station_idColumn]));
                }
                set {
                    this[this.tableRAIN_DATA.station_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime rain_tip_time {
                get {
                    return ((global::System.DateTime)(this[this.tableRAIN_DATA.rain_tip_timeColumn]));
                }
                set {
                    this[this.tableRAIN_DATA.rain_tip_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal rainfall_amount_inches {
                get {
                    return ((decimal)(this[this.tableRAIN_DATA.rainfall_amount_inchesColumn]));
                }
                set {
                    this[this.tableRAIN_DATA.rainfall_amount_inchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime load_date {
                get {
                    return ((global::System.DateTime)(this[this.tableRAIN_DATA.load_dateColumn]));
                }
                set {
                    this[this.tableRAIN_DATA.load_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string source_filename {
                get {
                    return ((string)(this[this.tableRAIN_DATA.source_filenameColumn]));
                }
                set {
                    this[this.tableRAIN_DATA.source_filenameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RAIN_DATA_DOWNRow : global::System.Data.DataRow {
            
            private RAIN_DATA_DOWNDataTable tableRAIN_DATA_DOWN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RAIN_DATA_DOWNRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRAIN_DATA_DOWN = ((RAIN_DATA_DOWNDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int rain_data_down_id {
                get {
                    return ((int)(this[this.tableRAIN_DATA_DOWN.rain_data_down_idColumn]));
                }
                set {
                    this[this.tableRAIN_DATA_DOWN.rain_data_down_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int calendar_date_id {
                get {
                    return ((int)(this[this.tableRAIN_DATA_DOWN.calendar_date_idColumn]));
                }
                set {
                    this[this.tableRAIN_DATA_DOWN.calendar_date_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int time_of_day_id {
                get {
                    return ((int)(this[this.tableRAIN_DATA_DOWN.time_of_day_idColumn]));
                }
                set {
                    this[this.tableRAIN_DATA_DOWN.time_of_day_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int station_id {
                get {
                    return ((int)(this[this.tableRAIN_DATA_DOWN.station_idColumn]));
                }
                set {
                    this[this.tableRAIN_DATA_DOWN.station_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime rain_tip_time {
                get {
                    return ((global::System.DateTime)(this[this.tableRAIN_DATA_DOWN.rain_tip_timeColumn]));
                }
                set {
                    this[this.tableRAIN_DATA_DOWN.rain_tip_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal rainfall_amount_inches {
                get {
                    return ((decimal)(this[this.tableRAIN_DATA_DOWN.rainfall_amount_inchesColumn]));
                }
                set {
                    this[this.tableRAIN_DATA_DOWN.rainfall_amount_inchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime load_date {
                get {
                    return ((global::System.DateTime)(this[this.tableRAIN_DATA_DOWN.load_dateColumn]));
                }
                set {
                    this[this.tableRAIN_DATA_DOWN.load_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string source_filename {
                get {
                    return ((string)(this[this.tableRAIN_DATA_DOWN.source_filenameColumn]));
                }
                set {
                    this[this.tableRAIN_DATA_DOWN.source_filenameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int downtime_id {
                get {
                    return ((int)(this[this.tableRAIN_DATA_DOWN.downtime_idColumn]));
                }
                set {
                    this[this.tableRAIN_DATA_DOWN.downtime_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime applied_date {
                get {
                    return ((global::System.DateTime)(this[this.tableRAIN_DATA_DOWN.applied_dateColumn]));
                }
                set {
                    this[this.tableRAIN_DATA_DOWN.applied_dateColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RAIN_SENSORRow : global::System.Data.DataRow {
            
            private RAIN_SENSORDataTable tableRAIN_SENSOR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RAIN_SENSORRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRAIN_SENSOR = ((RAIN_SENSORDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int rain_sensor_id {
                get {
                    return ((int)(this[this.tableRAIN_SENSOR.rain_sensor_idColumn]));
                }
                set {
                    this[this.tableRAIN_SENSOR.rain_sensor_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int station_id {
                get {
                    return ((int)(this[this.tableRAIN_SENSOR.station_idColumn]));
                }
                set {
                    this[this.tableRAIN_SENSOR.station_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    return ((global::System.DateTime)(this[this.tableRAIN_SENSOR.start_dateColumn]));
                }
                set {
                    this[this.tableRAIN_SENSOR.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRAIN_SENSOR.end_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_date\' in table \'RAIN_SENSOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRAIN_SENSOR.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    return ((global::System.DateTime)(this[this.tableRAIN_SENSOR.create_dateColumn]));
                }
                set {
                    this[this.tableRAIN_SENSOR.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string create_by {
                get {
                    return ((string)(this[this.tableRAIN_SENSOR.create_byColumn]));
                }
                set {
                    this[this.tableRAIN_SENSOR.create_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    return ((global::System.DateTime)(this[this.tableRAIN_SENSOR.update_dateColumn]));
                }
                set {
                    this[this.tableRAIN_SENSOR.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string update_by {
                get {
                    return ((string)(this[this.tableRAIN_SENSOR.update_byColumn]));
                }
                set {
                    this[this.tableRAIN_SENSOR.update_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATIONRow STATIONRow {
                get {
                    return ((STATIONRow)(this.GetParentRow(this.Table.ParentRelations["FK_RAIN_SENSOR_STATION"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_RAIN_SENSOR_STATION"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_dateNull() {
                return this.IsNull(this.tableRAIN_SENSOR.end_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_dateNull() {
                this[this.tableRAIN_SENSOR.end_dateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class STATIONRow : global::System.Data.DataRow {
            
            private STATIONDataTable tableSTATION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STATIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSTATION = ((STATIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int station_id {
                get {
                    return ((int)(this[this.tableSTATION.station_idColumn]));
                }
                set {
                    this[this.tableSTATION.station_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int h2_number {
                get {
                    return ((int)(this[this.tableSTATION.h2_numberColumn]));
                }
                set {
                    this[this.tableSTATION.h2_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string station_name {
                get {
                    return ((string)(this[this.tableSTATION.station_nameColumn]));
                }
                set {
                    this[this.tableSTATION.station_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string location_description {
                get {
                    try {
                        return ((string)(this[this.tableSTATION.location_descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'location_description\' in table \'STATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTATION.location_descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tableSTATION.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'STATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTATION.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string location_type {
                get {
                    try {
                        return ((string)(this[this.tableSTATION.location_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'location_type\' in table \'STATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTATION.location_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    return ((global::System.DateTime)(this[this.tableSTATION.start_dateColumn]));
                }
                set {
                    this[this.tableSTATION.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSTATION.end_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_date\' in table \'STATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTATION.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int state_plane_x_ft {
                get {
                    try {
                        return ((int)(this[this.tableSTATION.state_plane_x_ftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'state_plane_x_ft\' in table \'STATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTATION.state_plane_x_ftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int state_plane_y_ft {
                get {
                    try {
                        return ((int)(this[this.tableSTATION.state_plane_y_ftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'state_plane_y_ft\' in table \'STATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTATION.state_plane_y_ftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    return ((global::System.DateTime)(this[this.tableSTATION.create_dateColumn]));
                }
                set {
                    this[this.tableSTATION.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string create_by {
                get {
                    return ((string)(this[this.tableSTATION.create_byColumn]));
                }
                set {
                    this[this.tableSTATION.create_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    return ((global::System.DateTime)(this[this.tableSTATION.update_dateColumn]));
                }
                set {
                    this[this.tableSTATION.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string update_by {
                get {
                    return ((string)(this[this.tableSTATION.update_byColumn]));
                }
                set {
                    this[this.tableSTATION.update_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islocation_descriptionNull() {
                return this.IsNull(this.tableSTATION.location_descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlocation_descriptionNull() {
                this[this.tableSTATION.location_descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaddressNull() {
                return this.IsNull(this.tableSTATION.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaddressNull() {
                this[this.tableSTATION.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islocation_typeNull() {
                return this.IsNull(this.tableSTATION.location_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlocation_typeNull() {
                this[this.tableSTATION.location_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_dateNull() {
                return this.IsNull(this.tableSTATION.end_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_dateNull() {
                this[this.tableSTATION.end_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstate_plane_x_ftNull() {
                return this.IsNull(this.tableSTATION.state_plane_x_ftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstate_plane_x_ftNull() {
                this[this.tableSTATION.state_plane_x_ftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstate_plane_y_ftNull() {
                return this.IsNull(this.tableSTATION.state_plane_y_ftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstate_plane_y_ftNull() {
                this[this.tableSTATION.state_plane_y_ftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOWNTIMERow[] GetDOWNTIMERows() {
                if ((this.Table.ChildRelations["FK_DOWNTIME_STATION"] == null)) {
                    return new DOWNTIMERow[0];
                }
                else {
                    return ((DOWNTIMERow[])(base.GetChildRows(this.Table.ChildRelations["FK_DOWNTIME_STATION"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_SENSORRow[] GetRAIN_SENSORRows() {
                if ((this.Table.ChildRelations["FK_RAIN_SENSOR_STATION"] == null)) {
                    return new RAIN_SENSORRow[0];
                }
                else {
                    return ((RAIN_SENSORRow[])(base.GetChildRows(this.Table.ChildRelations["FK_RAIN_SENSOR_STATION"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ENVIRON_SENSORRow[] GetENVIRON_SENSORRows() {
                if ((this.Table.ChildRelations["FK_ENVIRON_SENSOR_STATION"] == null)) {
                    return new ENVIRON_SENSORRow[0];
                }
                else {
                    return ((ENVIRON_SENSORRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ENVIRON_SENSOR_STATION"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_DOWNTIMERow : global::System.Data.DataRow {
            
            private V_DOWNTIMEDataTable tableV_DOWNTIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_DOWNTIMERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_DOWNTIME = ((V_DOWNTIMEDataTable)(this.Table));
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_MODEL_RAIN_DOWNTIMERow : global::System.Data.DataRow {
            
            private V_MODEL_RAIN_DOWNTIMEDataTable tableV_MODEL_RAIN_DOWNTIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_DOWNTIMERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_MODEL_RAIN_DOWNTIME = ((V_MODEL_RAIN_DOWNTIMEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int station_id {
                get {
                    try {
                        return ((int)(this[this.tableV_MODEL_RAIN_DOWNTIME.station_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'station_id\' in table \'V_MODEL_RAIN_DOWNTIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODEL_RAIN_DOWNTIME.station_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    return ((global::System.DateTime)(this[this.tableV_MODEL_RAIN_DOWNTIME.start_dateColumn]));
                }
                set {
                    this[this.tableV_MODEL_RAIN_DOWNTIME.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    return ((global::System.DateTime)(this[this.tableV_MODEL_RAIN_DOWNTIME.end_dateColumn]));
                }
                set {
                    this[this.tableV_MODEL_RAIN_DOWNTIME.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstation_idNull() {
                return this.IsNull(this.tableV_MODEL_RAIN_DOWNTIME.station_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstation_idNull() {
                this[this.tableV_MODEL_RAIN_DOWNTIME.station_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_MODEL_RAIN_FIFTEEN_MINUTERow : global::System.Data.DataRow {
            
            private V_MODEL_RAIN_FIFTEEN_MINUTEDataTable tableV_MODEL_RAIN_FIFTEEN_MINUTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_FIFTEEN_MINUTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_MODEL_RAIN_FIFTEEN_MINUTE = ((V_MODEL_RAIN_FIFTEEN_MINUTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int h2_number {
                get {
                    return ((int)(this[this.tableV_MODEL_RAIN_FIFTEEN_MINUTE.h2_numberColumn]));
                }
                set {
                    this[this.tableV_MODEL_RAIN_FIFTEEN_MINUTE.h2_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fifteen_minute_date_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableV_MODEL_RAIN_FIFTEEN_MINUTE.fifteen_minute_date_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fifteen_minute_date_time\' in table \'V_MODEL_RAIN_FIFTEEN_MI" +
                                "NUTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODEL_RAIN_FIFTEEN_MINUTE.fifteen_minute_date_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal fifteen_minute_sum_inches {
                get {
                    try {
                        return ((decimal)(this[this.tableV_MODEL_RAIN_FIFTEEN_MINUTE.fifteen_minute_sum_inchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fifteen_minute_sum_inches\' in table \'V_MODEL_RAIN_FIFTEEN_M" +
                                "INUTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODEL_RAIN_FIFTEEN_MINUTE.fifteen_minute_sum_inchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfifteen_minute_date_timeNull() {
                return this.IsNull(this.tableV_MODEL_RAIN_FIFTEEN_MINUTE.fifteen_minute_date_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfifteen_minute_date_timeNull() {
                this[this.tableV_MODEL_RAIN_FIFTEEN_MINUTE.fifteen_minute_date_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfifteen_minute_sum_inchesNull() {
                return this.IsNull(this.tableV_MODEL_RAIN_FIFTEEN_MINUTE.fifteen_minute_sum_inchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfifteen_minute_sum_inchesNull() {
                this[this.tableV_MODEL_RAIN_FIFTEEN_MINUTE.fifteen_minute_sum_inchesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_MODEL_RAIN_FIVE_MINUTERow : global::System.Data.DataRow {
            
            private V_MODEL_RAIN_FIVE_MINUTEDataTable tableV_MODEL_RAIN_FIVE_MINUTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_FIVE_MINUTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_MODEL_RAIN_FIVE_MINUTE = ((V_MODEL_RAIN_FIVE_MINUTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int station_id {
                get {
                    return ((int)(this[this.tableV_MODEL_RAIN_FIVE_MINUTE.station_idColumn]));
                }
                set {
                    this[this.tableV_MODEL_RAIN_FIVE_MINUTE.station_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime five_minute_date_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableV_MODEL_RAIN_FIVE_MINUTE.five_minute_date_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'five_minute_date_time\' in table \'V_MODEL_RAIN_FIVE_MINUTE\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODEL_RAIN_FIVE_MINUTE.five_minute_date_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal five_minute_sum_inches {
                get {
                    try {
                        return ((decimal)(this[this.tableV_MODEL_RAIN_FIVE_MINUTE.five_minute_sum_inchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'five_minute_sum_inches\' in table \'V_MODEL_RAIN_FIVE_MINUTE\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODEL_RAIN_FIVE_MINUTE.five_minute_sum_inchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfive_minute_date_timeNull() {
                return this.IsNull(this.tableV_MODEL_RAIN_FIVE_MINUTE.five_minute_date_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfive_minute_date_timeNull() {
                this[this.tableV_MODEL_RAIN_FIVE_MINUTE.five_minute_date_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfive_minute_sum_inchesNull() {
                return this.IsNull(this.tableV_MODEL_RAIN_FIVE_MINUTE.five_minute_sum_inchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfive_minute_sum_inchesNull() {
                this[this.tableV_MODEL_RAIN_FIVE_MINUTE.five_minute_sum_inchesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_MODEL_RAIN_ONE_HOURRow : global::System.Data.DataRow {
            
            private V_MODEL_RAIN_ONE_HOURDataTable tableV_MODEL_RAIN_ONE_HOUR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_ONE_HOURRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_MODEL_RAIN_ONE_HOUR = ((V_MODEL_RAIN_ONE_HOURDataTable)(this.Table));
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_MODEL_RAIN_SIX_MINUTERow : global::System.Data.DataRow {
            
            private V_MODEL_RAIN_SIX_MINUTEDataTable tableV_MODEL_RAIN_SIX_MINUTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_SIX_MINUTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_MODEL_RAIN_SIX_MINUTE = ((V_MODEL_RAIN_SIX_MINUTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int h2_number {
                get {
                    return ((int)(this[this.tableV_MODEL_RAIN_SIX_MINUTE.h2_numberColumn]));
                }
                set {
                    this[this.tableV_MODEL_RAIN_SIX_MINUTE.h2_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime six_minute_date_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableV_MODEL_RAIN_SIX_MINUTE.six_minute_date_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'six_minute_date_time\' in table \'V_MODEL_RAIN_SIX_MINUTE\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODEL_RAIN_SIX_MINUTE.six_minute_date_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal six_minute_sum_inches {
                get {
                    try {
                        return ((decimal)(this[this.tableV_MODEL_RAIN_SIX_MINUTE.six_minute_sum_inchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'six_minute_sum_inches\' in table \'V_MODEL_RAIN_SIX_MINUTE\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODEL_RAIN_SIX_MINUTE.six_minute_sum_inchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issix_minute_date_timeNull() {
                return this.IsNull(this.tableV_MODEL_RAIN_SIX_MINUTE.six_minute_date_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsix_minute_date_timeNull() {
                this[this.tableV_MODEL_RAIN_SIX_MINUTE.six_minute_date_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issix_minute_sum_inchesNull() {
                return this.IsNull(this.tableV_MODEL_RAIN_SIX_MINUTE.six_minute_sum_inchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsix_minute_sum_inchesNull() {
                this[this.tableV_MODEL_RAIN_SIX_MINUTE.six_minute_sum_inchesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_MODEL_RAIN_TEN_MINUTERow : global::System.Data.DataRow {
            
            private V_MODEL_RAIN_TEN_MINUTEDataTable tableV_MODEL_RAIN_TEN_MINUTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_TEN_MINUTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_MODEL_RAIN_TEN_MINUTE = ((V_MODEL_RAIN_TEN_MINUTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int h2_number {
                get {
                    return ((int)(this[this.tableV_MODEL_RAIN_TEN_MINUTE.h2_numberColumn]));
                }
                set {
                    this[this.tableV_MODEL_RAIN_TEN_MINUTE.h2_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ten_minute_date_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableV_MODEL_RAIN_TEN_MINUTE.ten_minute_date_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ten_minute_date_time\' in table \'V_MODEL_RAIN_TEN_MINUTE\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODEL_RAIN_TEN_MINUTE.ten_minute_date_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ten_minute_sum_inches {
                get {
                    try {
                        return ((decimal)(this[this.tableV_MODEL_RAIN_TEN_MINUTE.ten_minute_sum_inchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ten_minute_sum_inches\' in table \'V_MODEL_RAIN_TEN_MINUTE\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODEL_RAIN_TEN_MINUTE.ten_minute_sum_inchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isten_minute_date_timeNull() {
                return this.IsNull(this.tableV_MODEL_RAIN_TEN_MINUTE.ten_minute_date_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setten_minute_date_timeNull() {
                this[this.tableV_MODEL_RAIN_TEN_MINUTE.ten_minute_date_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isten_minute_sum_inchesNull() {
                return this.IsNull(this.tableV_MODEL_RAIN_TEN_MINUTE.ten_minute_sum_inchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setten_minute_sum_inchesNull() {
                this[this.tableV_MODEL_RAIN_TEN_MINUTE.ten_minute_sum_inchesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_MODEL_RAIN_THIRTY_MINUTERow : global::System.Data.DataRow {
            
            private V_MODEL_RAIN_THIRTY_MINUTEDataTable tableV_MODEL_RAIN_THIRTY_MINUTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_THIRTY_MINUTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_MODEL_RAIN_THIRTY_MINUTE = ((V_MODEL_RAIN_THIRTY_MINUTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int h2_number {
                get {
                    return ((int)(this[this.tableV_MODEL_RAIN_THIRTY_MINUTE.h2_numberColumn]));
                }
                set {
                    this[this.tableV_MODEL_RAIN_THIRTY_MINUTE.h2_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime thirty_minute_date_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableV_MODEL_RAIN_THIRTY_MINUTE.thirty_minute_date_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'thirty_minute_date_time\' in table \'V_MODEL_RAIN_THIRTY_MINU" +
                                "TE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODEL_RAIN_THIRTY_MINUTE.thirty_minute_date_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal thirty_minute_sum_inches {
                get {
                    try {
                        return ((decimal)(this[this.tableV_MODEL_RAIN_THIRTY_MINUTE.thirty_minute_sum_inchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'thirty_minute_sum_inches\' in table \'V_MODEL_RAIN_THIRTY_MIN" +
                                "UTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODEL_RAIN_THIRTY_MINUTE.thirty_minute_sum_inchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isthirty_minute_date_timeNull() {
                return this.IsNull(this.tableV_MODEL_RAIN_THIRTY_MINUTE.thirty_minute_date_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setthirty_minute_date_timeNull() {
                this[this.tableV_MODEL_RAIN_THIRTY_MINUTE.thirty_minute_date_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isthirty_minute_sum_inchesNull() {
                return this.IsNull(this.tableV_MODEL_RAIN_THIRTY_MINUTE.thirty_minute_sum_inchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setthirty_minute_sum_inchesNull() {
                this[this.tableV_MODEL_RAIN_THIRTY_MINUTE.thirty_minute_sum_inchesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_MODEL_RAIN_TWELVE_MINUTERow : global::System.Data.DataRow {
            
            private V_MODEL_RAIN_TWELVE_MINUTEDataTable tableV_MODEL_RAIN_TWELVE_MINUTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_TWELVE_MINUTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_MODEL_RAIN_TWELVE_MINUTE = ((V_MODEL_RAIN_TWELVE_MINUTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int h2_number {
                get {
                    return ((int)(this[this.tableV_MODEL_RAIN_TWELVE_MINUTE.h2_numberColumn]));
                }
                set {
                    this[this.tableV_MODEL_RAIN_TWELVE_MINUTE.h2_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime twelve_minute_date_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableV_MODEL_RAIN_TWELVE_MINUTE.twelve_minute_date_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'twelve_minute_date_time\' in table \'V_MODEL_RAIN_TWELVE_MINU" +
                                "TE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODEL_RAIN_TWELVE_MINUTE.twelve_minute_date_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal twelve_minute_sum_inches {
                get {
                    try {
                        return ((decimal)(this[this.tableV_MODEL_RAIN_TWELVE_MINUTE.twelve_minute_sum_inchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'twelve_minute_sum_inches\' in table \'V_MODEL_RAIN_TWELVE_MIN" +
                                "UTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODEL_RAIN_TWELVE_MINUTE.twelve_minute_sum_inchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istwelve_minute_date_timeNull() {
                return this.IsNull(this.tableV_MODEL_RAIN_TWELVE_MINUTE.twelve_minute_date_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settwelve_minute_date_timeNull() {
                this[this.tableV_MODEL_RAIN_TWELVE_MINUTE.twelve_minute_date_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istwelve_minute_sum_inchesNull() {
                return this.IsNull(this.tableV_MODEL_RAIN_TWELVE_MINUTE.twelve_minute_sum_inchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settwelve_minute_sum_inchesNull() {
                this[this.tableV_MODEL_RAIN_TWELVE_MINUTE.twelve_minute_sum_inchesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_MODEL_RAIN_TWENTY_MINUTERow : global::System.Data.DataRow {
            
            private V_MODEL_RAIN_TWENTY_MINUTEDataTable tableV_MODEL_RAIN_TWENTY_MINUTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODEL_RAIN_TWENTY_MINUTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_MODEL_RAIN_TWENTY_MINUTE = ((V_MODEL_RAIN_TWENTY_MINUTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int h2_number {
                get {
                    return ((int)(this[this.tableV_MODEL_RAIN_TWENTY_MINUTE.h2_numberColumn]));
                }
                set {
                    this[this.tableV_MODEL_RAIN_TWENTY_MINUTE.h2_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime twenty_minute_date_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableV_MODEL_RAIN_TWENTY_MINUTE.twenty_minute_date_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'twenty_minute_date_time\' in table \'V_MODEL_RAIN_TWENTY_MINU" +
                                "TE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODEL_RAIN_TWENTY_MINUTE.twenty_minute_date_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal twenty_minute_sum_inches {
                get {
                    try {
                        return ((decimal)(this[this.tableV_MODEL_RAIN_TWENTY_MINUTE.twenty_minute_sum_inchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'twenty_minute_sum_inches\' in table \'V_MODEL_RAIN_TWENTY_MIN" +
                                "UTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODEL_RAIN_TWENTY_MINUTE.twenty_minute_sum_inchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istwenty_minute_date_timeNull() {
                return this.IsNull(this.tableV_MODEL_RAIN_TWENTY_MINUTE.twenty_minute_date_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settwenty_minute_date_timeNull() {
                this[this.tableV_MODEL_RAIN_TWENTY_MINUTE.twenty_minute_date_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istwenty_minute_sum_inchesNull() {
                return this.IsNull(this.tableV_MODEL_RAIN_TWENTY_MINUTE.twenty_minute_sum_inchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settwenty_minute_sum_inchesNull() {
                this[this.tableV_MODEL_RAIN_TWENTY_MINUTE.twenty_minute_sum_inchesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_MODELING_RAIN_FIVE_MINUTERow : global::System.Data.DataRow {
            
            private V_MODELING_RAIN_FIVE_MINUTEDataTable tableV_MODELING_RAIN_FIVE_MINUTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_MODELING_RAIN_FIVE_MINUTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_MODELING_RAIN_FIVE_MINUTE = ((V_MODELING_RAIN_FIVE_MINUTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int h2_number {
                get {
                    return ((int)(this[this.tableV_MODELING_RAIN_FIVE_MINUTE.h2_numberColumn]));
                }
                set {
                    this[this.tableV_MODELING_RAIN_FIVE_MINUTE.h2_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime calendar_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableV_MODELING_RAIN_FIVE_MINUTE.calendar_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'calendar_date\' in table \'V_MODELING_RAIN_FIVE_MINUTE\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableV_MODELING_RAIN_FIVE_MINUTE.calendar_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte hour_number_24 {
                get {
                    return ((byte)(this[this.tableV_MODELING_RAIN_FIVE_MINUTE.hour_number_24Column]));
                }
                set {
                    this[this.tableV_MODELING_RAIN_FIVE_MINUTE.hour_number_24Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte five_minute_interval_number {
                get {
                    try {
                        return ((byte)(this[this.tableV_MODELING_RAIN_FIVE_MINUTE.five_minute_interval_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'five_minute_interval_number\' in table \'V_MODELING_RAIN_FIVE" +
                                "_MINUTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODELING_RAIN_FIVE_MINUTE.five_minute_interval_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal five_minute_sum_inches {
                get {
                    try {
                        return ((decimal)(this[this.tableV_MODELING_RAIN_FIVE_MINUTE.five_minute_sum_inchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'five_minute_sum_inches\' in table \'V_MODELING_RAIN_FIVE_MINU" +
                                "TE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_MODELING_RAIN_FIVE_MINUTE.five_minute_sum_inchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscalendar_dateNull() {
                return this.IsNull(this.tableV_MODELING_RAIN_FIVE_MINUTE.calendar_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcalendar_dateNull() {
                this[this.tableV_MODELING_RAIN_FIVE_MINUTE.calendar_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfive_minute_interval_numberNull() {
                return this.IsNull(this.tableV_MODELING_RAIN_FIVE_MINUTE.five_minute_interval_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfive_minute_interval_numberNull() {
                this[this.tableV_MODELING_RAIN_FIVE_MINUTE.five_minute_interval_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfive_minute_sum_inchesNull() {
                return this.IsNull(this.tableV_MODELING_RAIN_FIVE_MINUTE.five_minute_sum_inchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfive_minute_sum_inchesNull() {
                this[this.tableV_MODELING_RAIN_FIVE_MINUTE.five_minute_sum_inchesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_RAIN_DATARow : global::System.Data.DataRow {
            
            private V_RAIN_DATADataTable tableV_RAIN_DATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_RAIN_DATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_RAIN_DATA = ((V_RAIN_DATADataTable)(this.Table));
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_RAIN_HISTORY_DOWNTIMERow : global::System.Data.DataRow {
            
            private V_RAIN_HISTORY_DOWNTIMEDataTable tableV_RAIN_HISTORY_DOWNTIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_RAIN_HISTORY_DOWNTIMERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_RAIN_HISTORY_DOWNTIME = ((V_RAIN_HISTORY_DOWNTIMEDataTable)(this.Table));
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_RAIN_SENSORRow : global::System.Data.DataRow {
            
            private V_RAIN_SENSORDataTable tableV_RAIN_SENSOR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_RAIN_SENSORRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_RAIN_SENSOR = ((V_RAIN_SENSORDataTable)(this.Table));
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DEPTH_DATARow : global::System.Data.DataRow {
            
            private DEPTH_DATADataTable tableDEPTH_DATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DEPTH_DATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDEPTH_DATA = ((DEPTH_DATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long depth_data_id {
                get {
                    return ((long)(this[this.tableDEPTH_DATA.depth_data_idColumn]));
                }
                set {
                    this[this.tableDEPTH_DATA.depth_data_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int calendar_date_id {
                get {
                    return ((int)(this[this.tableDEPTH_DATA.calendar_date_idColumn]));
                }
                set {
                    this[this.tableDEPTH_DATA.calendar_date_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int time_of_day_id {
                get {
                    return ((int)(this[this.tableDEPTH_DATA.time_of_day_idColumn]));
                }
                set {
                    this[this.tableDEPTH_DATA.time_of_day_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int station_id {
                get {
                    return ((int)(this[this.tableDEPTH_DATA.station_idColumn]));
                }
                set {
                    this[this.tableDEPTH_DATA.station_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int environ_sensor_id {
                get {
                    return ((int)(this[this.tableDEPTH_DATA.environ_sensor_idColumn]));
                }
                set {
                    this[this.tableDEPTH_DATA.environ_sensor_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string location_qualifier {
                get {
                    return ((string)(this[this.tableDEPTH_DATA.location_qualifierColumn]));
                }
                set {
                    this[this.tableDEPTH_DATA.location_qualifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime original_sample_time {
                get {
                    return ((global::System.DateTime)(this[this.tableDEPTH_DATA.original_sample_timeColumn]));
                }
                set {
                    this[this.tableDEPTH_DATA.original_sample_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime assigned_sample_time {
                get {
                    return ((global::System.DateTime)(this[this.tableDEPTH_DATA.assigned_sample_timeColumn]));
                }
                set {
                    this[this.tableDEPTH_DATA.assigned_sample_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int raw_value {
                get {
                    return ((int)(this[this.tableDEPTH_DATA.raw_valueColumn]));
                }
                set {
                    this[this.tableDEPTH_DATA.raw_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal final_value {
                get {
                    return ((decimal)(this[this.tableDEPTH_DATA.final_valueColumn]));
                }
                set {
                    this[this.tableDEPTH_DATA.final_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string units {
                get {
                    return ((string)(this[this.tableDEPTH_DATA.unitsColumn]));
                }
                set {
                    this[this.tableDEPTH_DATA.unitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime load_date {
                get {
                    return ((global::System.DateTime)(this[this.tableDEPTH_DATA.load_dateColumn]));
                }
                set {
                    this[this.tableDEPTH_DATA.load_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string source_filename {
                get {
                    return ((string)(this[this.tableDEPTH_DATA.source_filenameColumn]));
                }
                set {
                    this[this.tableDEPTH_DATA.source_filenameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ENVIRON_SENSORRow : global::System.Data.DataRow {
            
            private ENVIRON_SENSORDataTable tableENVIRON_SENSOR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ENVIRON_SENSORRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableENVIRON_SENSOR = ((ENVIRON_SENSORDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int environ_sensor_id {
                get {
                    return ((int)(this[this.tableENVIRON_SENSOR.environ_sensor_idColumn]));
                }
                set {
                    this[this.tableENVIRON_SENSOR.environ_sensor_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int station_id {
                get {
                    return ((int)(this[this.tableENVIRON_SENSOR.station_idColumn]));
                }
                set {
                    this[this.tableENVIRON_SENSOR.station_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string x_data_category_loc_qual_combined {
                get {
                    try {
                        return ((string)(this[this.tableENVIRON_SENSOR.x_data_category_loc_qual_combinedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'x_data_category_loc_qual_combined\' in table \'ENVIRON_SENSOR" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENVIRON_SENSOR.x_data_category_loc_qual_combinedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string data_category {
                get {
                    return ((string)(this[this.tableENVIRON_SENSOR.data_categoryColumn]));
                }
                set {
                    this[this.tableENVIRON_SENSOR.data_categoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string location_qualifier {
                get {
                    return ((string)(this[this.tableENVIRON_SENSOR.location_qualifierColumn]));
                }
                set {
                    this[this.tableENVIRON_SENSOR.location_qualifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string channel {
                get {
                    return ((string)(this[this.tableENVIRON_SENSOR.channelColumn]));
                }
                set {
                    this[this.tableENVIRON_SENSOR.channelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string channel_name {
                get {
                    return ((string)(this[this.tableENVIRON_SENSOR.channel_nameColumn]));
                }
                set {
                    this[this.tableENVIRON_SENSOR.channel_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string channel_description {
                get {
                    try {
                        return ((string)(this[this.tableENVIRON_SENSOR.channel_descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'channel_description\' in table \'ENVIRON_SENSOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENVIRON_SENSOR.channel_descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal engineering_unit_span {
                get {
                    return ((decimal)(this[this.tableENVIRON_SENSOR.engineering_unit_spanColumn]));
                }
                set {
                    this[this.tableENVIRON_SENSOR.engineering_unit_spanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal engineering_unit_zero {
                get {
                    return ((decimal)(this[this.tableENVIRON_SENSOR.engineering_unit_zeroColumn]));
                }
                set {
                    this[this.tableENVIRON_SENSOR.engineering_unit_zeroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string engineering_units {
                get {
                    return ((string)(this[this.tableENVIRON_SENSOR.engineering_unitsColumn]));
                }
                set {
                    this[this.tableENVIRON_SENSOR.engineering_unitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string has_depth_to_flow {
                get {
                    return ((string)(this[this.tableENVIRON_SENSOR.has_depth_to_flowColumn]));
                }
                set {
                    this[this.tableENVIRON_SENSOR.has_depth_to_flowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    return ((global::System.DateTime)(this[this.tableENVIRON_SENSOR.start_dateColumn]));
                }
                set {
                    this[this.tableENVIRON_SENSOR.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableENVIRON_SENSOR.end_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_date\' in table \'ENVIRON_SENSOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableENVIRON_SENSOR.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    return ((global::System.DateTime)(this[this.tableENVIRON_SENSOR.create_dateColumn]));
                }
                set {
                    this[this.tableENVIRON_SENSOR.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string create_by {
                get {
                    return ((string)(this[this.tableENVIRON_SENSOR.create_byColumn]));
                }
                set {
                    this[this.tableENVIRON_SENSOR.create_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    return ((global::System.DateTime)(this[this.tableENVIRON_SENSOR.update_dateColumn]));
                }
                set {
                    this[this.tableENVIRON_SENSOR.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string update_by {
                get {
                    return ((string)(this[this.tableENVIRON_SENSOR.update_byColumn]));
                }
                set {
                    this[this.tableENVIRON_SENSOR.update_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATIONRow STATIONRow {
                get {
                    return ((STATIONRow)(this.GetParentRow(this.Table.ParentRelations["FK_ENVIRON_SENSOR_STATION"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ENVIRON_SENSOR_STATION"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isx_data_category_loc_qual_combinedNull() {
                return this.IsNull(this.tableENVIRON_SENSOR.x_data_category_loc_qual_combinedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setx_data_category_loc_qual_combinedNull() {
                this[this.tableENVIRON_SENSOR.x_data_category_loc_qual_combinedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischannel_descriptionNull() {
                return this.IsNull(this.tableENVIRON_SENSOR.channel_descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setchannel_descriptionNull() {
                this[this.tableENVIRON_SENSOR.channel_descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_dateNull() {
                return this.IsNull(this.tableENVIRON_SENSOR.end_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_dateNull() {
                this[this.tableENVIRON_SENSOR.end_dateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FLOW_DATARow : global::System.Data.DataRow {
            
            private FLOW_DATADataTable tableFLOW_DATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FLOW_DATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFLOW_DATA = ((FLOW_DATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int flow_data_id {
                get {
                    return ((int)(this[this.tableFLOW_DATA.flow_data_idColumn]));
                }
                set {
                    this[this.tableFLOW_DATA.flow_data_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int calendar_date_id {
                get {
                    return ((int)(this[this.tableFLOW_DATA.calendar_date_idColumn]));
                }
                set {
                    this[this.tableFLOW_DATA.calendar_date_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int time_of_day_id {
                get {
                    return ((int)(this[this.tableFLOW_DATA.time_of_day_idColumn]));
                }
                set {
                    this[this.tableFLOW_DATA.time_of_day_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int station_id {
                get {
                    return ((int)(this[this.tableFLOW_DATA.station_idColumn]));
                }
                set {
                    this[this.tableFLOW_DATA.station_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int environ_sensor_id {
                get {
                    return ((int)(this[this.tableFLOW_DATA.environ_sensor_idColumn]));
                }
                set {
                    this[this.tableFLOW_DATA.environ_sensor_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string location_qualifier {
                get {
                    return ((string)(this[this.tableFLOW_DATA.location_qualifierColumn]));
                }
                set {
                    this[this.tableFLOW_DATA.location_qualifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime original_sample_time {
                get {
                    return ((global::System.DateTime)(this[this.tableFLOW_DATA.original_sample_timeColumn]));
                }
                set {
                    this[this.tableFLOW_DATA.original_sample_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime assigned_sample_time {
                get {
                    return ((global::System.DateTime)(this[this.tableFLOW_DATA.assigned_sample_timeColumn]));
                }
                set {
                    this[this.tableFLOW_DATA.assigned_sample_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int raw_value {
                get {
                    return ((int)(this[this.tableFLOW_DATA.raw_valueColumn]));
                }
                set {
                    this[this.tableFLOW_DATA.raw_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal final_value {
                get {
                    return ((decimal)(this[this.tableFLOW_DATA.final_valueColumn]));
                }
                set {
                    this[this.tableFLOW_DATA.final_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string units {
                get {
                    return ((string)(this[this.tableFLOW_DATA.unitsColumn]));
                }
                set {
                    this[this.tableFLOW_DATA.unitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime load_date {
                get {
                    return ((global::System.DateTime)(this[this.tableFLOW_DATA.load_dateColumn]));
                }
                set {
                    this[this.tableFLOW_DATA.load_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string source_filename {
                get {
                    return ((string)(this[this.tableFLOW_DATA.source_filenameColumn]));
                }
                set {
                    this[this.tableFLOW_DATA.source_filenameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FLOWCOMPUTED_DATARow : global::System.Data.DataRow {
            
            private FLOWCOMPUTED_DATADataTable tableFLOWCOMPUTED_DATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FLOWCOMPUTED_DATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFLOWCOMPUTED_DATA = ((FLOWCOMPUTED_DATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long flowcomputed_data_id {
                get {
                    return ((long)(this[this.tableFLOWCOMPUTED_DATA.flowcomputed_data_idColumn]));
                }
                set {
                    this[this.tableFLOWCOMPUTED_DATA.flowcomputed_data_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int calendar_date_id {
                get {
                    return ((int)(this[this.tableFLOWCOMPUTED_DATA.calendar_date_idColumn]));
                }
                set {
                    this[this.tableFLOWCOMPUTED_DATA.calendar_date_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int time_of_day_id {
                get {
                    return ((int)(this[this.tableFLOWCOMPUTED_DATA.time_of_day_idColumn]));
                }
                set {
                    this[this.tableFLOWCOMPUTED_DATA.time_of_day_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int station_id {
                get {
                    return ((int)(this[this.tableFLOWCOMPUTED_DATA.station_idColumn]));
                }
                set {
                    this[this.tableFLOWCOMPUTED_DATA.station_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int environ_sensor_id {
                get {
                    return ((int)(this[this.tableFLOWCOMPUTED_DATA.environ_sensor_idColumn]));
                }
                set {
                    this[this.tableFLOWCOMPUTED_DATA.environ_sensor_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string location_qualifier {
                get {
                    return ((string)(this[this.tableFLOWCOMPUTED_DATA.location_qualifierColumn]));
                }
                set {
                    this[this.tableFLOWCOMPUTED_DATA.location_qualifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime original_sample_time {
                get {
                    return ((global::System.DateTime)(this[this.tableFLOWCOMPUTED_DATA.original_sample_timeColumn]));
                }
                set {
                    this[this.tableFLOWCOMPUTED_DATA.original_sample_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime assigned_sample_time {
                get {
                    return ((global::System.DateTime)(this[this.tableFLOWCOMPUTED_DATA.assigned_sample_timeColumn]));
                }
                set {
                    this[this.tableFLOWCOMPUTED_DATA.assigned_sample_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal final_value {
                get {
                    return ((decimal)(this[this.tableFLOWCOMPUTED_DATA.final_valueColumn]));
                }
                set {
                    this[this.tableFLOWCOMPUTED_DATA.final_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string units {
                get {
                    return ((string)(this[this.tableFLOWCOMPUTED_DATA.unitsColumn]));
                }
                set {
                    this[this.tableFLOWCOMPUTED_DATA.unitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime load_date {
                get {
                    return ((global::System.DateTime)(this[this.tableFLOWCOMPUTED_DATA.load_dateColumn]));
                }
                set {
                    this[this.tableFLOWCOMPUTED_DATA.load_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string source_filename {
                get {
                    return ((string)(this[this.tableFLOWCOMPUTED_DATA.source_filenameColumn]));
                }
                set {
                    this[this.tableFLOWCOMPUTED_DATA.source_filenameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long depth_data_id {
                get {
                    return ((long)(this[this.tableFLOWCOMPUTED_DATA.depth_data_idColumn]));
                }
                set {
                    this[this.tableFLOWCOMPUTED_DATA.depth_data_idColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VELOCITY_DATARow : global::System.Data.DataRow {
            
            private VELOCITY_DATADataTable tableVELOCITY_DATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VELOCITY_DATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVELOCITY_DATA = ((VELOCITY_DATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int velocity_data_id {
                get {
                    return ((int)(this[this.tableVELOCITY_DATA.velocity_data_idColumn]));
                }
                set {
                    this[this.tableVELOCITY_DATA.velocity_data_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int calendar_date_id {
                get {
                    return ((int)(this[this.tableVELOCITY_DATA.calendar_date_idColumn]));
                }
                set {
                    this[this.tableVELOCITY_DATA.calendar_date_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int time_of_day_id {
                get {
                    return ((int)(this[this.tableVELOCITY_DATA.time_of_day_idColumn]));
                }
                set {
                    this[this.tableVELOCITY_DATA.time_of_day_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int station_id {
                get {
                    return ((int)(this[this.tableVELOCITY_DATA.station_idColumn]));
                }
                set {
                    this[this.tableVELOCITY_DATA.station_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int environ_sensor_id {
                get {
                    return ((int)(this[this.tableVELOCITY_DATA.environ_sensor_idColumn]));
                }
                set {
                    this[this.tableVELOCITY_DATA.environ_sensor_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string location_qualifier {
                get {
                    return ((string)(this[this.tableVELOCITY_DATA.location_qualifierColumn]));
                }
                set {
                    this[this.tableVELOCITY_DATA.location_qualifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime original_sample_time {
                get {
                    return ((global::System.DateTime)(this[this.tableVELOCITY_DATA.original_sample_timeColumn]));
                }
                set {
                    this[this.tableVELOCITY_DATA.original_sample_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime assigned_sample_time {
                get {
                    return ((global::System.DateTime)(this[this.tableVELOCITY_DATA.assigned_sample_timeColumn]));
                }
                set {
                    this[this.tableVELOCITY_DATA.assigned_sample_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int raw_value {
                get {
                    return ((int)(this[this.tableVELOCITY_DATA.raw_valueColumn]));
                }
                set {
                    this[this.tableVELOCITY_DATA.raw_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal final_value {
                get {
                    return ((decimal)(this[this.tableVELOCITY_DATA.final_valueColumn]));
                }
                set {
                    this[this.tableVELOCITY_DATA.final_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime load_date {
                get {
                    return ((global::System.DateTime)(this[this.tableVELOCITY_DATA.load_dateColumn]));
                }
                set {
                    this[this.tableVELOCITY_DATA.load_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string source_filename {
                get {
                    return ((string)(this[this.tableVELOCITY_DATA.source_filenameColumn]));
                }
                set {
                    this[this.tableVELOCITY_DATA.source_filenameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataTable1Row : global::System.Data.DataRow {
            
            private DataTable1DataTable tableDataTable1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTable1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable1 = ((DataTable1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime date_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable1.date_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'date_time\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.date_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal sum_inches {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.sum_inchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sum_inches\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.sum_inchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdate_timeNull() {
                return this.IsNull(this.tableDataTable1.date_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdate_timeNull() {
                this[this.tableDataTable1.date_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issum_inchesNull() {
                return this.IsNull(this.tableDataTable1.sum_inchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsum_inchesNull() {
                this[this.tableDataTable1.sum_inchesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DOWNTIMERowChangeEvent : global::System.EventArgs {
            
            private DOWNTIMERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOWNTIMERowChangeEvent(DOWNTIMERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DOWNTIMERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RAIN_DATARowChangeEvent : global::System.EventArgs {
            
            private RAIN_DATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_DATARowChangeEvent(RAIN_DATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_DATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RAIN_DATA_DOWNRowChangeEvent : global::System.EventArgs {
            
            private RAIN_DATA_DOWNRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_DATA_DOWNRowChangeEvent(RAIN_DATA_DOWNRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_DATA_DOWNRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RAIN_SENSORRowChangeEvent : global::System.EventArgs {
            
            private RAIN_SENSORRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_SENSORRowChangeEvent(RAIN_SENSORRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RAIN_SENSORRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class STATIONRowChangeEvent : global::System.EventArgs {
            
            private STATIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATIONRowChangeEvent(STATIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_DOWNTIMERowChangeEvent : global::System.EventArgs {
            
            private V_DOWNTIMERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_DOWNTIMERowChangeEvent(V_DOWNTIMERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_DOWNTIMERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_MODEL_RAIN_DOWNTIMERowChangeEvent : global::System.EventArgs {
            
            private V_MODEL_RAIN_DOWNTIMERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_DOWNTIMERowChangeEvent(V_MODEL_RAIN_DOWNTIMERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_DOWNTIMERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_MODEL_RAIN_FIFTEEN_MINUTERowChangeEvent : global::System.EventArgs {
            
            private V_MODEL_RAIN_FIFTEEN_MINUTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_FIFTEEN_MINUTERowChangeEvent(V_MODEL_RAIN_FIFTEEN_MINUTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_FIFTEEN_MINUTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_MODEL_RAIN_FIVE_MINUTERowChangeEvent : global::System.EventArgs {
            
            private V_MODEL_RAIN_FIVE_MINUTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_FIVE_MINUTERowChangeEvent(V_MODEL_RAIN_FIVE_MINUTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_FIVE_MINUTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_MODEL_RAIN_ONE_HOURRowChangeEvent : global::System.EventArgs {
            
            private V_MODEL_RAIN_ONE_HOURRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_ONE_HOURRowChangeEvent(V_MODEL_RAIN_ONE_HOURRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_ONE_HOURRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_MODEL_RAIN_SIX_MINUTERowChangeEvent : global::System.EventArgs {
            
            private V_MODEL_RAIN_SIX_MINUTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_SIX_MINUTERowChangeEvent(V_MODEL_RAIN_SIX_MINUTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_SIX_MINUTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_MODEL_RAIN_TEN_MINUTERowChangeEvent : global::System.EventArgs {
            
            private V_MODEL_RAIN_TEN_MINUTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TEN_MINUTERowChangeEvent(V_MODEL_RAIN_TEN_MINUTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TEN_MINUTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_MODEL_RAIN_THIRTY_MINUTERowChangeEvent : global::System.EventArgs {
            
            private V_MODEL_RAIN_THIRTY_MINUTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_THIRTY_MINUTERowChangeEvent(V_MODEL_RAIN_THIRTY_MINUTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_THIRTY_MINUTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_MODEL_RAIN_TWELVE_MINUTERowChangeEvent : global::System.EventArgs {
            
            private V_MODEL_RAIN_TWELVE_MINUTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TWELVE_MINUTERowChangeEvent(V_MODEL_RAIN_TWELVE_MINUTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TWELVE_MINUTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_MODEL_RAIN_TWENTY_MINUTERowChangeEvent : global::System.EventArgs {
            
            private V_MODEL_RAIN_TWENTY_MINUTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TWENTY_MINUTERowChangeEvent(V_MODEL_RAIN_TWENTY_MINUTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODEL_RAIN_TWENTY_MINUTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_MODELING_RAIN_FIVE_MINUTERowChangeEvent : global::System.EventArgs {
            
            private V_MODELING_RAIN_FIVE_MINUTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODELING_RAIN_FIVE_MINUTERowChangeEvent(V_MODELING_RAIN_FIVE_MINUTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_MODELING_RAIN_FIVE_MINUTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_RAIN_DATARowChangeEvent : global::System.EventArgs {
            
            private V_RAIN_DATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_DATARowChangeEvent(V_RAIN_DATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_DATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_RAIN_HISTORY_DOWNTIMERowChangeEvent : global::System.EventArgs {
            
            private V_RAIN_HISTORY_DOWNTIMERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_HISTORY_DOWNTIMERowChangeEvent(V_RAIN_HISTORY_DOWNTIMERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_HISTORY_DOWNTIMERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_RAIN_SENSORRowChangeEvent : global::System.EventArgs {
            
            private V_RAIN_SENSORRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_SENSORRowChangeEvent(V_RAIN_SENSORRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_RAIN_SENSORRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DEPTH_DATARowChangeEvent : global::System.EventArgs {
            
            private DEPTH_DATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPTH_DATARowChangeEvent(DEPTH_DATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPTH_DATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ENVIRON_SENSORRowChangeEvent : global::System.EventArgs {
            
            private ENVIRON_SENSORRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ENVIRON_SENSORRowChangeEvent(ENVIRON_SENSORRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ENVIRON_SENSORRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FLOW_DATARowChangeEvent : global::System.EventArgs {
            
            private FLOW_DATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FLOW_DATARowChangeEvent(FLOW_DATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FLOW_DATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FLOWCOMPUTED_DATARowChangeEvent : global::System.EventArgs {
            
            private FLOWCOMPUTED_DATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FLOWCOMPUTED_DATARowChangeEvent(FLOWCOMPUTED_DATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FLOWCOMPUTED_DATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VELOCITY_DATARowChangeEvent : global::System.EventArgs {
            
            private VELOCITY_DATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VELOCITY_DATARowChangeEvent(VELOCITY_DATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VELOCITY_DATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataTable1RowChangeEvent : global::System.EventArgs {
            
            private DataTable1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1RowChangeEvent(DataTable1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ViRT.NEPTUNEDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DOWNTIMETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DOWNTIMETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DOWNTIME";
            tableMapping.ColumnMappings.Add("downtime_id", "downtime_id");
            tableMapping.ColumnMappings.Add("station_id", "station_id");
            tableMapping.ColumnMappings.Add("environ_sensor_id", "environ_sensor_id");
            tableMapping.ColumnMappings.Add("location_qualifier", "location_qualifier");
            tableMapping.ColumnMappings.Add("start_date", "start_date");
            tableMapping.ColumnMappings.Add("end_date", "end_date");
            tableMapping.ColumnMappings.Add("event_description", "event_description");
            tableMapping.ColumnMappings.Add("data_category", "data_category");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("create_by", "create_by");
            tableMapping.ColumnMappings.Add("applied_date", "applied_date");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("update_by", "update_by");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[DOWNTIME] WHERE (([downtime_id] = @Original_downtime_id) AND ([station_id] = @Original_station_id) AND ((@IsNull_environ_sensor_id = 1 AND [environ_sensor_id] IS NULL) OR ([environ_sensor_id] = @Original_environ_sensor_id)) AND ((@IsNull_location_qualifier = 1 AND [location_qualifier] IS NULL) OR ([location_qualifier] = @Original_location_qualifier)) AND ([start_date] = @Original_start_date) AND ([end_date] = @Original_end_date) AND ([event_description] = @Original_event_description) AND ([data_category] = @Original_data_category) AND ([create_date] = @Original_create_date) AND ([create_by] = @Original_create_by) AND ((@IsNull_applied_date = 1 AND [applied_date] IS NULL) OR ([applied_date] = @Original_applied_date)) AND ([update_date] = @Original_update_date) AND ([update_by] = @Original_update_by))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_downtime_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "downtime_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_location_qualifier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_start_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_end_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_event_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "event_description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_data_category", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "data_category", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_applied_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "applied_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_applied_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "applied_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DOWNTIME] ([station_id], [environ_sensor_id], [location_qualifier], [start_date], [end_date], [event_description], [data_category], [create_date], [create_by], [applied_date], [update_date], [update_by]) VALUES (@station_id, @environ_sensor_id, @location_qualifier, @start_date, @end_date, @event_description, @data_category, @create_date, @create_by, @applied_date, @update_date, @update_by);
SELECT downtime_id, station_id, environ_sensor_id, location_qualifier, start_date, end_date, event_description, data_category, create_date, create_by, applied_date, update_date, update_by FROM dbo.DOWNTIME WHERE (downtime_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@start_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@end_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@event_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "event_description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@data_category", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "data_category", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@applied_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "applied_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DOWNTIME] SET [station_id] = @station_id, [environ_sensor_id] = @environ_sensor_id, [location_qualifier] = @location_qualifier, [start_date] = @start_date, [end_date] = @end_date, [event_description] = @event_description, [data_category] = @data_category, [create_date] = @create_date, [create_by] = @create_by, [applied_date] = @applied_date, [update_date] = @update_date, [update_by] = @update_by WHERE (([downtime_id] = @Original_downtime_id) AND ([station_id] = @Original_station_id) AND ((@IsNull_environ_sensor_id = 1 AND [environ_sensor_id] IS NULL) OR ([environ_sensor_id] = @Original_environ_sensor_id)) AND ((@IsNull_location_qualifier = 1 AND [location_qualifier] IS NULL) OR ([location_qualifier] = @Original_location_qualifier)) AND ([start_date] = @Original_start_date) AND ([end_date] = @Original_end_date) AND ([event_description] = @Original_event_description) AND ([data_category] = @Original_data_category) AND ([create_date] = @Original_create_date) AND ([create_by] = @Original_create_by) AND ((@IsNull_applied_date = 1 AND [applied_date] IS NULL) OR ([applied_date] = @Original_applied_date)) AND ([update_date] = @Original_update_date) AND ([update_by] = @Original_update_by));
SELECT downtime_id, station_id, environ_sensor_id, location_qualifier, start_date, end_date, event_description, data_category, create_date, create_by, applied_date, update_date, update_by FROM dbo.DOWNTIME WHERE (downtime_id = @downtime_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@start_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@end_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@event_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "event_description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@data_category", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "data_category", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@applied_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "applied_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_downtime_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "downtime_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_location_qualifier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_start_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_end_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_event_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "event_description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_data_category", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "data_category", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_applied_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "applied_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_applied_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "applied_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@downtime_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "downtime_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT downtime_id, station_id, environ_sensor_id, location_qualifier, start_date" +
                ", end_date, event_description, data_category, create_date, create_by, applied_da" +
                "te, update_date, update_by FROM dbo.DOWNTIME";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.DOWNTIMEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.DOWNTIMEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.DOWNTIMEDataTable dataTable = new NEPTUNEDataSet.DOWNTIMEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet.DOWNTIMEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DOWNTIME");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_downtime_id, int Original_station_id, global::System.Nullable<int> Original_environ_sensor_id, string Original_location_qualifier, System.DateTime Original_start_date, System.DateTime Original_end_date, string Original_event_description, string Original_data_category, System.DateTime Original_create_date, string Original_create_by, global::System.Nullable<global::System.DateTime> Original_applied_date, System.DateTime Original_update_date, string Original_update_by) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_downtime_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_station_id));
            if ((Original_environ_sensor_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_environ_sensor_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_location_qualifier == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_location_qualifier));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_start_date));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_end_date));
            if ((Original_event_description == null)) {
                throw new global::System.ArgumentNullException("Original_event_description");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_event_description));
            }
            if ((Original_data_category == null)) {
                throw new global::System.ArgumentNullException("Original_data_category");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_data_category));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_by == null)) {
                throw new global::System.ArgumentNullException("Original_create_by");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_create_by));
            }
            if ((Original_applied_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_applied_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_update_date));
            if ((Original_update_by == null)) {
                throw new global::System.ArgumentNullException("Original_update_by");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_update_by));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int station_id, global::System.Nullable<int> environ_sensor_id, string location_qualifier, System.DateTime start_date, System.DateTime end_date, string event_description, string data_category, System.DateTime create_date, string create_by, global::System.Nullable<global::System.DateTime> applied_date, System.DateTime update_date, string update_by) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(station_id));
            if ((environ_sensor_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(environ_sensor_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((location_qualifier == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(location_qualifier));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(start_date));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(end_date));
            if ((event_description == null)) {
                throw new global::System.ArgumentNullException("event_description");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(event_description));
            }
            if ((data_category == null)) {
                throw new global::System.ArgumentNullException("data_category");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(data_category));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(create_date));
            if ((create_by == null)) {
                throw new global::System.ArgumentNullException("create_by");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(create_by));
            }
            if ((applied_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(applied_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(update_date));
            if ((update_by == null)) {
                throw new global::System.ArgumentNullException("update_by");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(update_by));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int station_id, 
                    global::System.Nullable<int> environ_sensor_id, 
                    string location_qualifier, 
                    System.DateTime start_date, 
                    System.DateTime end_date, 
                    string event_description, 
                    string data_category, 
                    System.DateTime create_date, 
                    string create_by, 
                    global::System.Nullable<global::System.DateTime> applied_date, 
                    System.DateTime update_date, 
                    string update_by, 
                    int Original_downtime_id, 
                    int Original_station_id, 
                    global::System.Nullable<int> Original_environ_sensor_id, 
                    string Original_location_qualifier, 
                    System.DateTime Original_start_date, 
                    System.DateTime Original_end_date, 
                    string Original_event_description, 
                    string Original_data_category, 
                    System.DateTime Original_create_date, 
                    string Original_create_by, 
                    global::System.Nullable<global::System.DateTime> Original_applied_date, 
                    System.DateTime Original_update_date, 
                    string Original_update_by, 
                    int downtime_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(station_id));
            if ((environ_sensor_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(environ_sensor_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((location_qualifier == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(location_qualifier));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(start_date));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(end_date));
            if ((event_description == null)) {
                throw new global::System.ArgumentNullException("event_description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(event_description));
            }
            if ((data_category == null)) {
                throw new global::System.ArgumentNullException("data_category");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(data_category));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(create_date));
            if ((create_by == null)) {
                throw new global::System.ArgumentNullException("create_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(create_by));
            }
            if ((applied_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(applied_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(update_date));
            if ((update_by == null)) {
                throw new global::System.ArgumentNullException("update_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(update_by));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_downtime_id));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_station_id));
            if ((Original_environ_sensor_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_environ_sensor_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_location_qualifier == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_location_qualifier));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_start_date));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_end_date));
            if ((Original_event_description == null)) {
                throw new global::System.ArgumentNullException("Original_event_description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_event_description));
            }
            if ((Original_data_category == null)) {
                throw new global::System.ArgumentNullException("Original_data_category");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_data_category));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_by == null)) {
                throw new global::System.ArgumentNullException("Original_create_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_create_by));
            }
            if ((Original_applied_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(Original_applied_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_update_date));
            if ((Original_update_by == null)) {
                throw new global::System.ArgumentNullException("Original_update_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_update_by));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(downtime_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int station_id, 
                    global::System.Nullable<int> environ_sensor_id, 
                    string location_qualifier, 
                    System.DateTime start_date, 
                    System.DateTime end_date, 
                    string event_description, 
                    string data_category, 
                    System.DateTime create_date, 
                    string create_by, 
                    global::System.Nullable<global::System.DateTime> applied_date, 
                    System.DateTime update_date, 
                    string update_by, 
                    int Original_downtime_id, 
                    int Original_station_id, 
                    global::System.Nullable<int> Original_environ_sensor_id, 
                    string Original_location_qualifier, 
                    System.DateTime Original_start_date, 
                    System.DateTime Original_end_date, 
                    string Original_event_description, 
                    string Original_data_category, 
                    System.DateTime Original_create_date, 
                    string Original_create_by, 
                    global::System.Nullable<global::System.DateTime> Original_applied_date, 
                    System.DateTime Original_update_date, 
                    string Original_update_by) {
            return this.Update(station_id, environ_sensor_id, location_qualifier, start_date, end_date, event_description, data_category, create_date, create_by, applied_date, update_date, update_by, Original_downtime_id, Original_station_id, Original_environ_sensor_id, Original_location_qualifier, Original_start_date, Original_end_date, Original_event_description, Original_data_category, Original_create_date, Original_create_by, Original_applied_date, Original_update_date, Original_update_by, Original_downtime_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RAIN_DATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RAIN_DATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RAIN_DATA";
            tableMapping.ColumnMappings.Add("calendar_date_id", "calendar_date_id");
            tableMapping.ColumnMappings.Add("time_of_day_id", "time_of_day_id");
            tableMapping.ColumnMappings.Add("station_id", "station_id");
            tableMapping.ColumnMappings.Add("rain_tip_time", "rain_tip_time");
            tableMapping.ColumnMappings.Add("rainfall_amount_inches", "rainfall_amount_inches");
            tableMapping.ColumnMappings.Add("load_date", "load_date");
            tableMapping.ColumnMappings.Add("source_filename", "source_filename");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[RAIN_DATA] ([calendar_date_id], [time_of_day_id], [station_id], [rain_tip_time], [rainfall_amount_inches], [load_date], [source_filename]) VALUES (@calendar_date_id, @time_of_day_id, @station_id, @rain_tip_time, @rainfall_amount_inches, @load_date, @source_filename)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rain_tip_time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rain_tip_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rainfall_amount_inches", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 3, "rainfall_amount_inches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT calendar_date_id, time_of_day_id, station_id, rain_tip_time, rainfall_amou" +
                "nt_inches, load_date, source_filename FROM dbo.RAIN_DATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT    date_time, SUM(rainfall_amount_inches) AS sum_inches
FROM         (SELECT  DATEADD(n, DATEDIFF(n, 0, rain_tip_time) - DATEDIFF(n, 0, rain_tip_time) %(CAST(@timeStep AS int)) , 0) AS date_time, 
                                              rainfall_amount_inches
                       FROM          dbo.RAIN_DATA
                       WHERE      (station_id = @station_id) AND (rain_tip_time >= @StartDate) AND (rain_tip_time <= @EndDate)) AS derivedtbl_1
GROUP BY date_time";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@timeStep", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.RAIN_DATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.RAIN_DATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.RAIN_DATADataTable dataTable = new NEPTUNEDataSet.RAIN_DATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByStationID(NEPTUNEDataSet.RAIN_DATADataTable dataTable, System.DateTime EndDate, decimal timeStep, int station_id, System.DateTime StartDate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(EndDate));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(timeStep));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(station_id));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(StartDate));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual NEPTUNEDataSet.RAIN_DATADataTable GetDataByStationID(System.DateTime EndDate, decimal timeStep, int station_id, System.DateTime StartDate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(EndDate));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(timeStep));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(station_id));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(StartDate));
            NEPTUNEDataSet.RAIN_DATADataTable dataTable = new NEPTUNEDataSet.RAIN_DATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet.RAIN_DATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet dataSet) {
            return this.Adapter.Update(dataSet, "RAIN_DATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int calendar_date_id, int time_of_day_id, int station_id, System.DateTime rain_tip_time, decimal rainfall_amount_inches, System.DateTime load_date, string source_filename) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(calendar_date_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(time_of_day_id));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(station_id));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(rain_tip_time));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(rainfall_amount_inches));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(load_date));
            if ((source_filename == null)) {
                throw new global::System.ArgumentNullException("source_filename");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(source_filename));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RAIN_DATA_DOWNTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RAIN_DATA_DOWNTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RAIN_DATA_DOWN";
            tableMapping.ColumnMappings.Add("rain_data_down_id", "rain_data_down_id");
            tableMapping.ColumnMappings.Add("calendar_date_id", "calendar_date_id");
            tableMapping.ColumnMappings.Add("time_of_day_id", "time_of_day_id");
            tableMapping.ColumnMappings.Add("station_id", "station_id");
            tableMapping.ColumnMappings.Add("rain_tip_time", "rain_tip_time");
            tableMapping.ColumnMappings.Add("rainfall_amount_inches", "rainfall_amount_inches");
            tableMapping.ColumnMappings.Add("load_date", "load_date");
            tableMapping.ColumnMappings.Add("source_filename", "source_filename");
            tableMapping.ColumnMappings.Add("downtime_id", "downtime_id");
            tableMapping.ColumnMappings.Add("applied_date", "applied_date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[RAIN_DATA_DOWN] ([calendar_date_id], [time_of_day_id], [station_id], [rain_tip_time], [rainfall_amount_inches], [load_date], [source_filename], [downtime_id], [applied_date]) VALUES (@calendar_date_id, @time_of_day_id, @station_id, @rain_tip_time, @rainfall_amount_inches, @load_date, @source_filename, @downtime_id, @applied_date)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rain_tip_time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rain_tip_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rainfall_amount_inches", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 3, "rainfall_amount_inches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@downtime_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "downtime_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@applied_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "applied_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT rain_data_down_id, calendar_date_id, time_of_day_id, station_id, rain_tip_" +
                "time, rainfall_amount_inches, load_date, source_filename, downtime_id, applied_d" +
                "ate FROM dbo.RAIN_DATA_DOWN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.RAIN_DATA_DOWNDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.RAIN_DATA_DOWNDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.RAIN_DATA_DOWNDataTable dataTable = new NEPTUNEDataSet.RAIN_DATA_DOWNDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet.RAIN_DATA_DOWNDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet dataSet) {
            return this.Adapter.Update(dataSet, "RAIN_DATA_DOWN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int calendar_date_id, int time_of_day_id, int station_id, System.DateTime rain_tip_time, decimal rainfall_amount_inches, System.DateTime load_date, string source_filename, int downtime_id, System.DateTime applied_date) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(calendar_date_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(time_of_day_id));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(station_id));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(rain_tip_time));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(rainfall_amount_inches));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(load_date));
            if ((source_filename == null)) {
                throw new global::System.ArgumentNullException("source_filename");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(source_filename));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(downtime_id));
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(applied_date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RAIN_SENSORTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RAIN_SENSORTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RAIN_SENSOR";
            tableMapping.ColumnMappings.Add("rain_sensor_id", "rain_sensor_id");
            tableMapping.ColumnMappings.Add("station_id", "station_id");
            tableMapping.ColumnMappings.Add("start_date", "start_date");
            tableMapping.ColumnMappings.Add("end_date", "end_date");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("create_by", "create_by");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("update_by", "update_by");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[RAIN_SENSOR] WHERE (([rain_sensor_id] = @Original_rain_sensor_id) AND ([station_id] = @Original_station_id) AND ([start_date] = @Original_start_date) AND ((@IsNull_end_date = 1 AND [end_date] IS NULL) OR ([end_date] = @Original_end_date)) AND ([create_date] = @Original_create_date) AND ([create_by] = @Original_create_by) AND ([update_date] = @Original_update_date) AND ([update_by] = @Original_update_by))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rain_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rain_sensor_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_start_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_end_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_end_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[RAIN_SENSOR] ([station_id], [start_date], [end_date], [create_date], [create_by], [update_date], [update_by]) VALUES (@station_id, @start_date, @end_date, @create_date, @create_by, @update_date, @update_by);
SELECT rain_sensor_id, station_id, start_date, end_date, create_date, create_by, update_date, update_by FROM dbo.RAIN_SENSOR WHERE (rain_sensor_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@start_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@end_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[RAIN_SENSOR] SET [station_id] = @station_id, [start_date] = @start_date, [end_date] = @end_date, [create_date] = @create_date, [create_by] = @create_by, [update_date] = @update_date, [update_by] = @update_by WHERE (([rain_sensor_id] = @Original_rain_sensor_id) AND ([station_id] = @Original_station_id) AND ([start_date] = @Original_start_date) AND ((@IsNull_end_date = 1 AND [end_date] IS NULL) OR ([end_date] = @Original_end_date)) AND ([create_date] = @Original_create_date) AND ([create_by] = @Original_create_by) AND ([update_date] = @Original_update_date) AND ([update_by] = @Original_update_by));
SELECT rain_sensor_id, station_id, start_date, end_date, create_date, create_by, update_date, update_by FROM dbo.RAIN_SENSOR WHERE (rain_sensor_id = @rain_sensor_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@start_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@end_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rain_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rain_sensor_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_start_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_end_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_end_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rain_sensor_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "rain_sensor_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT rain_sensor_id, station_id, start_date, end_date, create_date, create_by, " +
                "update_date, update_by FROM dbo.RAIN_SENSOR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.RAIN_SENSORDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.RAIN_SENSORDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.RAIN_SENSORDataTable dataTable = new NEPTUNEDataSet.RAIN_SENSORDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet.RAIN_SENSORDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet dataSet) {
            return this.Adapter.Update(dataSet, "RAIN_SENSOR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_rain_sensor_id, int Original_station_id, System.DateTime Original_start_date, global::System.Nullable<global::System.DateTime> Original_end_date, System.DateTime Original_create_date, string Original_create_by, System.DateTime Original_update_date, string Original_update_by) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_rain_sensor_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_station_id));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_start_date));
            if ((Original_end_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_end_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_by == null)) {
                throw new global::System.ArgumentNullException("Original_create_by");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_create_by));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_update_date));
            if ((Original_update_by == null)) {
                throw new global::System.ArgumentNullException("Original_update_by");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_update_by));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int station_id, System.DateTime start_date, global::System.Nullable<global::System.DateTime> end_date, System.DateTime create_date, string create_by, System.DateTime update_date, string update_by) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(station_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(start_date));
            if ((end_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(end_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(create_date));
            if ((create_by == null)) {
                throw new global::System.ArgumentNullException("create_by");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(create_by));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(update_date));
            if ((update_by == null)) {
                throw new global::System.ArgumentNullException("update_by");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(update_by));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int station_id, 
                    System.DateTime start_date, 
                    global::System.Nullable<global::System.DateTime> end_date, 
                    System.DateTime create_date, 
                    string create_by, 
                    System.DateTime update_date, 
                    string update_by, 
                    int Original_rain_sensor_id, 
                    int Original_station_id, 
                    System.DateTime Original_start_date, 
                    global::System.Nullable<global::System.DateTime> Original_end_date, 
                    System.DateTime Original_create_date, 
                    string Original_create_by, 
                    System.DateTime Original_update_date, 
                    string Original_update_by, 
                    int rain_sensor_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(station_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(start_date));
            if ((end_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(end_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(create_date));
            if ((create_by == null)) {
                throw new global::System.ArgumentNullException("create_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(create_by));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(update_date));
            if ((update_by == null)) {
                throw new global::System.ArgumentNullException("update_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(update_by));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_rain_sensor_id));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_station_id));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_start_date));
            if ((Original_end_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_end_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_by == null)) {
                throw new global::System.ArgumentNullException("Original_create_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_create_by));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_update_date));
            if ((Original_update_by == null)) {
                throw new global::System.ArgumentNullException("Original_update_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_update_by));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(rain_sensor_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int station_id, System.DateTime start_date, global::System.Nullable<global::System.DateTime> end_date, System.DateTime create_date, string create_by, System.DateTime update_date, string update_by, int Original_rain_sensor_id, int Original_station_id, System.DateTime Original_start_date, global::System.Nullable<global::System.DateTime> Original_end_date, System.DateTime Original_create_date, string Original_create_by, System.DateTime Original_update_date, string Original_update_by) {
            return this.Update(station_id, start_date, end_date, create_date, create_by, update_date, update_by, Original_rain_sensor_id, Original_station_id, Original_start_date, Original_end_date, Original_create_date, Original_create_by, Original_update_date, Original_update_by, Original_rain_sensor_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class STATIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public STATIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "STATION";
            tableMapping.ColumnMappings.Add("station_id", "station_id");
            tableMapping.ColumnMappings.Add("h2_number", "h2_number");
            tableMapping.ColumnMappings.Add("station_name", "station_name");
            tableMapping.ColumnMappings.Add("location_description", "location_description");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("location_type", "location_type");
            tableMapping.ColumnMappings.Add("start_date", "start_date");
            tableMapping.ColumnMappings.Add("end_date", "end_date");
            tableMapping.ColumnMappings.Add("state_plane_x_ft", "state_plane_x_ft");
            tableMapping.ColumnMappings.Add("state_plane_y_ft", "state_plane_y_ft");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("create_by", "create_by");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("update_by", "update_by");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[STATION] WHERE (([station_id] = @Original_station_id) AND ([h2_number] = @Original_h2_number) AND ([station_name] = @Original_station_name) AND ((@IsNull_location_description = 1 AND [location_description] IS NULL) OR ([location_description] = @Original_location_description)) AND ((@IsNull_address = 1 AND [address] IS NULL) OR ([address] = @Original_address)) AND ((@IsNull_location_type = 1 AND [location_type] IS NULL) OR ([location_type] = @Original_location_type)) AND ([start_date] = @Original_start_date) AND ((@IsNull_end_date = 1 AND [end_date] IS NULL) OR ([end_date] = @Original_end_date)) AND ((@IsNull_state_plane_x_ft = 1 AND [state_plane_x_ft] IS NULL) OR ([state_plane_x_ft] = @Original_state_plane_x_ft)) AND ((@IsNull_state_plane_y_ft = 1 AND [state_plane_y_ft] IS NULL) OR ([state_plane_y_ft] = @Original_state_plane_y_ft)) AND ([create_date] = @Original_create_date) AND ([create_by] = @Original_create_by) AND ([update_date] = @Original_update_date) AND ([update_by] = @Original_update_by))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_h2_number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "h2_number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_location_description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_location_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_start_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_end_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_end_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_state_plane_x_ft", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state_plane_x_ft", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_state_plane_x_ft", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state_plane_x_ft", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_state_plane_y_ft", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state_plane_y_ft", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_state_plane_y_ft", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state_plane_y_ft", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[STATION] ([h2_number], [station_name], [location_description], [address], [location_type], [start_date], [end_date], [state_plane_x_ft], [state_plane_y_ft], [create_date], [create_by], [update_date], [update_by]) VALUES (@h2_number, @station_name, @location_description, @address, @location_type, @start_date, @end_date, @state_plane_x_ft, @state_plane_y_ft, @create_date, @create_by, @update_date, @update_by);
SELECT station_id, h2_number, station_name, location_description, address, location_type, start_date, end_date, state_plane_x_ft, state_plane_y_ft, create_date, create_by, update_date, update_by FROM dbo.STATION WHERE (station_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@h2_number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "h2_number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@start_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@end_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@state_plane_x_ft", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state_plane_x_ft", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@state_plane_y_ft", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state_plane_y_ft", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[STATION] SET [h2_number] = @h2_number, [station_name] = @station_na" +
                "me, [location_description] = @location_description, [address] = @address, [locat" +
                "ion_type] = @location_type, [start_date] = @start_date, [end_date] = @end_date, " +
                "[state_plane_x_ft] = @state_plane_x_ft, [state_plane_y_ft] = @state_plane_y_ft, " +
                "[create_date] = @create_date, [create_by] = @create_by, [update_date] = @update_" +
                "date, [update_by] = @update_by WHERE (([station_id] = @Original_station_id) AND " +
                "([h2_number] = @Original_h2_number) AND ([station_name] = @Original_station_name" +
                ") AND ((@IsNull_location_description = 1 AND [location_description] IS NULL) OR " +
                "([location_description] = @Original_location_description)) AND ((@IsNull_address" +
                " = 1 AND [address] IS NULL) OR ([address] = @Original_address)) AND ((@IsNull_lo" +
                "cation_type = 1 AND [location_type] IS NULL) OR ([location_type] = @Original_loc" +
                "ation_type)) AND ([start_date] = @Original_start_date) AND ((@IsNull_end_date = " +
                "1 AND [end_date] IS NULL) OR ([end_date] = @Original_end_date)) AND ((@IsNull_st" +
                "ate_plane_x_ft = 1 AND [state_plane_x_ft] IS NULL) OR ([state_plane_x_ft] = @Ori" +
                "ginal_state_plane_x_ft)) AND ((@IsNull_state_plane_y_ft = 1 AND [state_plane_y_f" +
                "t] IS NULL) OR ([state_plane_y_ft] = @Original_state_plane_y_ft)) AND ([create_d" +
                "ate] = @Original_create_date) AND ([create_by] = @Original_create_by) AND ([upda" +
                "te_date] = @Original_update_date) AND ([update_by] = @Original_update_by));\r\nSEL" +
                "ECT station_id, h2_number, station_name, location_description, address, location" +
                "_type, start_date, end_date, state_plane_x_ft, state_plane_y_ft, create_date, cr" +
                "eate_by, update_date, update_by FROM dbo.STATION WHERE (station_id = @station_id" +
                ")";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@h2_number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "h2_number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@start_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@end_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@state_plane_x_ft", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state_plane_x_ft", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@state_plane_y_ft", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state_plane_y_ft", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_h2_number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "h2_number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_location_description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_location_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_start_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_end_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_end_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_state_plane_x_ft", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state_plane_x_ft", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_state_plane_x_ft", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state_plane_x_ft", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_state_plane_y_ft", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state_plane_y_ft", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_state_plane_y_ft", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state_plane_y_ft", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT station_id, h2_number, station_name, location_description, address, locati" +
                "on_type, start_date, end_date, state_plane_x_ft, state_plane_y_ft, create_date, " +
                "create_by, update_date, update_by FROM dbo.STATION";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.STATIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.STATIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.STATIONDataTable dataTable = new NEPTUNEDataSet.STATIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet.STATIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet dataSet) {
            return this.Adapter.Update(dataSet, "STATION");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_station_id, int Original_h2_number, string Original_station_name, string Original_location_description, string Original_address, string Original_location_type, System.DateTime Original_start_date, global::System.Nullable<global::System.DateTime> Original_end_date, global::System.Nullable<int> Original_state_plane_x_ft, global::System.Nullable<int> Original_state_plane_y_ft, System.DateTime Original_create_date, string Original_create_by, System.DateTime Original_update_date, string Original_update_by) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_station_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_h2_number));
            if ((Original_station_name == null)) {
                throw new global::System.ArgumentNullException("Original_station_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_station_name));
            }
            if ((Original_location_description == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_location_description));
            }
            if ((Original_address == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_address));
            }
            if ((Original_location_type == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_location_type));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_start_date));
            if ((Original_end_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_end_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_state_plane_x_ft.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_state_plane_x_ft.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_state_plane_y_ft.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_state_plane_y_ft.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_by == null)) {
                throw new global::System.ArgumentNullException("Original_create_by");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_create_by));
            }
            this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_update_date));
            if ((Original_update_by == null)) {
                throw new global::System.ArgumentNullException("Original_update_by");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_update_by));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int h2_number, string station_name, string location_description, string address, string location_type, System.DateTime start_date, global::System.Nullable<global::System.DateTime> end_date, global::System.Nullable<int> state_plane_x_ft, global::System.Nullable<int> state_plane_y_ft, System.DateTime create_date, string create_by, System.DateTime update_date, string update_by) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(h2_number));
            if ((station_name == null)) {
                throw new global::System.ArgumentNullException("station_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(station_name));
            }
            if ((location_description == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(location_description));
            }
            if ((address == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(address));
            }
            if ((location_type == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(location_type));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(start_date));
            if ((end_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(end_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((state_plane_x_ft.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(state_plane_x_ft.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((state_plane_y_ft.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(state_plane_y_ft.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(create_date));
            if ((create_by == null)) {
                throw new global::System.ArgumentNullException("create_by");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(create_by));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(update_date));
            if ((update_by == null)) {
                throw new global::System.ArgumentNullException("update_by");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(update_by));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int h2_number, 
                    string station_name, 
                    string location_description, 
                    string address, 
                    string location_type, 
                    System.DateTime start_date, 
                    global::System.Nullable<global::System.DateTime> end_date, 
                    global::System.Nullable<int> state_plane_x_ft, 
                    global::System.Nullable<int> state_plane_y_ft, 
                    System.DateTime create_date, 
                    string create_by, 
                    System.DateTime update_date, 
                    string update_by, 
                    int Original_station_id, 
                    int Original_h2_number, 
                    string Original_station_name, 
                    string Original_location_description, 
                    string Original_address, 
                    string Original_location_type, 
                    System.DateTime Original_start_date, 
                    global::System.Nullable<global::System.DateTime> Original_end_date, 
                    global::System.Nullable<int> Original_state_plane_x_ft, 
                    global::System.Nullable<int> Original_state_plane_y_ft, 
                    System.DateTime Original_create_date, 
                    string Original_create_by, 
                    System.DateTime Original_update_date, 
                    string Original_update_by, 
                    int station_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(h2_number));
            if ((station_name == null)) {
                throw new global::System.ArgumentNullException("station_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(station_name));
            }
            if ((location_description == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(location_description));
            }
            if ((address == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(address));
            }
            if ((location_type == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(location_type));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(start_date));
            if ((end_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(end_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((state_plane_x_ft.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(state_plane_x_ft.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((state_plane_y_ft.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(state_plane_y_ft.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(create_date));
            if ((create_by == null)) {
                throw new global::System.ArgumentNullException("create_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(create_by));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(update_date));
            if ((update_by == null)) {
                throw new global::System.ArgumentNullException("update_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(update_by));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_station_id));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_h2_number));
            if ((Original_station_name == null)) {
                throw new global::System.ArgumentNullException("Original_station_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_station_name));
            }
            if ((Original_location_description == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_location_description));
            }
            if ((Original_address == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_address));
            }
            if ((Original_location_type == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_location_type));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_start_date));
            if ((Original_end_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_end_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_state_plane_x_ft.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_state_plane_x_ft.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_state_plane_y_ft.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_state_plane_y_ft.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_by == null)) {
                throw new global::System.ArgumentNullException("Original_create_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_create_by));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(Original_update_date));
            if ((Original_update_by == null)) {
                throw new global::System.ArgumentNullException("Original_update_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_update_by));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(station_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int h2_number, 
                    string station_name, 
                    string location_description, 
                    string address, 
                    string location_type, 
                    System.DateTime start_date, 
                    global::System.Nullable<global::System.DateTime> end_date, 
                    global::System.Nullable<int> state_plane_x_ft, 
                    global::System.Nullable<int> state_plane_y_ft, 
                    System.DateTime create_date, 
                    string create_by, 
                    System.DateTime update_date, 
                    string update_by, 
                    int Original_station_id, 
                    int Original_h2_number, 
                    string Original_station_name, 
                    string Original_location_description, 
                    string Original_address, 
                    string Original_location_type, 
                    System.DateTime Original_start_date, 
                    global::System.Nullable<global::System.DateTime> Original_end_date, 
                    global::System.Nullable<int> Original_state_plane_x_ft, 
                    global::System.Nullable<int> Original_state_plane_y_ft, 
                    System.DateTime Original_create_date, 
                    string Original_create_by, 
                    System.DateTime Original_update_date, 
                    string Original_update_by) {
            return this.Update(h2_number, station_name, location_description, address, location_type, start_date, end_date, state_plane_x_ft, state_plane_y_ft, create_date, create_by, update_date, update_by, Original_station_id, Original_h2_number, Original_station_name, Original_location_description, Original_address, Original_location_type, Original_start_date, Original_end_date, Original_state_plane_x_ft, Original_state_plane_y_ft, Original_create_date, Original_create_by, Original_update_date, Original_update_by, Original_station_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_DOWNTIMETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public V_DOWNTIMETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT downtime_id, station_id, station_name, start_date, end_date, event_descrip" +
                "tion, data_category, create_date, create_by, applied_date, update_date, update_b" +
                "y FROM dbo.V_DOWNTIME";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.V_DOWNTIMEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.V_DOWNTIMEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.V_DOWNTIMEDataTable dataTable = new NEPTUNEDataSet.V_DOWNTIMEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_MODEL_RAIN_DOWNTIMETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public V_MODEL_RAIN_DOWNTIMETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "V_MODEL_RAIN_DOWNTIME";
            tableMapping.ColumnMappings.Add("h2_number", "station_id");
            tableMapping.ColumnMappings.Add("start_date", "start_date");
            tableMapping.ColumnMappings.Add("end_date", "end_date");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT h2_number, start_date, end_date FROM dbo.V_MODEL_RAIN_DOWNTIME";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT station_id, start_date, end_date FROM dbo.DOWNTIME where station_id = @sta" +
                "tion_id  AND end_date >=@sdate AND start_date <= @edate";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@edate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.V_MODEL_RAIN_DOWNTIMEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.V_MODEL_RAIN_DOWNTIMEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.V_MODEL_RAIN_DOWNTIMEDataTable dataTable = new NEPTUNEDataSet.V_MODEL_RAIN_DOWNTIMEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByStationID(NEPTUNEDataSet.V_MODEL_RAIN_DOWNTIMEDataTable dataTable, int station_id, System.DateTime sdate, System.DateTime edate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(station_id));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(sdate));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(edate));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual NEPTUNEDataSet.V_MODEL_RAIN_DOWNTIMEDataTable GetDataByStationID(int station_id, System.DateTime sdate, System.DateTime edate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(station_id));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(sdate));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(edate));
            NEPTUNEDataSet.V_MODEL_RAIN_DOWNTIMEDataTable dataTable = new NEPTUNEDataSet.V_MODEL_RAIN_DOWNTIMEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_MODEL_RAIN_FIFTEEN_MINUTETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public V_MODEL_RAIN_FIFTEEN_MINUTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "V_MODEL_RAIN_FIFTEEN_MINUTE";
            tableMapping.ColumnMappings.Add("h2_number", "h2_number");
            tableMapping.ColumnMappings.Add("fifteen_minute_date_time", "fifteen_minute_date_time");
            tableMapping.ColumnMappings.Add("fifteen_minute_sum_inches", "fifteen_minute_sum_inches");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT h2_number, fifteen_minute_date_time, fifteen_minute_sum_inches FROM dbo.V_" +
                "MODEL_RAIN_FIFTEEN_MINUTE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.V_MODEL_RAIN_FIFTEEN_MINUTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.V_MODEL_RAIN_FIFTEEN_MINUTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.V_MODEL_RAIN_FIFTEEN_MINUTEDataTable dataTable = new NEPTUNEDataSet.V_MODEL_RAIN_FIFTEEN_MINUTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_MODEL_RAIN_FIVE_MINUTETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public V_MODEL_RAIN_FIVE_MINUTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "V_MODEL_RAIN_FIVE_MINUTE";
            tableMapping.ColumnMappings.Add("h2_number", "station_id");
            tableMapping.ColumnMappings.Add("five_minute_date_time", "five_minute_date_time");
            tableMapping.ColumnMappings.Add("five_minute_sum_inches", "five_minute_sum_inches");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT h2_number, five_minute_date_time, five_minute_sum_inches FROM dbo.V_MODEL_" +
                "RAIN_FIVE_MINUTE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     station_id, five_minute_date_time, SUM(rainfall_amount_inches) AS five_minute_sum_inches
FROM         (SELECT     station_id, DATEADD(n, DATEDIFF(n, 0, rain_tip_time) - DATEDIFF(n, 0, rain_tip_time) % 5, 0) AS five_minute_date_time, 
                                              rainfall_amount_inches
                       FROM          dbo.RAIN_DATA
                       WHERE      (station_id = @station_id) AND (rain_tip_time >= @StartDate) AND (rain_tip_time <= @EndDate)) AS derivedtbl_1
GROUP BY station_id, five_minute_date_time";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.V_MODEL_RAIN_FIVE_MINUTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.V_MODEL_RAIN_FIVE_MINUTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.V_MODEL_RAIN_FIVE_MINUTEDataTable dataTable = new NEPTUNEDataSet.V_MODEL_RAIN_FIVE_MINUTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByStationID(NEPTUNEDataSet.V_MODEL_RAIN_FIVE_MINUTEDataTable dataTable, System.DateTime EndDate, int station_id, System.DateTime StartDate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(EndDate));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(station_id));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(StartDate));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual NEPTUNEDataSet.V_MODEL_RAIN_FIVE_MINUTEDataTable GetDataByStationID(System.DateTime EndDate, int station_id, System.DateTime StartDate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(EndDate));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(station_id));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(StartDate));
            NEPTUNEDataSet.V_MODEL_RAIN_FIVE_MINUTEDataTable dataTable = new NEPTUNEDataSet.V_MODEL_RAIN_FIVE_MINUTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_MODEL_RAIN_ONE_HOURTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public V_MODEL_RAIN_ONE_HOURTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT h2_number, hour_date_time, hour_sum_inches FROM dbo.V_MODEL_RAIN_ONE_HOUR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.V_MODEL_RAIN_ONE_HOURDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.V_MODEL_RAIN_ONE_HOURDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.V_MODEL_RAIN_ONE_HOURDataTable dataTable = new NEPTUNEDataSet.V_MODEL_RAIN_ONE_HOURDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_MODEL_RAIN_SIX_MINUTETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public V_MODEL_RAIN_SIX_MINUTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "V_MODEL_RAIN_SIX_MINUTE";
            tableMapping.ColumnMappings.Add("h2_number", "h2_number");
            tableMapping.ColumnMappings.Add("six_minute_date_time", "six_minute_date_time");
            tableMapping.ColumnMappings.Add("six_minute_sum_inches", "six_minute_sum_inches");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT h2_number, six_minute_date_time, six_minute_sum_inches FROM dbo.V_MODEL_RA" +
                "IN_SIX_MINUTE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     station_id,six_minute_date_time, SUM(rainfall_amount_inches) AS six_minute_sum_inches
FROM         (SELECT     station_id, DATEADD(n, DATEDIFF(n, 0, rain_tip_time) - DATEDIFF(n, 0, rain_tip_time) % 6, 0) AS six_minute_date_time, 
                                              rainfall_amount_inches
                       FROM          dbo.RAIN_DATA
                       WHERE      (station_id = @station_id) AND (rain_tip_time >= @StartDate) AND (rain_tip_time <= @EndDate)) AS derivedtbl_1
GROUP BY station_id, six_minute_date_time";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.V_MODEL_RAIN_SIX_MINUTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.V_MODEL_RAIN_SIX_MINUTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.V_MODEL_RAIN_SIX_MINUTEDataTable dataTable = new NEPTUNEDataSet.V_MODEL_RAIN_SIX_MINUTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByStationID(NEPTUNEDataSet.V_MODEL_RAIN_SIX_MINUTEDataTable dataTable, System.DateTime EndDate, int station_id, System.DateTime StartDate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(EndDate));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(station_id));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(StartDate));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual NEPTUNEDataSet.V_MODEL_RAIN_SIX_MINUTEDataTable GetDataByStationID(System.DateTime EndDate, int station_id, System.DateTime StartDate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(EndDate));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(station_id));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(StartDate));
            NEPTUNEDataSet.V_MODEL_RAIN_SIX_MINUTEDataTable dataTable = new NEPTUNEDataSet.V_MODEL_RAIN_SIX_MINUTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_MODEL_RAIN_TEN_MINUTETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public V_MODEL_RAIN_TEN_MINUTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "V_MODEL_RAIN_TEN_MINUTE";
            tableMapping.ColumnMappings.Add("h2_number", "h2_number");
            tableMapping.ColumnMappings.Add("ten_minute_date_time", "ten_minute_date_time");
            tableMapping.ColumnMappings.Add("ten_minute_sum_inches", "ten_minute_sum_inches");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT h2_number, ten_minute_date_time, ten_minute_sum_inches FROM dbo.V_MODEL_RA" +
                "IN_TEN_MINUTE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.V_MODEL_RAIN_TEN_MINUTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.V_MODEL_RAIN_TEN_MINUTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.V_MODEL_RAIN_TEN_MINUTEDataTable dataTable = new NEPTUNEDataSet.V_MODEL_RAIN_TEN_MINUTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_MODEL_RAIN_THIRTY_MINUTETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public V_MODEL_RAIN_THIRTY_MINUTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "V_MODEL_RAIN_THIRTY_MINUTE";
            tableMapping.ColumnMappings.Add("h2_number", "h2_number");
            tableMapping.ColumnMappings.Add("thirty_minute_date_time", "thirty_minute_date_time");
            tableMapping.ColumnMappings.Add("thirty_minute_sum_inches", "thirty_minute_sum_inches");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT h2_number, thirty_minute_date_time, thirty_minute_sum_inches FROM dbo.V_MO" +
                "DEL_RAIN_THIRTY_MINUTE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.V_MODEL_RAIN_THIRTY_MINUTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.V_MODEL_RAIN_THIRTY_MINUTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.V_MODEL_RAIN_THIRTY_MINUTEDataTable dataTable = new NEPTUNEDataSet.V_MODEL_RAIN_THIRTY_MINUTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_MODEL_RAIN_TWELVE_MINUTETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public V_MODEL_RAIN_TWELVE_MINUTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "V_MODEL_RAIN_TWELVE_MINUTE";
            tableMapping.ColumnMappings.Add("h2_number", "h2_number");
            tableMapping.ColumnMappings.Add("twelve_minute_date_time", "twelve_minute_date_time");
            tableMapping.ColumnMappings.Add("twelve_minute_sum_inches", "twelve_minute_sum_inches");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT h2_number, twelve_minute_date_time, twelve_minute_sum_inches FROM dbo.V_MO" +
                "DEL_RAIN_TWELVE_MINUTE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.V_MODEL_RAIN_TWELVE_MINUTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.V_MODEL_RAIN_TWELVE_MINUTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.V_MODEL_RAIN_TWELVE_MINUTEDataTable dataTable = new NEPTUNEDataSet.V_MODEL_RAIN_TWELVE_MINUTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_MODEL_RAIN_TWENTY_MINUTETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public V_MODEL_RAIN_TWENTY_MINUTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "V_MODEL_RAIN_TWENTY_MINUTE";
            tableMapping.ColumnMappings.Add("h2_number", "h2_number");
            tableMapping.ColumnMappings.Add("twenty_minute_date_time", "twenty_minute_date_time");
            tableMapping.ColumnMappings.Add("twenty_minute_sum_inches", "twenty_minute_sum_inches");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT h2_number, twenty_minute_date_time, twenty_minute_sum_inches FROM dbo.V_MO" +
                "DEL_RAIN_TWENTY_MINUTE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.V_MODEL_RAIN_TWENTY_MINUTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.V_MODEL_RAIN_TWENTY_MINUTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.V_MODEL_RAIN_TWENTY_MINUTEDataTable dataTable = new NEPTUNEDataSet.V_MODEL_RAIN_TWENTY_MINUTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_MODELING_RAIN_FIVE_MINUTETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public V_MODELING_RAIN_FIVE_MINUTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "V_MODELING_RAIN_FIVE_MINUTE";
            tableMapping.ColumnMappings.Add("h2_number", "h2_number");
            tableMapping.ColumnMappings.Add("calendar_date", "calendar_date");
            tableMapping.ColumnMappings.Add("hour_number_24", "hour_number_24");
            tableMapping.ColumnMappings.Add("five_minute_interval_number", "five_minute_interval_number");
            tableMapping.ColumnMappings.Add("five_minute_sum_inches", "five_minute_sum_inches");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT h2_number, calendar_date, hour_number_24, five_minute_interval_number, fiv" +
                "e_minute_sum_inches FROM dbo.V_MODELING_RAIN_FIVE_MINUTE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.V_MODELING_RAIN_FIVE_MINUTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.V_MODELING_RAIN_FIVE_MINUTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.V_MODELING_RAIN_FIVE_MINUTEDataTable dataTable = new NEPTUNEDataSet.V_MODELING_RAIN_FIVE_MINUTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_RAIN_DATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public V_RAIN_DATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT station_name, rain_tip_time FROM dbo.V_RAIN_DATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.V_RAIN_DATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.V_RAIN_DATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.V_RAIN_DATADataTable dataTable = new NEPTUNEDataSet.V_RAIN_DATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_RAIN_HISTORY_DOWNTIMETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public V_RAIN_HISTORY_DOWNTIMETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT h2_number, start_date, end_date, event_description, data_category FROM dbo" +
                ".V_RAIN_HISTORY_DOWNTIME";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.V_RAIN_HISTORY_DOWNTIMEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.V_RAIN_HISTORY_DOWNTIMEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.V_RAIN_HISTORY_DOWNTIMEDataTable dataTable = new NEPTUNEDataSet.V_RAIN_HISTORY_DOWNTIMEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_RAIN_SENSORTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public V_RAIN_SENSORTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT station_id, rain_sensor_id, h2_number, start_date, end_date FROM dbo.V_RAI" +
                "N_SENSOR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.V_RAIN_SENSORDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.V_RAIN_SENSORDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.V_RAIN_SENSORDataTable dataTable = new NEPTUNEDataSet.V_RAIN_SENSORDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DEPTH_DATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DEPTH_DATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DEPTH_DATA";
            tableMapping.ColumnMappings.Add("depth_data_id", "depth_data_id");
            tableMapping.ColumnMappings.Add("calendar_date_id", "calendar_date_id");
            tableMapping.ColumnMappings.Add("time_of_day_id", "time_of_day_id");
            tableMapping.ColumnMappings.Add("station_id", "station_id");
            tableMapping.ColumnMappings.Add("environ_sensor_id", "environ_sensor_id");
            tableMapping.ColumnMappings.Add("location_qualifier", "location_qualifier");
            tableMapping.ColumnMappings.Add("original_sample_time", "original_sample_time");
            tableMapping.ColumnMappings.Add("assigned_sample_time", "assigned_sample_time");
            tableMapping.ColumnMappings.Add("raw_value", "raw_value");
            tableMapping.ColumnMappings.Add("final_value", "final_value");
            tableMapping.ColumnMappings.Add("units", "units");
            tableMapping.ColumnMappings.Add("load_date", "load_date");
            tableMapping.ColumnMappings.Add("source_filename", "source_filename");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[DEPTH_DATA] WHERE (([depth_data_id] = @Original_depth_data_id) AND ([calendar_date_id] = @Original_calendar_date_id) AND ([time_of_day_id] = @Original_time_of_day_id) AND ([station_id] = @Original_station_id) AND ([environ_sensor_id] = @Original_environ_sensor_id) AND ([location_qualifier] = @Original_location_qualifier) AND ([original_sample_time] = @p2) AND ([assigned_sample_time] = @Original_assigned_sample_time) AND ([raw_value] = @Original_raw_value) AND ([final_value] = @Original_final_value) AND ([units] = @Original_units) AND ([load_date] = @Original_load_date) AND ([source_filename] = @Original_source_filename))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_depth_data_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "depth_data_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_raw_value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "raw_value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "units", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DEPTH_DATA] ([calendar_date_id], [time_of_day_id], [station_id], [environ_sensor_id], [location_qualifier], [original_sample_time], [assigned_sample_time], [raw_value], [final_value], [units], [load_date], [source_filename]) VALUES (@calendar_date_id, @time_of_day_id, @station_id, @environ_sensor_id, @location_qualifier, @p1, @assigned_sample_time, @raw_value, @final_value, @units, @load_date, @source_filename);
SELECT depth_data_id, calendar_date_id, time_of_day_id, station_id, environ_sensor_id, location_qualifier, original_sample_time, assigned_sample_time, raw_value, final_value, units, load_date, source_filename FROM dbo.DEPTH_DATA WHERE (depth_data_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@raw_value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "raw_value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "units", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DEPTH_DATA] SET [calendar_date_id] = @calendar_date_id, [time_of_day_id] = @time_of_day_id, [station_id] = @station_id, [environ_sensor_id] = @environ_sensor_id, [location_qualifier] = @location_qualifier, [original_sample_time] = @p1, [assigned_sample_time] = @assigned_sample_time, [raw_value] = @raw_value, [final_value] = @final_value, [units] = @units, [load_date] = @load_date, [source_filename] = @source_filename WHERE (([depth_data_id] = @Original_depth_data_id) AND ([calendar_date_id] = @Original_calendar_date_id) AND ([time_of_day_id] = @Original_time_of_day_id) AND ([station_id] = @Original_station_id) AND ([environ_sensor_id] = @Original_environ_sensor_id) AND ([location_qualifier] = @Original_location_qualifier) AND ([original_sample_time] = @p2) AND ([assigned_sample_time] = @Original_assigned_sample_time) AND ([raw_value] = @Original_raw_value) AND ([final_value] = @Original_final_value) AND ([units] = @Original_units) AND ([load_date] = @Original_load_date) AND ([source_filename] = @Original_source_filename));
SELECT depth_data_id, calendar_date_id, time_of_day_id, station_id, environ_sensor_id, location_qualifier, original_sample_time, assigned_sample_time, raw_value, final_value, units, load_date, source_filename FROM dbo.DEPTH_DATA WHERE (depth_data_id = @depth_data_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@raw_value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "raw_value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "units", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_depth_data_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "depth_data_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_raw_value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "raw_value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "units", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@depth_data_id", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "depth_data_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT depth_data_id, calendar_date_id, time_of_day_id, station_id, environ_senso" +
                "r_id, location_qualifier, original_sample_time, assigned_sample_time, raw_value," +
                " final_value, units, load_date, source_filename FROM dbo.DEPTH_DATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT depth_data_id, calendar_date_id, time_of_day_id, station_id, environ_sensor_id, location_qualifier, original_sample_time, assigned_sample_time, raw_value, final_value, units, load_date, source_filename FROM dbo.DEPTH_DATA WHERE station_id = @station_id AND location_qualifier = @location_qaulifier AND (assigned_sample_time between @sdate and @edate)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_qaulifier", global::System.Data.SqlDbType.Char, 25, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sdate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@edate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.DEPTH_DATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.DEPTH_DATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.DEPTH_DATADataTable dataTable = new NEPTUNEDataSet.DEPTH_DATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillDepthDataByLocationAndTime(NEPTUNEDataSet.DEPTH_DATADataTable dataTable, int station_id, string location_qaulifier, System.DateTime sdate, System.DateTime edate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(station_id));
            if ((location_qaulifier == null)) {
                throw new global::System.ArgumentNullException("location_qaulifier");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(location_qaulifier));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(sdate));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(edate));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual NEPTUNEDataSet.DEPTH_DATADataTable GetDepthDataByLocationAndTime(int station_id, string location_qaulifier, System.DateTime sdate, System.DateTime edate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(station_id));
            if ((location_qaulifier == null)) {
                throw new global::System.ArgumentNullException("location_qaulifier");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(location_qaulifier));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(sdate));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(edate));
            NEPTUNEDataSet.DEPTH_DATADataTable dataTable = new NEPTUNEDataSet.DEPTH_DATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet.DEPTH_DATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DEPTH_DATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_depth_data_id, int Original_calendar_date_id, int Original_time_of_day_id, int Original_station_id, int Original_environ_sensor_id, string Original_location_qualifier, System.DateTime p2, System.DateTime Original_assigned_sample_time, int Original_raw_value, decimal Original_final_value, string Original_units, System.DateTime Original_load_date, string Original_source_filename) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_depth_data_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_calendar_date_id));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_time_of_day_id));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_station_id));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_environ_sensor_id));
            if ((Original_location_qualifier == null)) {
                throw new global::System.ArgumentNullException("Original_location_qualifier");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_location_qualifier));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(p2));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_assigned_sample_time));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_raw_value));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_final_value));
            if ((Original_units == null)) {
                throw new global::System.ArgumentNullException("Original_units");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_units));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_load_date));
            if ((Original_source_filename == null)) {
                throw new global::System.ArgumentNullException("Original_source_filename");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_source_filename));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int calendar_date_id, int time_of_day_id, int station_id, int environ_sensor_id, string location_qualifier, System.DateTime p1, System.DateTime assigned_sample_time, int raw_value, decimal final_value, string units, System.DateTime load_date, string source_filename) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(calendar_date_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(time_of_day_id));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(station_id));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(environ_sensor_id));
            if ((location_qualifier == null)) {
                throw new global::System.ArgumentNullException("location_qualifier");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(location_qualifier));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(p1));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(assigned_sample_time));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(raw_value));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(final_value));
            if ((units == null)) {
                throw new global::System.ArgumentNullException("units");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(units));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(load_date));
            if ((source_filename == null)) {
                throw new global::System.ArgumentNullException("source_filename");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(source_filename));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int calendar_date_id, 
                    int time_of_day_id, 
                    int station_id, 
                    int environ_sensor_id, 
                    string location_qualifier, 
                    System.DateTime p1, 
                    System.DateTime assigned_sample_time, 
                    int raw_value, 
                    decimal final_value, 
                    string units, 
                    System.DateTime load_date, 
                    string source_filename, 
                    long Original_depth_data_id, 
                    int Original_calendar_date_id, 
                    int Original_time_of_day_id, 
                    int Original_station_id, 
                    int Original_environ_sensor_id, 
                    string Original_location_qualifier, 
                    System.DateTime p2, 
                    System.DateTime Original_assigned_sample_time, 
                    int Original_raw_value, 
                    decimal Original_final_value, 
                    string Original_units, 
                    System.DateTime Original_load_date, 
                    string Original_source_filename, 
                    int depth_data_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(calendar_date_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(time_of_day_id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(station_id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(environ_sensor_id));
            if ((location_qualifier == null)) {
                throw new global::System.ArgumentNullException("location_qualifier");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(location_qualifier));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(p1));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(assigned_sample_time));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(raw_value));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(final_value));
            if ((units == null)) {
                throw new global::System.ArgumentNullException("units");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(units));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(load_date));
            if ((source_filename == null)) {
                throw new global::System.ArgumentNullException("source_filename");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(source_filename));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(Original_depth_data_id));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_calendar_date_id));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_time_of_day_id));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_station_id));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_environ_sensor_id));
            if ((Original_location_qualifier == null)) {
                throw new global::System.ArgumentNullException("Original_location_qualifier");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_location_qualifier));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(p2));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_assigned_sample_time));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_raw_value));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_final_value));
            if ((Original_units == null)) {
                throw new global::System.ArgumentNullException("Original_units");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_units));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_load_date));
            if ((Original_source_filename == null)) {
                throw new global::System.ArgumentNullException("Original_source_filename");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_source_filename));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(depth_data_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int calendar_date_id, 
                    int time_of_day_id, 
                    int station_id, 
                    int environ_sensor_id, 
                    string location_qualifier, 
                    System.DateTime p1, 
                    System.DateTime assigned_sample_time, 
                    int raw_value, 
                    decimal final_value, 
                    string units, 
                    System.DateTime load_date, 
                    string source_filename, 
                    int Original_depth_data_id, 
                    int Original_calendar_date_id, 
                    int Original_time_of_day_id, 
                    int Original_station_id, 
                    int Original_environ_sensor_id, 
                    string Original_location_qualifier, 
                    System.DateTime p2, 
                    System.DateTime Original_assigned_sample_time, 
                    int Original_raw_value, 
                    decimal Original_final_value, 
                    string Original_units, 
                    System.DateTime Original_load_date, 
                    string Original_source_filename) {
            return this.Update(calendar_date_id, time_of_day_id, station_id, environ_sensor_id, location_qualifier, p1, assigned_sample_time, raw_value, final_value, units, load_date, source_filename, Original_depth_data_id, Original_calendar_date_id, Original_time_of_day_id, Original_station_id, Original_environ_sensor_id, Original_location_qualifier, p2, Original_assigned_sample_time, Original_raw_value, Original_final_value, Original_units, Original_load_date, Original_source_filename, Original_depth_data_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ENVIRON_SENSORTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ENVIRON_SENSORTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ENVIRON_SENSOR";
            tableMapping.ColumnMappings.Add("environ_sensor_id", "environ_sensor_id");
            tableMapping.ColumnMappings.Add("station_id", "station_id");
            tableMapping.ColumnMappings.Add("x_data_category_loc_qual_combined", "x_data_category_loc_qual_combined");
            tableMapping.ColumnMappings.Add("data_category", "data_category");
            tableMapping.ColumnMappings.Add("location_qualifier", "location_qualifier");
            tableMapping.ColumnMappings.Add("channel", "channel");
            tableMapping.ColumnMappings.Add("channel_name", "channel_name");
            tableMapping.ColumnMappings.Add("channel_description", "channel_description");
            tableMapping.ColumnMappings.Add("engineering_unit_span", "engineering_unit_span");
            tableMapping.ColumnMappings.Add("engineering_unit_zero", "engineering_unit_zero");
            tableMapping.ColumnMappings.Add("engineering_units", "engineering_units");
            tableMapping.ColumnMappings.Add("has_depth_to_flow", "has_depth_to_flow");
            tableMapping.ColumnMappings.Add("start_date", "start_date");
            tableMapping.ColumnMappings.Add("end_date", "end_date");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("create_by", "create_by");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("update_by", "update_by");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ENVIRON_SENSOR] WHERE (([environ_sensor_id] = @Original_environ_sensor_id) AND ([station_id] = @Original_station_id) AND ((@IsNull_x_data_category_loc_qual_combined = 1 AND [x_data_category_loc_qual_combined] IS NULL) OR ([x_data_category_loc_qual_combined] = @Original_x_data_category_loc_qual_combined)) AND ([data_category] = @Original_data_category) AND ([location_qualifier] = @Original_location_qualifier) AND ([channel] = @Original_channel) AND ([channel_name] = @Original_channel_name) AND ((@IsNull_channel_description = 1 AND [channel_description] IS NULL) OR ([channel_description] = @Original_channel_description)) AND ([engineering_unit_span] = @Original_engineering_unit_span) AND ([engineering_unit_zero] = @Original_engineering_unit_zero) AND ([engineering_units] = @Original_engineering_units) AND ([has_depth_to_flow] = @Original_has_depth_to_flow) AND ([start_date] = @Original_start_date) AND ((@IsNull_end_date = 1 AND [end_date] IS NULL) OR ([end_date] = @Original_end_date)) AND ([create_date] = @Original_create_date) AND ([create_by] = @Original_create_by) AND ([update_date] = @Original_update_date) AND ([update_by] = @Original_update_by))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_x_data_category_loc_qual_combined", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "x_data_category_loc_qual_combined", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_x_data_category_loc_qual_combined", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "x_data_category_loc_qual_combined", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_data_category", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "data_category", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_channel", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "channel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_channel_name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "channel_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_channel_description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "channel_description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_channel_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "channel_description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_engineering_unit_span", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "engineering_unit_span", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_engineering_unit_zero", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "engineering_unit_zero", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_engineering_units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "engineering_units", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_has_depth_to_flow", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "has_depth_to_flow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_start_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_end_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_end_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ENVIRON_SENSOR] ([station_id], [x_data_category_loc_qual_combined], [data_category], [location_qualifier], [channel], [channel_name], [channel_description], [engineering_unit_span], [engineering_unit_zero], [engineering_units], [has_depth_to_flow], [start_date], [end_date], [create_date], [create_by], [update_date], [update_by]) VALUES (@station_id, @x_data_category_loc_qual_combined, @data_category, @location_qualifier, @channel, @channel_name, @channel_description, @engineering_unit_span, @engineering_unit_zero, @engineering_units, @has_depth_to_flow, @start_date, @end_date, @create_date, @create_by, @update_date, @update_by);
SELECT environ_sensor_id, station_id, x_data_category_loc_qual_combined, data_category, location_qualifier, channel, channel_name, channel_description, engineering_unit_span, engineering_unit_zero, engineering_units, has_depth_to_flow, start_date, end_date, create_date, create_by, update_date, update_by FROM dbo.ENVIRON_SENSOR WHERE (environ_sensor_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@x_data_category_loc_qual_combined", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "x_data_category_loc_qual_combined", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@data_category", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "data_category", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@channel", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "channel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@channel_name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "channel_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@channel_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "channel_description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@engineering_unit_span", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "engineering_unit_span", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@engineering_unit_zero", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "engineering_unit_zero", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@engineering_units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "engineering_units", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@has_depth_to_flow", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "has_depth_to_flow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@start_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@end_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ENVIRON_SENSOR] SET [station_id] = @station_id, [x_data_category_lo" +
                "c_qual_combined] = @x_data_category_loc_qual_combined, [data_category] = @data_c" +
                "ategory, [location_qualifier] = @location_qualifier, [channel] = @channel, [chan" +
                "nel_name] = @channel_name, [channel_description] = @channel_description, [engine" +
                "ering_unit_span] = @engineering_unit_span, [engineering_unit_zero] = @engineerin" +
                "g_unit_zero, [engineering_units] = @engineering_units, [has_depth_to_flow] = @ha" +
                "s_depth_to_flow, [start_date] = @start_date, [end_date] = @end_date, [create_dat" +
                "e] = @create_date, [create_by] = @create_by, [update_date] = @update_date, [upda" +
                "te_by] = @update_by WHERE (([environ_sensor_id] = @Original_environ_sensor_id) A" +
                "ND ([station_id] = @Original_station_id) AND ((@IsNull_x_data_category_loc_qual_" +
                "combined = 1 AND [x_data_category_loc_qual_combined] IS NULL) OR ([x_data_catego" +
                "ry_loc_qual_combined] = @Original_x_data_category_loc_qual_combined)) AND ([data" +
                "_category] = @Original_data_category) AND ([location_qualifier] = @Original_loca" +
                "tion_qualifier) AND ([channel] = @Original_channel) AND ([channel_name] = @Origi" +
                "nal_channel_name) AND ((@IsNull_channel_description = 1 AND [channel_description" +
                "] IS NULL) OR ([channel_description] = @Original_channel_description)) AND ([eng" +
                "ineering_unit_span] = @Original_engineering_unit_span) AND ([engineering_unit_ze" +
                "ro] = @Original_engineering_unit_zero) AND ([engineering_units] = @Original_engi" +
                "neering_units) AND ([has_depth_to_flow] = @Original_has_depth_to_flow) AND ([sta" +
                "rt_date] = @Original_start_date) AND ((@IsNull_end_date = 1 AND [end_date] IS NU" +
                "LL) OR ([end_date] = @Original_end_date)) AND ([create_date] = @Original_create_" +
                "date) AND ([create_by] = @Original_create_by) AND ([update_date] = @Original_upd" +
                "ate_date) AND ([update_by] = @Original_update_by));\r\nSELECT environ_sensor_id, s" +
                "tation_id, x_data_category_loc_qual_combined, data_category, location_qualifier," +
                " channel, channel_name, channel_description, engineering_unit_span, engineering_" +
                "unit_zero, engineering_units, has_depth_to_flow, start_date, end_date, create_da" +
                "te, create_by, update_date, update_by FROM dbo.ENVIRON_SENSOR WHERE (environ_sen" +
                "sor_id = @environ_sensor_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@x_data_category_loc_qual_combined", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "x_data_category_loc_qual_combined", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@data_category", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "data_category", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@channel", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "channel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@channel_name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "channel_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@channel_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "channel_description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@engineering_unit_span", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "engineering_unit_span", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@engineering_unit_zero", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "engineering_unit_zero", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@engineering_units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "engineering_units", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@has_depth_to_flow", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "has_depth_to_flow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@start_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@end_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_x_data_category_loc_qual_combined", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "x_data_category_loc_qual_combined", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_x_data_category_loc_qual_combined", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "x_data_category_loc_qual_combined", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_data_category", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "data_category", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_channel", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "channel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_channel_name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "channel_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_channel_description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "channel_description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_channel_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "channel_description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_engineering_unit_span", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "engineering_unit_span", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_engineering_unit_zero", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "engineering_unit_zero", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_engineering_units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "engineering_units", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_has_depth_to_flow", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "has_depth_to_flow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_start_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "start_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_end_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_end_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "end_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_by", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@environ_sensor_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT environ_sensor_id, station_id, x_data_category_loc_qual_combined, data_category, location_qualifier, channel, channel_name, channel_description, engineering_unit_span, engineering_unit_zero, engineering_units, has_depth_to_flow, start_date, end_date, create_date, create_by, update_date, update_by FROM dbo.ENVIRON_SENSOR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.ENVIRON_SENSORDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.ENVIRON_SENSORDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.ENVIRON_SENSORDataTable dataTable = new NEPTUNEDataSet.ENVIRON_SENSORDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet.ENVIRON_SENSORDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ENVIRON_SENSOR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_environ_sensor_id, 
                    int Original_station_id, 
                    string Original_x_data_category_loc_qual_combined, 
                    string Original_data_category, 
                    string Original_location_qualifier, 
                    string Original_channel, 
                    string Original_channel_name, 
                    string Original_channel_description, 
                    decimal Original_engineering_unit_span, 
                    decimal Original_engineering_unit_zero, 
                    string Original_engineering_units, 
                    string Original_has_depth_to_flow, 
                    System.DateTime Original_start_date, 
                    global::System.Nullable<global::System.DateTime> Original_end_date, 
                    System.DateTime Original_create_date, 
                    string Original_create_by, 
                    System.DateTime Original_update_date, 
                    string Original_update_by) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_environ_sensor_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_station_id));
            if ((Original_x_data_category_loc_qual_combined == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_x_data_category_loc_qual_combined));
            }
            if ((Original_data_category == null)) {
                throw new global::System.ArgumentNullException("Original_data_category");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_data_category));
            }
            if ((Original_location_qualifier == null)) {
                throw new global::System.ArgumentNullException("Original_location_qualifier");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_location_qualifier));
            }
            if ((Original_channel == null)) {
                throw new global::System.ArgumentNullException("Original_channel");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_channel));
            }
            if ((Original_channel_name == null)) {
                throw new global::System.ArgumentNullException("Original_channel_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_channel_name));
            }
            if ((Original_channel_description == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_channel_description));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_engineering_unit_span));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_engineering_unit_zero));
            if ((Original_engineering_units == null)) {
                throw new global::System.ArgumentNullException("Original_engineering_units");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_engineering_units));
            }
            if ((Original_has_depth_to_flow == null)) {
                throw new global::System.ArgumentNullException("Original_has_depth_to_flow");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_has_depth_to_flow));
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_start_date));
            if ((Original_end_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_end_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_by == null)) {
                throw new global::System.ArgumentNullException("Original_create_by");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_create_by));
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_update_date));
            if ((Original_update_by == null)) {
                throw new global::System.ArgumentNullException("Original_update_by");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_update_by));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int station_id, 
                    string x_data_category_loc_qual_combined, 
                    string data_category, 
                    string location_qualifier, 
                    string channel, 
                    string channel_name, 
                    string channel_description, 
                    decimal engineering_unit_span, 
                    decimal engineering_unit_zero, 
                    string engineering_units, 
                    string has_depth_to_flow, 
                    System.DateTime start_date, 
                    global::System.Nullable<global::System.DateTime> end_date, 
                    System.DateTime create_date, 
                    string create_by, 
                    System.DateTime update_date, 
                    string update_by) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(station_id));
            if ((x_data_category_loc_qual_combined == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(x_data_category_loc_qual_combined));
            }
            if ((data_category == null)) {
                throw new global::System.ArgumentNullException("data_category");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(data_category));
            }
            if ((location_qualifier == null)) {
                throw new global::System.ArgumentNullException("location_qualifier");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(location_qualifier));
            }
            if ((channel == null)) {
                throw new global::System.ArgumentNullException("channel");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(channel));
            }
            if ((channel_name == null)) {
                throw new global::System.ArgumentNullException("channel_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(channel_name));
            }
            if ((channel_description == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(channel_description));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(engineering_unit_span));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(engineering_unit_zero));
            if ((engineering_units == null)) {
                throw new global::System.ArgumentNullException("engineering_units");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(engineering_units));
            }
            if ((has_depth_to_flow == null)) {
                throw new global::System.ArgumentNullException("has_depth_to_flow");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(has_depth_to_flow));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(start_date));
            if ((end_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(end_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(create_date));
            if ((create_by == null)) {
                throw new global::System.ArgumentNullException("create_by");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(create_by));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(update_date));
            if ((update_by == null)) {
                throw new global::System.ArgumentNullException("update_by");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(update_by));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int station_id, 
                    string x_data_category_loc_qual_combined, 
                    string data_category, 
                    string location_qualifier, 
                    string channel, 
                    string channel_name, 
                    string channel_description, 
                    decimal engineering_unit_span, 
                    decimal engineering_unit_zero, 
                    string engineering_units, 
                    string has_depth_to_flow, 
                    System.DateTime start_date, 
                    global::System.Nullable<global::System.DateTime> end_date, 
                    System.DateTime create_date, 
                    string create_by, 
                    System.DateTime update_date, 
                    string update_by, 
                    int Original_environ_sensor_id, 
                    int Original_station_id, 
                    string Original_x_data_category_loc_qual_combined, 
                    string Original_data_category, 
                    string Original_location_qualifier, 
                    string Original_channel, 
                    string Original_channel_name, 
                    string Original_channel_description, 
                    decimal Original_engineering_unit_span, 
                    decimal Original_engineering_unit_zero, 
                    string Original_engineering_units, 
                    string Original_has_depth_to_flow, 
                    System.DateTime Original_start_date, 
                    global::System.Nullable<global::System.DateTime> Original_end_date, 
                    System.DateTime Original_create_date, 
                    string Original_create_by, 
                    System.DateTime Original_update_date, 
                    string Original_update_by, 
                    int environ_sensor_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(station_id));
            if ((x_data_category_loc_qual_combined == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(x_data_category_loc_qual_combined));
            }
            if ((data_category == null)) {
                throw new global::System.ArgumentNullException("data_category");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(data_category));
            }
            if ((location_qualifier == null)) {
                throw new global::System.ArgumentNullException("location_qualifier");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(location_qualifier));
            }
            if ((channel == null)) {
                throw new global::System.ArgumentNullException("channel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(channel));
            }
            if ((channel_name == null)) {
                throw new global::System.ArgumentNullException("channel_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(channel_name));
            }
            if ((channel_description == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(channel_description));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(engineering_unit_span));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(engineering_unit_zero));
            if ((engineering_units == null)) {
                throw new global::System.ArgumentNullException("engineering_units");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(engineering_units));
            }
            if ((has_depth_to_flow == null)) {
                throw new global::System.ArgumentNullException("has_depth_to_flow");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(has_depth_to_flow));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(start_date));
            if ((end_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(end_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(create_date));
            if ((create_by == null)) {
                throw new global::System.ArgumentNullException("create_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(create_by));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(update_date));
            if ((update_by == null)) {
                throw new global::System.ArgumentNullException("update_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(update_by));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_environ_sensor_id));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_station_id));
            if ((Original_x_data_category_loc_qual_combined == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_x_data_category_loc_qual_combined));
            }
            if ((Original_data_category == null)) {
                throw new global::System.ArgumentNullException("Original_data_category");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_data_category));
            }
            if ((Original_location_qualifier == null)) {
                throw new global::System.ArgumentNullException("Original_location_qualifier");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_location_qualifier));
            }
            if ((Original_channel == null)) {
                throw new global::System.ArgumentNullException("Original_channel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_channel));
            }
            if ((Original_channel_name == null)) {
                throw new global::System.ArgumentNullException("Original_channel_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_channel_name));
            }
            if ((Original_channel_description == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_channel_description));
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(Original_engineering_unit_span));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_engineering_unit_zero));
            if ((Original_engineering_units == null)) {
                throw new global::System.ArgumentNullException("Original_engineering_units");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_engineering_units));
            }
            if ((Original_has_depth_to_flow == null)) {
                throw new global::System.ArgumentNullException("Original_has_depth_to_flow");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_has_depth_to_flow));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(Original_start_date));
            if ((Original_end_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_end_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_by == null)) {
                throw new global::System.ArgumentNullException("Original_create_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_create_by));
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_update_date));
            if ((Original_update_by == null)) {
                throw new global::System.ArgumentNullException("Original_update_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_update_by));
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(environ_sensor_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int station_id, 
                    string x_data_category_loc_qual_combined, 
                    string data_category, 
                    string location_qualifier, 
                    string channel, 
                    string channel_name, 
                    string channel_description, 
                    decimal engineering_unit_span, 
                    decimal engineering_unit_zero, 
                    string engineering_units, 
                    string has_depth_to_flow, 
                    System.DateTime start_date, 
                    global::System.Nullable<global::System.DateTime> end_date, 
                    System.DateTime create_date, 
                    string create_by, 
                    System.DateTime update_date, 
                    string update_by, 
                    int Original_environ_sensor_id, 
                    int Original_station_id, 
                    string Original_x_data_category_loc_qual_combined, 
                    string Original_data_category, 
                    string Original_location_qualifier, 
                    string Original_channel, 
                    string Original_channel_name, 
                    string Original_channel_description, 
                    decimal Original_engineering_unit_span, 
                    decimal Original_engineering_unit_zero, 
                    string Original_engineering_units, 
                    string Original_has_depth_to_flow, 
                    System.DateTime Original_start_date, 
                    global::System.Nullable<global::System.DateTime> Original_end_date, 
                    System.DateTime Original_create_date, 
                    string Original_create_by, 
                    System.DateTime Original_update_date, 
                    string Original_update_by) {
            return this.Update(station_id, x_data_category_loc_qual_combined, data_category, location_qualifier, channel, channel_name, channel_description, engineering_unit_span, engineering_unit_zero, engineering_units, has_depth_to_flow, start_date, end_date, create_date, create_by, update_date, update_by, Original_environ_sensor_id, Original_station_id, Original_x_data_category_loc_qual_combined, Original_data_category, Original_location_qualifier, Original_channel, Original_channel_name, Original_channel_description, Original_engineering_unit_span, Original_engineering_unit_zero, Original_engineering_units, Original_has_depth_to_flow, Original_start_date, Original_end_date, Original_create_date, Original_create_by, Original_update_date, Original_update_by, Original_environ_sensor_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FLOW_DATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FLOW_DATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FLOW_DATA";
            tableMapping.ColumnMappings.Add("flow_data_id", "flow_data_id");
            tableMapping.ColumnMappings.Add("calendar_date_id", "calendar_date_id");
            tableMapping.ColumnMappings.Add("time_of_day_id", "time_of_day_id");
            tableMapping.ColumnMappings.Add("station_id", "station_id");
            tableMapping.ColumnMappings.Add("environ_sensor_id", "environ_sensor_id");
            tableMapping.ColumnMappings.Add("location_qualifier", "location_qualifier");
            tableMapping.ColumnMappings.Add("original_sample_time", "original_sample_time");
            tableMapping.ColumnMappings.Add("assigned_sample_time", "assigned_sample_time");
            tableMapping.ColumnMappings.Add("raw_value", "raw_value");
            tableMapping.ColumnMappings.Add("final_value", "final_value");
            tableMapping.ColumnMappings.Add("units", "units");
            tableMapping.ColumnMappings.Add("load_date", "load_date");
            tableMapping.ColumnMappings.Add("source_filename", "source_filename");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[FLOW_DATA] WHERE (([flow_data_id] = @Original_flow_data_id) AND ([calendar_date_id] = @Original_calendar_date_id) AND ([time_of_day_id] = @Original_time_of_day_id) AND ([station_id] = @Original_station_id) AND ([environ_sensor_id] = @Original_environ_sensor_id) AND ([location_qualifier] = @Original_location_qualifier) AND ([original_sample_time] = @p2) AND ([assigned_sample_time] = @Original_assigned_sample_time) AND ([raw_value] = @Original_raw_value) AND ([final_value] = @Original_final_value) AND ([units] = @Original_units) AND ([load_date] = @Original_load_date) AND ([source_filename] = @Original_source_filename))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_flow_data_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flow_data_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_raw_value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "raw_value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "units", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FLOW_DATA] ([calendar_date_id], [time_of_day_id], [station_id], [environ_sensor_id], [location_qualifier], [original_sample_time], [assigned_sample_time], [raw_value], [final_value], [units], [load_date], [source_filename]) VALUES (@calendar_date_id, @time_of_day_id, @station_id, @environ_sensor_id, @location_qualifier, @p1, @assigned_sample_time, @raw_value, @final_value, @units, @load_date, @source_filename);
SELECT flow_data_id, calendar_date_id, time_of_day_id, station_id, environ_sensor_id, location_qualifier, original_sample_time, assigned_sample_time, raw_value, final_value, units, load_date, source_filename FROM dbo.FLOW_DATA WHERE (flow_data_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@raw_value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "raw_value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "units", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FLOW_DATA] SET [calendar_date_id] = @calendar_date_id, [time_of_day_id] = @time_of_day_id, [station_id] = @station_id, [environ_sensor_id] = @environ_sensor_id, [location_qualifier] = @location_qualifier, [original_sample_time] = @p1, [assigned_sample_time] = @assigned_sample_time, [raw_value] = @raw_value, [final_value] = @final_value, [units] = @units, [load_date] = @load_date, [source_filename] = @source_filename WHERE (([flow_data_id] = @Original_flow_data_id) AND ([calendar_date_id] = @Original_calendar_date_id) AND ([time_of_day_id] = @Original_time_of_day_id) AND ([station_id] = @Original_station_id) AND ([environ_sensor_id] = @Original_environ_sensor_id) AND ([location_qualifier] = @Original_location_qualifier) AND ([original_sample_time] = @p2) AND ([assigned_sample_time] = @Original_assigned_sample_time) AND ([raw_value] = @Original_raw_value) AND ([final_value] = @Original_final_value) AND ([units] = @Original_units) AND ([load_date] = @Original_load_date) AND ([source_filename] = @Original_source_filename));
SELECT flow_data_id, calendar_date_id, time_of_day_id, station_id, environ_sensor_id, location_qualifier, original_sample_time, assigned_sample_time, raw_value, final_value, units, load_date, source_filename FROM dbo.FLOW_DATA WHERE (flow_data_id = @flow_data_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@raw_value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "raw_value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "units", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_flow_data_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flow_data_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_raw_value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "raw_value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "units", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@flow_data_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "flow_data_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT flow_data_id, calendar_date_id, time_of_day_id, station_id, environ_sensor" +
                "_id, location_qualifier, original_sample_time, assigned_sample_time, raw_value, " +
                "final_value, units, load_date, source_filename FROM dbo.FLOW_DATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.FLOW_DATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.FLOW_DATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.FLOW_DATADataTable dataTable = new NEPTUNEDataSet.FLOW_DATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet.FLOW_DATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet dataSet) {
            return this.Adapter.Update(dataSet, "FLOW_DATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_flow_data_id, int Original_calendar_date_id, int Original_time_of_day_id, int Original_station_id, int Original_environ_sensor_id, string Original_location_qualifier, System.DateTime p2, System.DateTime Original_assigned_sample_time, int Original_raw_value, decimal Original_final_value, string Original_units, System.DateTime Original_load_date, string Original_source_filename) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_flow_data_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_calendar_date_id));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_time_of_day_id));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_station_id));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_environ_sensor_id));
            if ((Original_location_qualifier == null)) {
                throw new global::System.ArgumentNullException("Original_location_qualifier");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_location_qualifier));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(p2));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_assigned_sample_time));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_raw_value));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_final_value));
            if ((Original_units == null)) {
                throw new global::System.ArgumentNullException("Original_units");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_units));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_load_date));
            if ((Original_source_filename == null)) {
                throw new global::System.ArgumentNullException("Original_source_filename");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_source_filename));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int calendar_date_id, int time_of_day_id, int station_id, int environ_sensor_id, string location_qualifier, System.DateTime p1, System.DateTime assigned_sample_time, int raw_value, decimal final_value, string units, System.DateTime load_date, string source_filename) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(calendar_date_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(time_of_day_id));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(station_id));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(environ_sensor_id));
            if ((location_qualifier == null)) {
                throw new global::System.ArgumentNullException("location_qualifier");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(location_qualifier));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(p1));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(assigned_sample_time));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(raw_value));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(final_value));
            if ((units == null)) {
                throw new global::System.ArgumentNullException("units");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(units));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(load_date));
            if ((source_filename == null)) {
                throw new global::System.ArgumentNullException("source_filename");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(source_filename));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int calendar_date_id, 
                    int time_of_day_id, 
                    int station_id, 
                    int environ_sensor_id, 
                    string location_qualifier, 
                    System.DateTime p1, 
                    System.DateTime assigned_sample_time, 
                    int raw_value, 
                    decimal final_value, 
                    string units, 
                    System.DateTime load_date, 
                    string source_filename, 
                    int Original_flow_data_id, 
                    int Original_calendar_date_id, 
                    int Original_time_of_day_id, 
                    int Original_station_id, 
                    int Original_environ_sensor_id, 
                    string Original_location_qualifier, 
                    System.DateTime p2, 
                    System.DateTime Original_assigned_sample_time, 
                    int Original_raw_value, 
                    decimal Original_final_value, 
                    string Original_units, 
                    System.DateTime Original_load_date, 
                    string Original_source_filename, 
                    int flow_data_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(calendar_date_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(time_of_day_id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(station_id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(environ_sensor_id));
            if ((location_qualifier == null)) {
                throw new global::System.ArgumentNullException("location_qualifier");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(location_qualifier));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(p1));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(assigned_sample_time));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(raw_value));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(final_value));
            if ((units == null)) {
                throw new global::System.ArgumentNullException("units");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(units));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(load_date));
            if ((source_filename == null)) {
                throw new global::System.ArgumentNullException("source_filename");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(source_filename));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_flow_data_id));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_calendar_date_id));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_time_of_day_id));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_station_id));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_environ_sensor_id));
            if ((Original_location_qualifier == null)) {
                throw new global::System.ArgumentNullException("Original_location_qualifier");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_location_qualifier));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(p2));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_assigned_sample_time));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_raw_value));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_final_value));
            if ((Original_units == null)) {
                throw new global::System.ArgumentNullException("Original_units");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_units));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_load_date));
            if ((Original_source_filename == null)) {
                throw new global::System.ArgumentNullException("Original_source_filename");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_source_filename));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(flow_data_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int calendar_date_id, 
                    int time_of_day_id, 
                    int station_id, 
                    int environ_sensor_id, 
                    string location_qualifier, 
                    System.DateTime p1, 
                    System.DateTime assigned_sample_time, 
                    int raw_value, 
                    decimal final_value, 
                    string units, 
                    System.DateTime load_date, 
                    string source_filename, 
                    int Original_flow_data_id, 
                    int Original_calendar_date_id, 
                    int Original_time_of_day_id, 
                    int Original_station_id, 
                    int Original_environ_sensor_id, 
                    string Original_location_qualifier, 
                    System.DateTime p2, 
                    System.DateTime Original_assigned_sample_time, 
                    int Original_raw_value, 
                    decimal Original_final_value, 
                    string Original_units, 
                    System.DateTime Original_load_date, 
                    string Original_source_filename) {
            return this.Update(calendar_date_id, time_of_day_id, station_id, environ_sensor_id, location_qualifier, p1, assigned_sample_time, raw_value, final_value, units, load_date, source_filename, Original_flow_data_id, Original_calendar_date_id, Original_time_of_day_id, Original_station_id, Original_environ_sensor_id, Original_location_qualifier, p2, Original_assigned_sample_time, Original_raw_value, Original_final_value, Original_units, Original_load_date, Original_source_filename, Original_flow_data_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FLOWCOMPUTED_DATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FLOWCOMPUTED_DATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FLOWCOMPUTED_DATA";
            tableMapping.ColumnMappings.Add("flowcomputed_data_id", "flowcomputed_data_id");
            tableMapping.ColumnMappings.Add("calendar_date_id", "calendar_date_id");
            tableMapping.ColumnMappings.Add("time_of_day_id", "time_of_day_id");
            tableMapping.ColumnMappings.Add("station_id", "station_id");
            tableMapping.ColumnMappings.Add("environ_sensor_id", "environ_sensor_id");
            tableMapping.ColumnMappings.Add("location_qualifier", "location_qualifier");
            tableMapping.ColumnMappings.Add("original_sample_time", "original_sample_time");
            tableMapping.ColumnMappings.Add("assigned_sample_time", "assigned_sample_time");
            tableMapping.ColumnMappings.Add("final_value", "final_value");
            tableMapping.ColumnMappings.Add("units", "units");
            tableMapping.ColumnMappings.Add("load_date", "load_date");
            tableMapping.ColumnMappings.Add("source_filename", "source_filename");
            tableMapping.ColumnMappings.Add("depth_data_id", "depth_data_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[FLOWCOMPUTED_DATA] WHERE (([flowcomputed_data_id] = @Original_flowcomputed_data_id) AND ([calendar_date_id] = @Original_calendar_date_id) AND ([time_of_day_id] = @Original_time_of_day_id) AND ([station_id] = @Original_station_id) AND ([environ_sensor_id] = @Original_environ_sensor_id) AND ([location_qualifier] = @Original_location_qualifier) AND ([original_sample_time] = @p2) AND ([assigned_sample_time] = @Original_assigned_sample_time) AND ([final_value] = @Original_final_value) AND ([units] = @Original_units) AND ([load_date] = @Original_load_date) AND ([source_filename] = @Original_source_filename) AND ([depth_data_id] = @Original_depth_data_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_flowcomputed_data_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flowcomputed_data_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "units", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_depth_data_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "depth_data_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FLOWCOMPUTED_DATA] ([calendar_date_id], [time_of_day_id], [station_id], [environ_sensor_id], [location_qualifier], [original_sample_time], [assigned_sample_time], [final_value], [units], [load_date], [source_filename], [depth_data_id]) VALUES (@calendar_date_id, @time_of_day_id, @station_id, @environ_sensor_id, @location_qualifier, @p1, @assigned_sample_time, @final_value, @units, @load_date, @source_filename, @depth_data_id);
SELECT flowcomputed_data_id, calendar_date_id, time_of_day_id, station_id, environ_sensor_id, location_qualifier, original_sample_time, assigned_sample_time, final_value, units, load_date, source_filename, depth_data_id FROM dbo.FLOWCOMPUTED_DATA WHERE (flowcomputed_data_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "units", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@depth_data_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "depth_data_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FLOWCOMPUTED_DATA] SET [calendar_date_id] = @calendar_date_id, [time_of_day_id] = @time_of_day_id, [station_id] = @station_id, [environ_sensor_id] = @environ_sensor_id, [location_qualifier] = @location_qualifier, [original_sample_time] = @p1, [assigned_sample_time] = @assigned_sample_time, [final_value] = @final_value, [units] = @units, [load_date] = @load_date, [source_filename] = @source_filename, [depth_data_id] = @depth_data_id WHERE (([flowcomputed_data_id] = @Original_flowcomputed_data_id) AND ([calendar_date_id] = @Original_calendar_date_id) AND ([time_of_day_id] = @Original_time_of_day_id) AND ([station_id] = @Original_station_id) AND ([environ_sensor_id] = @Original_environ_sensor_id) AND ([location_qualifier] = @Original_location_qualifier) AND ([original_sample_time] = @p2) AND ([assigned_sample_time] = @Original_assigned_sample_time) AND ([final_value] = @Original_final_value) AND ([units] = @Original_units) AND ([load_date] = @Original_load_date) AND ([source_filename] = @Original_source_filename) AND ([depth_data_id] = @Original_depth_data_id));
SELECT flowcomputed_data_id, calendar_date_id, time_of_day_id, station_id, environ_sensor_id, location_qualifier, original_sample_time, assigned_sample_time, final_value, units, load_date, source_filename, depth_data_id FROM dbo.FLOWCOMPUTED_DATA WHERE (flowcomputed_data_id = @flowcomputed_data_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "units", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@depth_data_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "depth_data_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_flowcomputed_data_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flowcomputed_data_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_units", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "units", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_depth_data_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "depth_data_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@flowcomputed_data_id", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "flowcomputed_data_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT flowcomputed_data_id, calendar_date_id, time_of_day_id, station_id, enviro" +
                "n_sensor_id, location_qualifier, original_sample_time, assigned_sample_time, fin" +
                "al_value, units, load_date, source_filename, depth_data_id FROM dbo.FLOWCOMPUTED" +
                "_DATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.FLOWCOMPUTED_DATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.FLOWCOMPUTED_DATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.FLOWCOMPUTED_DATADataTable dataTable = new NEPTUNEDataSet.FLOWCOMPUTED_DATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet.FLOWCOMPUTED_DATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet dataSet) {
            return this.Adapter.Update(dataSet, "FLOWCOMPUTED_DATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_flowcomputed_data_id, int Original_calendar_date_id, int Original_time_of_day_id, int Original_station_id, int Original_environ_sensor_id, string Original_location_qualifier, System.DateTime p2, System.DateTime Original_assigned_sample_time, decimal Original_final_value, string Original_units, System.DateTime Original_load_date, string Original_source_filename, long Original_depth_data_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_flowcomputed_data_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_calendar_date_id));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_time_of_day_id));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_station_id));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_environ_sensor_id));
            if ((Original_location_qualifier == null)) {
                throw new global::System.ArgumentNullException("Original_location_qualifier");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_location_qualifier));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(p2));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_assigned_sample_time));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_final_value));
            if ((Original_units == null)) {
                throw new global::System.ArgumentNullException("Original_units");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_units));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_load_date));
            if ((Original_source_filename == null)) {
                throw new global::System.ArgumentNullException("Original_source_filename");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_source_filename));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((long)(Original_depth_data_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int calendar_date_id, int time_of_day_id, int station_id, int environ_sensor_id, string location_qualifier, System.DateTime p1, System.DateTime assigned_sample_time, decimal final_value, string units, System.DateTime load_date, string source_filename, long depth_data_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(calendar_date_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(time_of_day_id));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(station_id));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(environ_sensor_id));
            if ((location_qualifier == null)) {
                throw new global::System.ArgumentNullException("location_qualifier");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(location_qualifier));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(p1));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(assigned_sample_time));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(final_value));
            if ((units == null)) {
                throw new global::System.ArgumentNullException("units");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(units));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(load_date));
            if ((source_filename == null)) {
                throw new global::System.ArgumentNullException("source_filename");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(source_filename));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((long)(depth_data_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int calendar_date_id, 
                    int time_of_day_id, 
                    int station_id, 
                    int environ_sensor_id, 
                    string location_qualifier, 
                    System.DateTime p1, 
                    System.DateTime assigned_sample_time, 
                    decimal final_value, 
                    string units, 
                    System.DateTime load_date, 
                    string source_filename, 
                    long depth_data_id, 
                    long Original_flowcomputed_data_id, 
                    int Original_calendar_date_id, 
                    int Original_time_of_day_id, 
                    int Original_station_id, 
                    int Original_environ_sensor_id, 
                    string Original_location_qualifier, 
                    System.DateTime p2, 
                    System.DateTime Original_assigned_sample_time, 
                    decimal Original_final_value, 
                    string Original_units, 
                    System.DateTime Original_load_date, 
                    string Original_source_filename, 
                    long Original_depth_data_id, 
                    int flowcomputed_data_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(calendar_date_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(time_of_day_id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(station_id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(environ_sensor_id));
            if ((location_qualifier == null)) {
                throw new global::System.ArgumentNullException("location_qualifier");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(location_qualifier));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(p1));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(assigned_sample_time));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(final_value));
            if ((units == null)) {
                throw new global::System.ArgumentNullException("units");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(units));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(load_date));
            if ((source_filename == null)) {
                throw new global::System.ArgumentNullException("source_filename");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(source_filename));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(depth_data_id));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(Original_flowcomputed_data_id));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_calendar_date_id));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_time_of_day_id));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_station_id));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_environ_sensor_id));
            if ((Original_location_qualifier == null)) {
                throw new global::System.ArgumentNullException("Original_location_qualifier");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_location_qualifier));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(p2));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_assigned_sample_time));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_final_value));
            if ((Original_units == null)) {
                throw new global::System.ArgumentNullException("Original_units");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_units));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_load_date));
            if ((Original_source_filename == null)) {
                throw new global::System.ArgumentNullException("Original_source_filename");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_source_filename));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((long)(Original_depth_data_id));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(flowcomputed_data_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int calendar_date_id, 
                    int time_of_day_id, 
                    int station_id, 
                    int environ_sensor_id, 
                    string location_qualifier, 
                    System.DateTime p1, 
                    System.DateTime assigned_sample_time, 
                    decimal final_value, 
                    string units, 
                    System.DateTime load_date, 
                    string source_filename, 
                    long depth_data_id, 
                    int Original_flowcomputed_data_id, 
                    int Original_calendar_date_id, 
                    int Original_time_of_day_id, 
                    int Original_station_id, 
                    int Original_environ_sensor_id, 
                    string Original_location_qualifier, 
                    System.DateTime p2, 
                    System.DateTime Original_assigned_sample_time, 
                    decimal Original_final_value, 
                    string Original_units, 
                    System.DateTime Original_load_date, 
                    string Original_source_filename, 
                    long Original_depth_data_id) {
            return this.Update(calendar_date_id, time_of_day_id, station_id, environ_sensor_id, location_qualifier, p1, assigned_sample_time, final_value, units, load_date, source_filename, depth_data_id, Original_flowcomputed_data_id, Original_calendar_date_id, Original_time_of_day_id, Original_station_id, Original_environ_sensor_id, Original_location_qualifier, p2, Original_assigned_sample_time, Original_final_value, Original_units, Original_load_date, Original_source_filename, Original_depth_data_id, Original_flowcomputed_data_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VELOCITY_DATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public VELOCITY_DATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VELOCITY_DATA";
            tableMapping.ColumnMappings.Add("velocity_data_id", "velocity_data_id");
            tableMapping.ColumnMappings.Add("calendar_date_id", "calendar_date_id");
            tableMapping.ColumnMappings.Add("time_of_day_id", "time_of_day_id");
            tableMapping.ColumnMappings.Add("station_id", "station_id");
            tableMapping.ColumnMappings.Add("environ_sensor_id", "environ_sensor_id");
            tableMapping.ColumnMappings.Add("location_qualifier", "location_qualifier");
            tableMapping.ColumnMappings.Add("original_sample_time", "original_sample_time");
            tableMapping.ColumnMappings.Add("assigned_sample_time", "assigned_sample_time");
            tableMapping.ColumnMappings.Add("raw_value", "raw_value");
            tableMapping.ColumnMappings.Add("final_value", "final_value");
            tableMapping.ColumnMappings.Add("load_date", "load_date");
            tableMapping.ColumnMappings.Add("source_filename", "source_filename");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[VELOCITY_DATA] WHERE (([velocity_data_id] = @Original_velocity_data_id) AND ([calendar_date_id] = @Original_calendar_date_id) AND ([time_of_day_id] = @Original_time_of_day_id) AND ([station_id] = @Original_station_id) AND ([environ_sensor_id] = @Original_environ_sensor_id) AND ([location_qualifier] = @Original_location_qualifier) AND ([original_sample_time] = @p2) AND ([assigned_sample_time] = @Original_assigned_sample_time) AND ([raw_value] = @Original_raw_value) AND ([final_value] = @Original_final_value) AND ([load_date] = @Original_load_date) AND ([source_filename] = @Original_source_filename))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_velocity_data_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "velocity_data_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_raw_value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "raw_value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[VELOCITY_DATA] ([calendar_date_id], [time_of_day_id], [station_id], [environ_sensor_id], [location_qualifier], [original_sample_time], [assigned_sample_time], [raw_value], [final_value], [load_date], [source_filename]) VALUES (@calendar_date_id, @time_of_day_id, @station_id, @environ_sensor_id, @location_qualifier, @p1, @assigned_sample_time, @raw_value, @final_value, @load_date, @source_filename);
SELECT velocity_data_id, calendar_date_id, time_of_day_id, station_id, environ_sensor_id, location_qualifier, original_sample_time, assigned_sample_time, raw_value, final_value, load_date, source_filename FROM dbo.VELOCITY_DATA WHERE (velocity_data_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@raw_value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "raw_value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[VELOCITY_DATA] SET [calendar_date_id] = @calendar_date_id, [time_of_day_id] = @time_of_day_id, [station_id] = @station_id, [environ_sensor_id] = @environ_sensor_id, [location_qualifier] = @location_qualifier, [original_sample_time] = @p1, [assigned_sample_time] = @assigned_sample_time, [raw_value] = @raw_value, [final_value] = @final_value, [load_date] = @load_date, [source_filename] = @source_filename WHERE (([velocity_data_id] = @Original_velocity_data_id) AND ([calendar_date_id] = @Original_calendar_date_id) AND ([time_of_day_id] = @Original_time_of_day_id) AND ([station_id] = @Original_station_id) AND ([environ_sensor_id] = @Original_environ_sensor_id) AND ([location_qualifier] = @Original_location_qualifier) AND ([original_sample_time] = @p2) AND ([assigned_sample_time] = @Original_assigned_sample_time) AND ([raw_value] = @Original_raw_value) AND ([final_value] = @Original_final_value) AND ([load_date] = @Original_load_date) AND ([source_filename] = @Original_source_filename));
SELECT velocity_data_id, calendar_date_id, time_of_day_id, station_id, environ_sensor_id, location_qualifier, original_sample_time, assigned_sample_time, raw_value, final_value, load_date, source_filename FROM dbo.VELOCITY_DATA WHERE (velocity_data_id = @velocity_data_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@raw_value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "raw_value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_velocity_data_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "velocity_data_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_calendar_date_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calendar_date_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_time_of_day_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time_of_day_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_station_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "station_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_environ_sensor_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "environ_sensor_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_location_qualifier", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "location_qualifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "original_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_assigned_sample_time", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assigned_sample_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_raw_value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "raw_value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_final_value", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "final_value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_load_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "load_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_source_filename", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "source_filename", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@velocity_data_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "velocity_data_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT velocity_data_id, calendar_date_id, time_of_day_id, station_id, environ_se" +
                "nsor_id, location_qualifier, original_sample_time, assigned_sample_time, raw_val" +
                "ue, final_value, load_date, source_filename FROM dbo.VELOCITY_DATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.VELOCITY_DATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.VELOCITY_DATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NEPTUNEDataSet.VELOCITY_DATADataTable dataTable = new NEPTUNEDataSet.VELOCITY_DATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet.VELOCITY_DATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NEPTUNEDataSet dataSet) {
            return this.Adapter.Update(dataSet, "VELOCITY_DATA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_velocity_data_id, int Original_calendar_date_id, int Original_time_of_day_id, int Original_station_id, int Original_environ_sensor_id, string Original_location_qualifier, System.DateTime p2, System.DateTime Original_assigned_sample_time, int Original_raw_value, decimal Original_final_value, System.DateTime Original_load_date, string Original_source_filename) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_velocity_data_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_calendar_date_id));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_time_of_day_id));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_station_id));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_environ_sensor_id));
            if ((Original_location_qualifier == null)) {
                throw new global::System.ArgumentNullException("Original_location_qualifier");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_location_qualifier));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(p2));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_assigned_sample_time));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_raw_value));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_final_value));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_load_date));
            if ((Original_source_filename == null)) {
                throw new global::System.ArgumentNullException("Original_source_filename");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_source_filename));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int calendar_date_id, int time_of_day_id, int station_id, int environ_sensor_id, string location_qualifier, System.DateTime p1, System.DateTime assigned_sample_time, int raw_value, decimal final_value, System.DateTime load_date, string source_filename) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(calendar_date_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(time_of_day_id));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(station_id));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(environ_sensor_id));
            if ((location_qualifier == null)) {
                throw new global::System.ArgumentNullException("location_qualifier");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(location_qualifier));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(p1));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(assigned_sample_time));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(raw_value));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(final_value));
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(load_date));
            if ((source_filename == null)) {
                throw new global::System.ArgumentNullException("source_filename");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(source_filename));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int calendar_date_id, 
                    int time_of_day_id, 
                    int station_id, 
                    int environ_sensor_id, 
                    string location_qualifier, 
                    System.DateTime p1, 
                    System.DateTime assigned_sample_time, 
                    int raw_value, 
                    decimal final_value, 
                    System.DateTime load_date, 
                    string source_filename, 
                    int Original_velocity_data_id, 
                    int Original_calendar_date_id, 
                    int Original_time_of_day_id, 
                    int Original_station_id, 
                    int Original_environ_sensor_id, 
                    string Original_location_qualifier, 
                    System.DateTime p2, 
                    System.DateTime Original_assigned_sample_time, 
                    int Original_raw_value, 
                    decimal Original_final_value, 
                    System.DateTime Original_load_date, 
                    string Original_source_filename, 
                    int velocity_data_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(calendar_date_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(time_of_day_id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(station_id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(environ_sensor_id));
            if ((location_qualifier == null)) {
                throw new global::System.ArgumentNullException("location_qualifier");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(location_qualifier));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(p1));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(assigned_sample_time));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(raw_value));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(final_value));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(load_date));
            if ((source_filename == null)) {
                throw new global::System.ArgumentNullException("source_filename");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(source_filename));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_velocity_data_id));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_calendar_date_id));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_time_of_day_id));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_station_id));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_environ_sensor_id));
            if ((Original_location_qualifier == null)) {
                throw new global::System.ArgumentNullException("Original_location_qualifier");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_location_qualifier));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(p2));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_assigned_sample_time));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_raw_value));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_final_value));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_load_date));
            if ((Original_source_filename == null)) {
                throw new global::System.ArgumentNullException("Original_source_filename");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_source_filename));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(velocity_data_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int calendar_date_id, 
                    int time_of_day_id, 
                    int station_id, 
                    int environ_sensor_id, 
                    string location_qualifier, 
                    System.DateTime p1, 
                    System.DateTime assigned_sample_time, 
                    int raw_value, 
                    decimal final_value, 
                    System.DateTime load_date, 
                    string source_filename, 
                    int Original_velocity_data_id, 
                    int Original_calendar_date_id, 
                    int Original_time_of_day_id, 
                    int Original_station_id, 
                    int Original_environ_sensor_id, 
                    string Original_location_qualifier, 
                    System.DateTime p2, 
                    System.DateTime Original_assigned_sample_time, 
                    int Original_raw_value, 
                    decimal Original_final_value, 
                    System.DateTime Original_load_date, 
                    string Original_source_filename) {
            return this.Update(calendar_date_id, time_of_day_id, station_id, environ_sensor_id, location_qualifier, p1, assigned_sample_time, raw_value, final_value, load_date, source_filename, Original_velocity_data_id, Original_calendar_date_id, Original_time_of_day_id, Original_station_id, Original_environ_sensor_id, Original_location_qualifier, p2, Original_assigned_sample_time, Original_raw_value, Original_final_value, Original_load_date, Original_source_filename, Original_velocity_data_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DataTable1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataTable1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DataTable1";
            tableMapping.ColumnMappings.Add("date_time", "date_time");
            tableMapping.ColumnMappings.Add("sum_inches", "sum_inches");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ViRT.Properties.Settings.Default.NEPTUNEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT    date_time, SUM(rainfall_amount_inches) AS sum_inches
FROM         (SELECT  DATEADD(n, DATEDIFF(n, 0, rain_tip_time) - DATEDIFF(n, 0, rain_tip_time) %(CAST(@timeStep AS int)) , 0) AS date_time, 
                                              rainfall_amount_inches
                       FROM          dbo.RAIN_DATA
                       WHERE      (station_id = @station_id) AND (rain_tip_time >= @StartDate) AND (rain_tip_time <= @EndDate)) AS derivedtbl_1
GROUP BY date_time ORDER BY date_time";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@timeStep", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NEPTUNEDataSet.DataTable1DataTable dataTable, System.DateTime EndDate, decimal timeStep, int station_id, System.DateTime StartDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(EndDate));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(timeStep));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(station_id));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(StartDate));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NEPTUNEDataSet.DataTable1DataTable GetData(System.DateTime EndDate, decimal timeStep, int station_id, System.DateTime StartDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(EndDate));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(timeStep));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(station_id));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(StartDate));
            NEPTUNEDataSet.DataTable1DataTable dataTable = new NEPTUNEDataSet.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591