--   Generated by Enterprise Architect Version 8.0.864
--   Created On : Monday, 28 March, 2011 
--   DBMS       : SQL Server 2005 
--   -------------------------------------------------- 

--  Create Stored Procedures 
CREATE PROCEDURE USP_CREATE_DOMAIN_TABLE_RECORDS
AS

INSERT INTO ASSUMPTION_CODES
VALUES('DDEX','Downspout disconnection existing', '');
INSERT INTO ASSUMPTION_CODES
VALUES('DDPL','Downspout disconnection planned', '');
INSERT INTO ASSUMPTION_CODES
VALUES('INSU','Inspection or survey', '');
INSERT INTO ASSUMPTION_CODES
VALUES('SE01','Sellwood existing disconnection', '');
INSERT INTO ASSUMPTION_CODES
VALUES('WSS1','Westside stream separation', '');
INSERT INTO ASSUMPTION_CODES
VALUES('DSGN','Design plans', '');
INSERT INTO ASSUMPTION_CODES
VALUES('DWPR','Drywell in plumbing record', '');
INSERT INTO ASSUMPTION_CODES
VALUES('EX01','Dry wells, non-SFR within sumped area', '');
INSERT INTO ASSUMPTION_CODES
VALUES('LE80','Lents 80% design/calibration', '');
INSERT INTO ASSUMPTION_CODES
VALUES('SE02','Sellwood future disconnection', '');
INSERT INTO ASSUMPTION_CODES
VALUES('SMM1','Stormwater Management Manual', '');
INSERT INTO ASSUMPTION_CODES
VALUES('ICT','Inflow controls added post-trace', '');
INSERT INTO ASSUMPTION_CODES
VALUES('GLEG','Green roof legacy', '');
INSERT INTO ASSUMPTION_CODES
VALUES('_SAN','DSCs with DISCOClass = S', '');

INSERT INTO DATA_SOURCES
VALUES('?', 'Unknown', '');
INSERT INTO DATA_SOURCES
VALUES('A', 'As-builts', '');
INSERT INTO DATA_SOURCES
VALUES('B', 'Observation', '');
INSERT INTO DATA_SOURCES
VALUES('C', 'Topographic Contour', '');
INSERT INTO DATA_SOURCES
VALUES('D', 'Depth down', '');
INSERT INTO DATA_SOURCES
VALUES('E', 'Digital Elevation Model', '');
INSERT INTO DATA_SOURCES
VALUES('F', 'Facility Maps', '');
INSERT INTO DATA_SOURCES
VALUES('G', 'Parallel Ground Surface', '');
INSERT INTO DATA_SOURCES
VALUES('H', 'Hansen', '');
INSERT INTO DATA_SOURCES
VALUES('I', 'Interpolated', '');
INSERT INTO DATA_SOURCES
VALUES('K', 'Match Crown', '');
INSERT INTO DATA_SOURCES
VALUES('L', 'Field Check', '');
INSERT INTO DATA_SOURCES
VALUES('M', 'Model Maps', '');
INSERT INTO DATA_SOURCES
VALUES('O', 'Other', '');
INSERT INTO DATA_SOURCES
VALUES('P', 'Predesign', '');
INSERT INTO DATA_SOURCES
VALUES('R', 'Match Springline', '');
INSERT INTO DATA_SOURCES
VALUES('S', 'Minimum Pipe Slope', '');
INSERT INTO DATA_SOURCES
VALUES('T', 'Same Node Transfer', '');
INSERT INTO DATA_SOURCES
VALUES('U', 'Default', '');
INSERT INTO DATA_SOURCES
VALUES('V', 'Survey', '');
INSERT INTO DATA_SOURCES
VALUES('W', 'WAG', '');
INSERT INTO DATA_SOURCES
VALUES('X', 'Extend Slope', '');
INSERT INTO DATA_SOURCES
VALUES('Y', 'BoP Stream Lines', '');
INSERT INTO DATA_SOURCES
VALUES('Z', 'LiDAR', '');

INSERT INTO DISCO_CLASSES
VALUES(' ', 'Unspecified', '');
INSERT INTO DISCO_CLASSES
VALUES('C', 'Combined', '');
INSERT INTO DISCO_CLASSES
VALUES('D', 'Storm/Drainage', '');
INSERT INTO DISCO_CLASSES
VALUES('E', 'Effluent', '');
INSERT INTO DISCO_CLASSES
VALUES('F', 'Force Maine', '');
INSERT INTO DISCO_CLASSES
VALUES('S', 'Sanitary', '');

INSERT INTO ZONES
VALUES(' ', 'Unspecified', '');
INSERT INTO ZONES
VALUES('COM', 'Commercial', '');
INSERT INTO ZONES
VALUES('IND', 'Industrial', '');
INSERT INTO ZONES
VALUES('MFR', 'Multifamily', '');
INSERT INTO ZONES
VALUES('POS', 'Park/open space', '');
INSERT INTO ZONES
VALUES('SFR', 'Single family', '');
INSERT INTO ZONES
VALUES('UNK', 'Unknown', '');

INSERT INTO DETAILED_ZONES
VALUES(' ', 'Unspecified', ' ', '');
INSERT INTO DETAILED_ZONES
VALUES('WC', 'Washington County', ' ', '');
INSERT INTO DETAILED_ZONES
VALUES('CG', 'General Commercial', 'COM', '');
INSERT INTO DETAILED_ZONES
VALUES('CM', 'Mixed Commercial/Residential', 'COM', '');
INSERT INTO DETAILED_ZONES
VALUES('CN1', 'Neighborhood Commercial 1', 'COM', '');
INSERT INTO DETAILED_ZONES
VALUES('CN2', 'Neighborhood Commercial 2', 'COM', '');
INSERT INTO DETAILED_ZONES
VALUES('CO1', 'Office Commercial 1', 'COM', '');
INSERT INTO DETAILED_ZONES
VALUES('CO2', 'Office Commercial 2', 'COM', '');
INSERT INTO DETAILED_ZONES
VALUES('CS', 'Storefront Commercial', 'COM', '');
INSERT INTO DETAILED_ZONES
VALUES('CX', 'Central Commercial', 'COM', '');
INSERT INTO DETAILED_ZONES
VALUES('NC', 'Neighborhood Commercial', 'COM', '');
INSERT INTO DETAILED_ZONES
VALUES('OC', 'Office Commercial', 'COM', '');
INSERT INTO DETAILED_ZONES
VALUES('UC', 'Urban Commercial', 'COM', '');
INSERT INTO DETAILED_ZONES
VALUES('EG1', 'General Employment 1', 'IND', '');
INSERT INTO DETAILED_ZONES
VALUES('EG2', 'General Employment 2', 'IND', '');
INSERT INTO DETAILED_ZONES
VALUES('EX', 'Central Employment', 'IND', '');
INSERT INTO DETAILED_ZONES
VALUES('IG1', 'General Industrial 1', 'IND', '');
INSERT INTO DETAILED_ZONES
VALUES('IG2', 'General Industrial 2', 'IND', '');
INSERT INTO DETAILED_ZONES
VALUES('IH', 'Heavy Industrial', 'IND', '');
INSERT INTO DETAILED_ZONES
VALUES('IS', 'Industrial Sanctuary', 'IND', '');
INSERT INTO DETAILED_ZONES
VALUES('MC', '?', 'IND', '');
INSERT INTO DETAILED_ZONES
VALUES('ME', 'Mixed Employment', 'IND', '');
INSERT INTO DETAILED_ZONES
VALUES('IR', 'Institutional Residential', 'MFR', '');
INSERT INTO DETAILED_ZONES
VALUES('R1', 'Residential 1000sf', 'MFR', '');
INSERT INTO DETAILED_ZONES
VALUES('R2', 'Residential 2000sf', 'MFR', '');
INSERT INTO DETAILED_ZONES
VALUES('R3', 'Residential 3000sf', 'MFR', '');
INSERT INTO DETAILED_ZONES
VALUES('RH', 'High Density Residential', 'MFR', '');
INSERT INTO DETAILED_ZONES
VALUES('RX', 'Central Residential', 'MFR', '');
INSERT INTO DETAILED_ZONES
VALUES('OS', 'Open Space', 'POS', '');
INSERT INTO DETAILED_ZONES
VALUES('R2.5', 'Residential 2500sf', 'SFR', '');
INSERT INTO DETAILED_ZONES
VALUES('R5', 'Residential 5000sf', 'SFR', '');
INSERT INTO DETAILED_ZONES
VALUES('R7', 'Residential 7000sf', 'SFR', '');
INSERT INTO DETAILED_ZONES
VALUES('R10', 'Residential 10000sf', 'SFR', '');
INSERT INTO DETAILED_ZONES
VALUES('R20', 'Residential 20000sf', 'SFR', '');
INSERT INTO DETAILED_ZONES
VALUES('RF', 'Residential Farming', 'SFR', '');

INSERT INTO DSC_DATA_SOURCES
VALUES(' ', 'Unspecified');
INSERT INTO DSC_DATA_SOURCES
VALUES('A', 'As-built');
INSERT INTO DSC_DATA_SOURCES
VALUES('B', 'Building Plan');
INSERT INTO DSC_DATA_SOURCES
VALUES('P', 'Plumbing Card');
INSERT INTO DSC_DATA_SOURCES
VALUES('W', '?');

INSERT INTO GROWTH_STATES
VALUES(-1, 'No growth', '');
INSERT INTO GROWTH_STATES
VALUES(0, 'Future roof/parking = future target', '');
INSERT INTO GROWTH_STATES
VALUES(1, 'Increase to CP, EX rf<target, EX pk>target', '');
INSERT INTO GROWTH_STATES
VALUES(2, 'Increase to CP, EX rf>target, EX pk<target', '');
INSERT INTO GROWTH_STATES
VALUES(3, 'Leave as EX, EX rf>target, EX pk>target', '');

INSERT INTO HANSEN_SERVICE_CODES
VALUES('', '', '');
INSERT INTO HANSEN_SERVICE_CODES
VALUES('AB', 'Abandoned', '');
INSERT INTO HANSEN_SERVICE_CODES
VALUES('EX', '?', '');
INSERT INTO HANSEN_SERVICE_CODES
VALUES('IN', 'In service', '');
INSERT INTO HANSEN_SERVICE_CODES
VALUES('NEW', 'Constructed but not as-built', '');
INSERT INTO HANSEN_SERVICE_CODES
VALUES('PEND', 'Pending rehabilitation', '');
INSERT INTO HANSEN_SERVICE_CODES
VALUES('TBAB', 'To be abandoned', '');
INSERT INTO HANSEN_SERVICE_CODES
VALUES('UNK', 'Unknown', '');
INSERT INTO HANSEN_SERVICE_CODES
VALUES('CNS', 'Constructed but not in service', '');
INSERT INTO HANSEN_SERVICE_CODES
VALUES('REPAIR', 'Out of service for repair', '');

INSERT INTO IC_TARGET_CONSTRUCTED_STATUSES
VALUES(1, 'Already constructed, using SWMM assumptions', '');
INSERT INTO IC_TARGET_CONSTRUCTED_STATUSES
VALUES(2, 'Constructed, field-verified or as-builted', '');
INSERT INTO IC_TARGET_CONSTRUCTED_STATUSES
VALUES(3, 'Constructed by 2011, using SWMM assumptions', '');
INSERT INTO IC_TARGET_CONSTRUCTED_STATUSES
VALUES(4, 'Constructed by 2011, field-verified or design data', '');
INSERT INTO IC_TARGET_CONSTRUCTED_STATUSES
VALUES(0, 'No fixed construction, uses table design data', '');

INSERT INTO IC_TARGET_DIFFICULTIES
VALUES(0, 'Uncontrollable', '');
INSERT INTO IC_TARGET_DIFFICULTIES
VALUES(1, 'Easy', '');
INSERT INTO IC_TARGET_DIFFICULTIES
VALUES(2, 'Moderate', '');
INSERT INTO IC_TARGET_DIFFICULTIES
VALUES(3, 'Hard', '');
INSERT INTO IC_TARGET_DIFFICULTIES
VALUES(4, 'Already controlled', '');

INSERT INTO IMPERVIOUS_TYPES
VALUES('P', 'Parking', '');
INSERT INTO IMPERVIOUS_TYPES
VALUES('R', 'Roof', '');
INSERT INTO IMPERVIOUS_TYPES
VALUES('S', 'Street/ROW', '');

INSERT INTO PIPE_FLOW_TYPES
VALUES('C', 'Combined', '');
INSERT INTO PIPE_FLOW_TYPES
VALUES('D', 'Storm Drainage', '');
INSERT INTO PIPE_FLOW_TYPES
VALUES('S', 'Sanitary', '');
INSERT INTO PIPE_FLOW_TYPES
VALUES('I', 'Illegal Connection', '');
INSERT INTO PIPE_FLOW_TYPES
VALUES('F', 'Force Main', '');
INSERT INTO PIPE_FLOW_TYPES
VALUES('U', 'Unknown', '');

INSERT INTO LINK_TYPES
VALUES('C', 'C', 'Combined', '');
INSERT INTO LINK_TYPES
VALUES('CC', 'I', 'CSO tunnel', '');
INSERT INTO LINK_TYPES
VALUES('CI', 'C', 'CO below diversion, above CSO tunnel', '');
INSERT INTO LINK_TYPES
VALUES('CO', 'D', 'Combined overflow', '');
INSERT INTO LINK_TYPES
VALUES('D', 'D', 'Storm drainage', '');
INSERT INTO LINK_TYPES
VALUES('DG', 'D', 'Storm gutter on street', '');
INSERT INTO LINK_TYPES
VALUES('DC', 'D', 'Storm drain connector', '');
INSERT INTO LINK_TYPES
VALUES('DS', 'D', 'Storm below sanitary overflow pipe', '');
INSERT INTO LINK_TYPES
VALUES('DT', 'D', 'Ditch', '');
INSERT INTO LINK_TYPES
VALUES('E', 'I', 'Effluent', '');
INSERT INTO LINK_TYPES
VALUES('F', 'D', 'Frontage culvert', '');
INSERT INTO LINK_TYPES
VALUES('FD', 'D', 'French drain', '');
INSERT INTO LINK_TYPES
VALUES('IC', 'S', 'Combined interceptor', '');
INSERT INTO LINK_TYPES
VALUES('IS', 'S', 'Sanitary interceptor', '');
INSERT INTO LINK_TYPES
VALUES('NC', 'D', 'Natural channel', '');
INSERT INTO LINK_TYPES
VALUES('ND', 'D', 'Natural channel storm line', '');
INSERT INTO LINK_TYPES
VALUES('NV', 'D', 'Natural channel culvert', '');
INSERT INTO LINK_TYPES
VALUES('NX', 'D', 'Natural channel crossing culvert', '');
INSERT INTO LINK_TYPES
VALUES('PE', 'I', 'Pumped effluent', '');
INSERT INTO LINK_TYPES
VALUES('PI', 'F', 'Pumped interceptor', '');
INSERT INTO LINK_TYPES
VALUES('PN', 'D', 'Pond', '');
INSERT INTO LINK_TYPES
VALUES('PS', 'F', 'Pumped sanitary', '');
INSERT INTO LINK_TYPES
VALUES('S', 'S', 'Sanitary', '');
INSERT INTO LINK_TYPES
VALUES('SI', 'S', 'SO below diversion but above CSO tunnel', '');
INSERT INTO LINK_TYPES
VALUES('SO', 'D', 'Sanitary overflow', '');
INSERT INTO LINK_TYPES
VALUES('SW', 'D', 'Swale', '');
INSERT INTO LINK_TYPES
VALUES('TC', 'D', 'Transition channel to natural channel', '');
INSERT INTO LINK_TYPES
VALUES('TR', 'S', 'Sanitary trunk line', '');
INSERT INTO LINK_TYPES
VALUES('UC', 'D', 'UIC connector between SED-SUMP', '');
INSERT INTO LINK_TYPES
VALUES('V', 'D', 'Culvert', '');
INSERT INTO LINK_TYPES
VALUES('X', 'D', 'Crossing culvert', '');

INSERT INTO MATERIALS
VALUES('', 'Null/Unspecified', '');
INSERT INTO MATERIALS
VALUES('ABS', 'Acrylonitrile butadiene styrene', '');
INSERT INTO MATERIALS
VALUES('ASBES', 'Asbestos', '');
INSERT INTO MATERIALS
VALUES('ASPHA', 'Asphalt', '');
INSERT INTO MATERIALS
VALUES('BRICK', 'Brick', '');
INSERT INTO MATERIALS
VALUES('BRKSTN', 'Brick with stone invert', '');
INSERT INTO MATERIALS
VALUES('CCP', 'Concrete cylinder', '');
INSERT INTO MATERIALS
VALUES('CDP', 'Concrete D', '');
INSERT INTO MATERIALS
VALUES('CHDPE', 'Corrugated HDPE', '');
INSERT INTO MATERIALS
VALUES('CIP', 'Cast iron', '');
INSERT INTO MATERIALS
VALUES('CIPP', 'Cured in place', '');
INSERT INTO MATERIALS
VALUES('CMP', 'Corrugated metal', '');
INSERT INTO MATERIALS
VALUES('CONBRK', 'Concrete with brick invert', '');
INSERT INTO MATERIALS
VALUES('CONCBL', 'Concrete with river rock bottom', '');
INSERT INTO MATERIALS
VALUES('CONSTN', 'Concrete with stone invert', '');
INSERT INTO MATERIALS
VALUES('CSP', 'Concrete (unknown reinforcing)', '');
INSERT INTO MATERIALS
VALUES('CTG', 'Concrete (tongue and groove)', '');
INSERT INTO MATERIALS
VALUES('CULV', 'Culvert', '');
INSERT INTO MATERIALS
VALUES('DIP', 'Ductile iron', '');
INSERT INTO MATERIALS
VALUES('ERTH', 'Earth/dirt/soil', '');
INSERT INTO MATERIALS
VALUES('FBR', 'Fiberglass', '');
INSERT INTO MATERIALS
VALUES('FRP', 'Fiberglass reinforced', '');
INSERT INTO MATERIALS
VALUES('HDPE', 'High density polyethylene', '');
INSERT INTO MATERIALS
VALUES('IMPLNR', 'IMPLNR', '');
INSERT INTO MATERIALS
VALUES('MONO', 'Monolithic concrete', '');
INSERT INTO MATERIALS
VALUES('NCP', 'Concrete (nonreinforced)', '');
INSERT INTO MATERIALS
VALUES('NREENC', 'Encased (nonreinforced)', '');
INSERT INTO MATERIALS
VALUES('OTHER', 'Other', '');
INSERT INTO MATERIALS
VALUES('PERFDR', 'Perforated drain', '');
INSERT INTO MATERIALS
VALUES('PVC', 'Polyvinylchloride', '');
INSERT INTO MATERIALS
VALUES('RCBOX', 'Reinforced concrete box', '');
INSERT INTO MATERIALS
VALUES('RCP', 'Concrete (reinforced)', '');
INSERT INTO MATERIALS
VALUES('REIENC', 'Encased (reinforced)', '');
INSERT INTO MATERIALS
VALUES('REIFBR', 'Fiberglass (reinforced)', '');
INSERT INTO MATERIALS
VALUES('REIPM', 'Plastic mortar (reinforced)', '');
INSERT INTO MATERIALS
VALUES('RHDPE', 'Reinforced HDPE', '');
INSERT INTO MATERIALS
VALUES('ROCK', 'Rock', '');
INSERT INTO MATERIALS
VALUES('RRAP', 'Riprap', '');
INSERT INTO MATERIALS
VALUES('SDR', 'SDR', '');
INSERT INTO MATERIALS
VALUES('SP', 'SP', '');
INSERT INTO MATERIALS
VALUES('STEEL', 'Steel', '');
INSERT INTO MATERIALS
VALUES('SWALE', 'Swale', '');
INSERT INTO MATERIALS
VALUES('TCP', 'Terra cotta', '');
INSERT INTO MATERIALS
VALUES('UNSPEC', 'Unspecified', '');
INSERT INTO MATERIALS
VALUES('VARIES', 'Variable', '');
INSERT INTO MATERIALS
VALUES('VCP', 'VCP', '');
INSERT INTO MATERIALS
VALUES('VEG', 'Vegetation', '');
INSERT INTO MATERIALS
VALUES('VSP', 'Vitrified clay', '');
INSERT INTO MATERIALS
VALUES('WOOD', 'Wood', '');

INSERT INTO NODE_TYPES
VALUES(' ', 'Unknown', '');
INSERT INTO NODE_TYPES
VALUES('ANG', 'Angle point', '');
INSERT INTO NODE_TYPES
VALUES('BIF', 'Bifurcation structure', '');
INSERT INTO NODE_TYPES
VALUES('CC', 'Catch Basin C', '');
INSERT INTO NODE_TYPES
VALUES('CD', 'Catch Basin D', '');
INSERT INTO NODE_TYPES
VALUES('CG', 'Catch Basin G', '');
INSERT INTO NODE_TYPES
VALUES('CMA', 'CMA', '');
INSERT INTO NODE_TYPES
VALUES('CNFL', 'CNFL', '');
INSERT INTO NODE_TYPES
VALUES('CO', 'CO', '');
INSERT INTO NODE_TYPES
VALUES('CSZ', 'CSZ', '');
INSERT INTO NODE_TYPES
VALUES('DE', 'DE', '');
INSERT INTO NODE_TYPES
VALUES('DETI', 'DETI', '');
INSERT INTO NODE_TYPES
VALUES('DIV', 'DIV', '');
INSERT INTO NODE_TYPES
VALUES('DIVS', 'DIVS', '');
INSERT INTO NODE_TYPES
VALUES('DMH', 'DMH', '');
INSERT INTO NODE_TYPES
VALUES('DPI', 'DPI', '');
INSERT INTO NODE_TYPES
VALUES('DPO', 'DPO', '');
INSERT INTO NODE_TYPES
VALUES('DVT', 'DVT', '');
INSERT INTO NODE_TYPES
VALUES('ERRO', 'ERR', '');
INSERT INTO NODE_TYPES
VALUES('FC', 'FC', '');
INSERT INTO NODE_TYPES
VALUES('FI', 'FI', '');
INSERT INTO NODE_TYPES
VALUES('GI', 'GI', '');
INSERT INTO NODE_TYPES
VALUES('GRB', 'GRB', '');
INSERT INTO NODE_TYPES
VALUES('HAZ', 'HAZ', '');
INSERT INTO NODE_TYPES
VALUES('HLE', 'HLE', '');
INSERT INTO NODE_TYPES
VALUES('HW', 'HW', '');
INSERT INTO NODE_TYPES
VALUES('INFI', 'INFI', '');
INSERT INTO NODE_TYPES
VALUES('INLE', 'INLE', '');
INSERT INTO NODE_TYPES
VALUES('JS', 'JS', '');
INSERT INTO NODE_TYPES
VALUES('LH', 'LH', '');
INSERT INTO NODE_TYPES
VALUES('MH', 'MH', '');
INSERT INTO NODE_TYPES
VALUES('MHCB', 'MHCB', '');
INSERT INTO NODE_TYPES
VALUES('MHST', 'MHST', '');
INSERT INTO NODE_TYPES
VALUES('OF', 'OF', '');
INSERT INTO NODE_TYPES
VALUES('OPEN', 'OPEN', '');
INSERT INTO NODE_TYPES
VALUES('OPNE', 'OPNE', '');
INSERT INTO NODE_TYPES
VALUES('OUTL', 'OUTL', '');
INSERT INTO NODE_TYPES
VALUES('OVR', 'OVR', '');
INSERT INTO NODE_TYPES
VALUES('OVRP', 'OVRP', '');
INSERT INTO NODE_TYPES
VALUES('PMP', 'PMP', '');
INSERT INTO NODE_TYPES
VALUES('PND', 'PND', '');
INSERT INTO NODE_TYPES
VALUES('SAM', 'SAM', '');
INSERT INTO NODE_TYPES
VALUES('SBX', 'SBX', '');
INSERT INTO NODE_TYPES
VALUES('SED', 'SED', '');
INSERT INTO NODE_TYPES
VALUES('SEP', 'SEP', '');
INSERT INTO NODE_TYPES
VALUES('SF', 'SF', '');
INSERT INTO NODE_TYPES
VALUES('SMT', 'SMT', '');
INSERT INTO NODE_TYPES
VALUES('SST', 'SST', '');
INSERT INTO NODE_TYPES
VALUES('SUM', 'SUM', '');
INSERT INTO NODE_TYPES
VALUES('TER', 'TER', '');
INSERT INTO NODE_TYPES
VALUES('TP', 'TP', '');
INSERT INTO NODE_TYPES
VALUES('TR', 'TR', '');
INSERT INTO NODE_TYPES
VALUES('TRAN', 'TRAN', '');
INSERT INTO NODE_TYPES
VALUES('TTOP', 'TTOP', '');
INSERT INTO NODE_TYPES
VALUES('UNK', 'UNK', '');
INSERT INTO NODE_TYPES
VALUES('VLT', 'VLT', '');
INSERT INTO NODE_TYPES
VALUES('VLVB', 'VLVB', '');
INSERT INTO NODE_TYPES
VALUES('VLVG', 'VLVG', '');
INSERT INTO NODE_TYPES
VALUES('WW', 'WW', '');
INSERT INTO NODE_TYPES
VALUES('WWE', 'WWE', '');
INSERT INTO NODE_TYPES
VALUES('WWJ', 'WWJ', '');
INSERT INTO NODE_TYPES
VALUES('WYE', 'WYE', '');

INSERT INTO ORIFICE_SHAPES
VALUES('R', 'Rectangular', '');
INSERT INTO ORIFICE_SHAPES
VALUES('C', 'Circular', '');

INSERT INTO ORIFICE_TYPES
VALUES('OS', 'Side orifice', '');
INSERT INTO ORIFICE_TYPES
VALUES('OB', 'Bottom orifice', '');

INSERT INTO PLACEMENT_TYPES
VALUES(' ', 'Unspecified', '');
INSERT INTO PLACEMENT_TYPES
VALUES('Y', 'Yes', '');
INSERT INTO PLACEMENT_TYPES
VALUES('N', 'No', '');
INSERT INTO PLACEMENT_TYPES
VALUES('M', 'Maybe', '');
INSERT INTO PLACEMENT_TYPES
VALUES('L', 'Lumped', '');
INSERT INTO PLACEMENT_TYPES
VALUES('S', 'Superseded', '');

INSERT INTO PUMP_TYPES
VALUES(1, 'Offline', '');
INSERT INTO PUMP_TYPES
VALUES(2, 'Inline lift', '');
INSERT INTO PUMP_TYPES
VALUES(3, 'Dynamic head-discharge', '');
INSERT INTO PUMP_TYPES
VALUES(4, 'Variable speed', '');

INSERT INTO SEWERABILITIES
VALUES(0, 'Outside USB', '');
INSERT INTO SEWERABILITIES
VALUES(1, 'Unsewerable', '');
INSERT INTO SEWERABILITIES
VALUES(2, 'Sewerable but not sewered', '');
INSERT INTO SEWERABILITIES
VALUES(3, 'Sewered', '');

INSERT INTO SPECIAL_LINK_TYPES
VALUES('PS', 'Pump station', '');
INSERT INTO SPECIAL_LINK_TYPES
VALUES('WS', 'Side weir', '');
INSERT INTO SPECIAL_LINK_TYPES
VALUES('WT', 'Transverse weir', '');
INSERT INTO SPECIAL_LINK_TYPES
VALUES('OS', 'Side orifice', '');
INSERT INTO SPECIAL_LINK_TYPES
VALUES('OB', 'Bottom orifice', '');

INSERT INTO STATUSES
VALUES('ACT', 'Active');
INSERT INTO STATUSES
VALUES('RET', 'Retired');
INSERT INTO STATUSES
VALUES('RPL', 'Replaced');

INSERT INTO STORM_TYPES
VALUES('C', 'Calibration/Historical', '');
INSERT INTO STORM_TYPES
VALUES('D', 'Design', '');

INSERT INTO STREET_TARGET_TYPES
VALUES(' ', 'Unspecified', '');
INSERT INTO STREET_TARGET_TYPES
VALUES('CE', 'Curb extension', '');
INSERT INTO STREET_TARGET_TYPES
VALUES('CES-B', 'CES-B', '');
INSERT INTO STREET_TARGET_TYPES
VALUES('CNFL', 'CNFL', '');
INSERT INTO STREET_TARGET_TYPES
VALUES('CW', 'CW', '');
INSERT INTO STREET_TARGET_TYPES
VALUES('CWS', 'CWS', '');
INSERT INTO STREET_TARGET_TYPES
VALUES('CWS-A', 'CWS-A', '');
INSERT INTO STREET_TARGET_TYPES
VALUES('CWS-B', 'CWS-B', '');
INSERT INTO STREET_TARGET_TYPES
VALUES('INFSWL', 'INFSWL', '');
INSERT INTO STREET_TARGET_TYPES
VALUES('PP', 'Pervious pavement', '');
INSERT INTO STREET_TARGET_TYPES
VALUES('SBS-B', 'SBS-B', '');
INSERT INTO STREET_TARGET_TYPES
VALUES('SGS-A', 'SGS-A', '');
INSERT INTO STREET_TARGET_TYPES
VALUES('SGS-B', 'SGS-B', '');
INSERT INTO STREET_TARGET_TYPES
VALUES('SP', 'Sidewalk planter', '');
INSERT INTO STREET_TARGET_TYPES
VALUES('VV', 'Vortex valve', '');

INSERT INTO TIME_FRAMES
VALUES('EX', 'Existing', '');
INSERT INTO TIME_FRAMES
VALUES('FU', 'Future', '');

INSERT INTO WEIR_TYPES
VALUES('WS', 'Side weir', '');
INSERT INTO WEIR_TYPES
VALUES('WT', 'Transverse weir', '');

GO
;

CREATE PROCEDURE USP_CREATE_NEW_SEQUENCE
	@sequence_name varchar(255),
	@seed int = 0,
	@increment int = 1
AS
BEGIN
	DECLARE @current_value int
	IF exists (
		SELECT 1 FROM ALL_SEQUENCES
		WHERE sequence_name = @sequence_name )
	BEGIN
		PRINT 'Sequence already exists.'
		RETURN 1
	END
	
	IF @seed IS NULL SET @seed = 1
	IF @increment IS NULL SET @increment = 1
	SET @current_value = @seed
	
	INSERT INTO ALL_SEQUENCES (sequence_name, seed, increment, current_value)
	VALUES (@sequence_name, @seed, @increment, @current_value)
END
GO
;

CREATE PROCEDURE USP_GET_NEW_SEQUENCE_VALUE
	@sequence_name varchar(255)
AS
BEGIN
	DECLARE @new_sequence_value int
	SET NOCOUNT ON
	
	UPDATE ALL_SEQUENCES
	SET @new_sequence_value = current_value = current_value + increment
	WHERE sequence_name = @sequence_name
	
	IF @@ROWCOUNT = 0
	BEGIN
		PRINT 'Sequence ' + @sequence_name + ' does not exist'
		RETURN
	END
	
	RETURN @new_sequence_value
END
GO

;

CREATE PROCEDURE USP_CREATE_INSERT_TRIGGER
	@triggerName varchar(50),
	@tableName varchar(50),
	@keyFieldName varchar(50)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @strSQL varchar(1000)
	
	SET @strSQL =
		'CREATE TRIGGER ' + @triggerName +
		' ON ' + @tableName + ' FOR INSERT AS ' +
		'BEGIN ' +
		'DECLARE @new_sequence_value int ' +
		'EXEC @new_sequence_value=USP_GET_NEW_SEQUENCE_VALUE ''' + @tableName + ''' ' +
		'UPDATE ' + @tableName + 
		' SET ' + @keyFieldName + ' = @new_sequence_value, ' +
		' append_date = GETDATE(), ' +
		' edited_by = SYSTEM_USER, ' + 
		' edit_reason = ''append'' ' +
		'WHERE ' + @keyFieldName + ' IN (SELECT ' + 
	@keyFieldName + ' FROM inserted) ' +	'END;'

	EXEC(@strSQL)
END
GO
;

CREATE PROCEDURE USP_CREATE_INSERT_TRIGGER_SPATIAL_SIMPLE
	@triggerName varchar(50),
	@tableName varchar(50),
	@keyFieldName varchar(50)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @strSQL varchar(1000)
	
	SET @strSQL =
		'CREATE TRIGGER ' + @triggerName +
		' ON ' + @tableName + ' FOR INSERT AS ' +
		'BEGIN ' +
		'DECLARE @new_sequence_value int ' +
		'EXEC @new_sequence_value=USP_GET_NEW_SEQUENCE_VALUE ''' + @tableName + ''' ' +
		'UPDATE ' + @tableName + 
		' SET ' + @keyFieldName + ' = @new_sequence_value ' +
		'WHERE ' + @keyFieldName + ' IN (SELECT ' + 
	@keyFieldName + ' FROM inserted) ' +	'END;'

	EXEC(@strSQL)
END
GO
;

CREATE PROCEDURE USP_DSCS_SELECT_OIDS_BY_LINK_IDS
	@id_table ID_TABLE READONLY
AS
BEGIN
	SET NOCOUNT ON;
	SELECT [DSCS].*
	FROM [DSCS]
	INNER JOIN @id_table AS tmp
	ON (([DSCS].[san_to_link_id] = tmp.id)
		OR ([DSCS].[storm_to_link_id] = tmp.id))
END
GO
;

CREATE PROCEDURE USP_DSCS_SELECT_BY_OIDS
	@id_table ID_TABLE READONLY
AS
BEGIN
	SET NOCOUNT ON;
	SELECT [DSCS].*
	FROM [DSCS]
	INNER JOIN @id_table AS tmp
	ON ([DSCS].[OBJECTID] = tmp.id)
END
GO
;

CREATE PROCEDURE USP_LINKS_SELECT_BY_OIDS
	@id_table ID_TABLE READONLY
AS
BEGIN
	SET NOCOUNT ON;
	SELECT [LINKS].*
	FROM [LINKS]
	INNER JOIN @id_table AS tmp
	ON ([LINKS].[OBJECTID] = tmp.id)
END
GO
;

CREATE PROCEDURE USP_NODES_SELECT_OIDS_BY_NODE_IDS
	@id_table ID_TABLE READONLY
AS
BEGIN
	SET NOCOUNT ON;
	SELECT [NODES].*
	FROM [NODES]
	INNER JOIN @id_table AS tmp
	ON ([NODES].[node_id] = tmp.id)
END
GO
;

CREATE PROCEDURE USP_NODES_SELECT_BY_OIDS
	@id_table ID_TABLE READONLY
AS
BEGIN
	SET NOCOUNT ON;
	SELECT [NODES].*
	FROM [NODES]
	INNER JOIN @id_table AS tmp
	ON ([NODES].[OBJECTID] = tmp.id)
END
GO
;

CREATE PROCEDURE USP_PARKING_TARGETS_SELECT_OIDS_BY_NODE_IDS
	@id_table ID_TABLE READONLY
AS
BEGIN
	SET NOCOUNT ON;
	SELECT [PARKING_TARGETS].*
	FROM [PARKING_TARGETS]
	INNER JOIN @id_table AS tmp
	ON ([PARKING_TARGETS].[node_id] = tmp.id)
END
GO
;

CREATE PROCEDURE USP_PARKING_TARGETS_SELECT_BY_OIDS
	@id_table ID_TABLE READONLY
AS
BEGIN
	SET NOCOUNT ON;
	SELECT [PARKING_TARGETS].*
	FROM [PARKING_TARGETS]
	INNER JOIN @id_table AS tmp
	ON ([PARKING_TARGETS].[OBJECTID] = tmp.id)
END
GO
;

CREATE PROCEDURE USP_ROOF_TARGETS_SELECT_OIDS_BY_NODE_IDS
	@id_table ID_TABLE READONLY
AS
BEGIN
	SET NOCOUNT ON;
	SELECT [ROOF_TARGETS].OBJECTID
	FROM [ROOF_TARGETS]
	INNER JOIN @id_table as tmp
	ON ([ROOF_TARGETS].node_id = tmp.id)
END
GO
;

CREATE PROCEDURE USP_ROOF_TARGETS_SELECT_BY_OIDS
	@id_table ID_TABLE READONLY
AS
BEGIN
	SET NOCOUNT ON;
	SELECT [ROOF_TARGETS].*
	FROM [ROOF_TARGETS]
	INNER JOIN @id_table AS tmp
	ON ([ROOF_TARGETS].[OBJECTID] = tmp.id)
END
GO
;

CREATE PROCEDURE USP_SSCS_SELECT_OIDS_BY_NODE_IDS
	@id_table ID_TABLE READONLY,
	@time_frame char(2)
AS
BEGIN
	SET NOCOUNT ON;
	SELECT [SSCS].OBJECTID
	FROM [SSCS], @id_table as tmp
	WHERE
		tmp.id =
		CASE
			WHEN @time_frame = 'FU'
			THEN [SSCS].node_id_fu
			ELSE [SSCS].node_id_ex
		END
		OR
		tmp.id = [SSCS].alt_trace_node_id
END
GO
;

CREATE PROCEDURE USP_SSCS_SELECT_BY_OIDS
	@id_table ID_TABLE READONLY
AS
BEGIN
	SET NOCOUNT ON;
	SELECT [SSCS].*
	FROM [SSCS]
	INNER JOIN @id_table AS tmp
	ON ([SSCS].[OBJECTID] = tmp.id)
END
GO
;

CREATE PROCEDURE USP_STREET_TARGETS_SELECT_OIDS_BY_NODE_IDS
	@id_table ID_TABLE READONLY
AS
BEGIN
	SET NOCOUNT ON;
	SELECT [STREET_TARGETS].*
	FROM [STREET_TARGETS]
	INNER JOIN @id_table AS tmp
	ON ([STREET_TARGETS].[node_id] = tmp.id)
END
GO
;

CREATE PROCEDURE USP_STREET_TARGETS_SELECT_BY_OIDS
	@id_table ID_TABLE READONLY
AS
BEGIN
	SET NOCOUNT ON;
	SELECT [STREET_TARGETS].*
	FROM [STREET_TARGETS]
	INNER JOIN @id_table AS tmp
	ON ([STREET_TARGETS].[OBJECTID] = tmp.id)
END
GO
;

CREATE FUNCTION ProportionalSum
(
	@objectA GEOGRAPHY,
	@objectB GEOGRAPHY,
	@objectBValue float
)
RETURNS float
AS
BEGIN
	DECLARE @ProportionalSum float
	SET @ProportionalSum = @objectBValue*(@objectA.STIntersection(@objectB).STArea()/@objectB.STArea())
	RETURN @ProportionalSum
END
GO
;


EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_asm_zoning",
@tableName = "GIS.ASM_ZONING", @keyFieldName = "asm_zoning_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_cross_sections",
@tableName = "GIS.CROSS_SECTIONS", @keyFieldName = "cross_section_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_cross_sections_data",
@tableName = "GIS.CROSS_SECTIONS_DATA", @keyFieldName = "cross_section_data_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER_SPATIAL_SIMPLE @triggerName = "ti_dsc_zingers",
@tableName = "GIS.DSC_ZINGERS", @keyFieldName = "dsc_zinger_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_dscs",
@tableName = "GIS.DSCS", @keyFieldName = "dsc_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_fixed_floor_elevations",
@tableName = "GIS.FIXED_FLOOR_ELEVATIONS", @keyFieldName = "ffe_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_ic_discos",
@tableName = "GIS.IC_DISCOS", @keyFieldName = "ic_disco_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_ic_drywells",
@tableName = "GIS.IC_DRYWELLS", @keyFieldName = "ic_drywell_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_ic_node_redirectors",
@tableName = "GIS.IC_NODE_REDIRECTORS", @keyFieldName = "ic_node_redirector_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_links",
@tableName = "GIS.LINKS", @keyFieldName = "link_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_nodes",
@tableName = "GIS.NODES", @keyFieldName = "node_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_orifices",
@tableName = "GIS.ORIFICES", @keyFieldName = "orifice_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_parking_targets",
@tableName = "GIS.PARKING_TARGETS", @keyFieldName = "parking_target_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_pipe_conflicts",
@tableName = "GIS.PIPE_CONFLICTS", @keyFieldName = "conflict_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_pipe_shapes",
@tableName = "GIS.PIPE_SHAPES", @keyFieldName = "shape_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_pipe_shapes_data",
@tableName = "GIS.PIPE_SHAPES_DATA", @keyFieldName = "udg_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_pump_curves",
@tableName = "GIS.PUMP_CURVES", @keyFieldName = "pump_curve_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_pumps",
@tableName = "GIS.PUMPS", @keyFieldName = "pump_id";
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_roof_targets",
@tableName = "GIS.ROOF_TARGETS", @keyFieldName = "roof_target_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_san_patterns",
@tableName = "GIS.SAN_PATTERNS", @keyFieldName = "san_pattern_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_special_links",
@tableName = "GIS.SPECIAL_LINKS", @keyFieldName = "special_link_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_special_links_data",
@tableName = "GIS.SPECIAL_LINKS_DATA", @keyFieldName = "special_link_data_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER_SPATIAL_SIMPLE @triggerName = "ti_ssc_zingers",
@tableName = "GIS.SSC_ZINGERS", @keyFieldName = "ssc_zinger_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_sscs",
@tableName = "GIS.SSCS", @keyFieldName = "ssc_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_storms",
@tableName = "GIS.STORMS", @keyFieldName = "storm_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_street_targets",
@tableName = "GIS.STREET_TARGETS", @keyFieldName = "street_target_id";
GO
;

EXEC USP_CREATE_INSERT_TRIGGER @triggerName = "ti_weirs",
@tableName = "GIS.WEIRS", @keyFieldName = "weir_id";
GO
;

EXEC USP_CREATE_DOMAIN_TABLE_RECORDS
GO

;

CREATE TABLE ALL_SEQUENCES (
	sequence_name varchar(255) PRIMARY KEY,
	seed int NOT NULL DEFAULT(1),
	increment int NOT NULL DEFAULT(1),
	current_value int
)
GO

;

EXEC USP_CREATE_NEW_SEQUENCE 'GIS.ASM_ZONING';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.DSC_ZINGERS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.DSCS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.LINKS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.NODES';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.PARKING_TARGETS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.ROOF_TARGETS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.SSC_ZINGERS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.SSCS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.STREET_TARGETS';

EXEC USP_CREATE_NEW_SEQUENCE 'GIS.PIPE_SHAPES';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.PIPE_SHAPES_DATA';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.IC_DRYWELLS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.IC_DISCOS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.IC_NODE_REDIRECTORS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.CROSS_SECTIONS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.CROSS_SECTIONS_DATA';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.SPECIAL_LINKS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.SPECIAL_LINKS_DATA';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.FIXED_FLOOR_ELEVATIONS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.PIPE_CONFLICTS'
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.STORMS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.SAN_PATTERNS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.ORIFICES';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.WEIRS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.PUMPS';
EXEC USP_CREATE_NEW_SEQUENCE 'GIS.PUMP_CURVES';

;

;





EXEC sp_addextendedproperty 'MS_Description', 'Assumption codes used for identifying general data sources for permanent inflow controls', 'Schema', GIS, 'table', ASSUMPTION_CODES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', ASSUMPTION_CODES, 'column', assumption_code_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of assumption code', 'Schema', GIS, 'table', ASSUMPTION_CODES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of assumption code', 'Schema', GIS, 'table', ASSUMPTION_CODES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Data source codes for links and nodes

? = Unknown
A = As-builts
B = Observation
C = Contour
D = Depth Down
E = DEM
F = Facility Maps
G = Parallel Ground Surface
H = Hansen
I = Interpolate
K = Match Crown
L = Field Chek
M = Model maps (deprecated)
O = Other
P = Predesign
R = Match Springline
S = Minimum pipe slope
T = Same node transfer
U = Default Value
V = Survey
W = WAG
X = Extend Slope
Y = BoP Stream Lines
Z = LiDAR', 'Schema', GIS, 'table', DATA_SOURCES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', DATA_SOURCES, 'column', data_source_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of data source', 'Schema', GIS, 'table', DATA_SOURCES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of data source', 'Schema', GIS, 'table', DATA_SOURCES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Provides detailed zoning codes', 'Schema', GIS, 'table', DETAILED_ZONES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', DETAILED_ZONES, 'column', detailed_zone_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of detailed zone', 'Schema', GIS, 'table', DETAILED_ZONES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Associated general zone for detailed zone', 'Schema', GIS, 'table', DETAILED_ZONES, 'column', zone_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of detailed zone', 'Schema', GIS, 'table', DETAILED_ZONES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Types of DISCO connections

C
D
E
F
S
(space)', 'Schema', GIS, 'table', DISCO_CLASSES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', DISCO_CLASSES, 'column', disco_class_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of DISCO class', 'Schema', GIS, 'table', DISCO_CLASSES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of DISCO class', 'Schema', GIS, 'table', DISCO_CLASSES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Indicates where data for the DSC was obtained.  The following values are in order of confidence (from highest to lowest).

A: As-built
B: Building plan
P: Plumbing record
Null: Default', 'Schema', GIS, 'table', DSC_DATA_SOURCES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key and name of DSC data source', 'Schema', GIS, 'table', DSC_DATA_SOURCES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of source quality (DSC data source)', 'Schema', GIS, 'table', DSC_DATA_SOURCES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'EMD074

Indicates how impervious area was increased from existing to future (whether the DSC was in a "planning polygon").

-1: Not within planning polygon.  Future roof and parking assumed to be the same as existing.
0: Future roof and parking = future target area
1: Increase roof until total ia_frac is that allowed in comprehensive plan. No change to parking. Existing roof area less than future target; Existing parking greater than future target.
2: Increase parking until total ia_frac is that allowed in comprehensive plan. No change to roof. Existing roof area greater than future target; Existing parking less than future target.
3: In planning polygon, but future roof and parking are same as existing. Existing roof area greater than future target; Existing parking greater than future target.', 'Schema', GIS, 'table', GROWTH_STATES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', GROWTH_STATES, 'column', growth_state_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of growth state', 'Schema', GIS, 'table', GROWTH_STATES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of growth state', 'Schema', GIS, 'table', GROWTH_STATES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Hansen service codes

AB, ABAN = Abandoned
CNS = Constructed but not in service
EX = ?
IN = In service and active
NEW = New construction, not yet as-builted
PEND = Pending rehabilitation
REPR = Out of service for repair
TBAB = To be abandoned
UNK = Unknown', 'Schema', GIS, 'table', HANSEN_SERVICE_CODES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', HANSEN_SERVICE_CODES, 'column', hansen_service_code_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of Hansen service code', 'Schema', GIS, 'table', HANSEN_SERVICE_CODES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of hansen service code', 'Schema', GIS, 'table', HANSEN_SERVICE_CODES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', '0 = Does not meet any of the states below
1 = Already constructed, using standard Stormwater Management Manual assumptions for facility volume
2 = Already constructed, using design/field data for facility volume
3 = To be constructed by 2011, uses Stormwater Management Manual for facility volume
4 = To be constructed by 2011, uses design/field data for facility volume', 'Schema', GIS, 'table', IC_TARGET_CONSTRUCTED_STATUSES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', IC_TARGET_CONSTRUCTED_STATUSES, 'column', ic_target_constructed_status_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of constructed status code', 'Schema', GIS, 'table', IC_TARGET_CONSTRUCTED_STATUSES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of constructed status code', 'Schema', GIS, 'table', IC_TARGET_CONSTRUCTED_STATUSES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', IC_TARGET_DIFFICULTIES, 'column', ic_target_difficulty_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of inflow control target difficulty', 'Schema', GIS, 'table', IC_TARGET_DIFFICULTIES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of inflow control target difficulty', 'Schema', GIS, 'table', IC_TARGET_DIFFICULTIES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Type of impervious area

P = Parking/Driveway/Sidewalk
R = Building/Roof
S = Street (not used for inflow controls)', 'Schema', GIS, 'table', IMPERVIOUS_TYPES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', IMPERVIOUS_TYPES, 'column', impervious_type_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of impervious type', 'Schema', GIS, 'table', IMPERVIOUS_TYPES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of impervious type', 'Schema', GIS, 'table', IMPERVIOUS_TYPES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'EMD006

Detailed type of link (detail of pipe_flow_type)

C: combined
CC: CSO tunnel
CI: combined overflow below diversion/bifuration but above CSO tunnels
CO: combined overflow
D: storm drainage
DG: storm gutter flow at street surface
DC: storm drain connector
DS: storm below SO
DT: ditch
E: effluent
F: frontage culvert
FD: french drain
IC: combined - interceptor
IS: sanitary - interceptor
NC: natural channel
ND: natural channel storm line
NV: natural channel culvert
NX: natural channel crossing culvert
PE: pumped effluent
PI: pumped interceptor
PN: pond
PS: pumped sanitary
S: sanitary
SI: sanitary overflow below diversions/bifurcation but above CSO tunnels
SO: sanitary overflow (usually near pump stations)
SW: swale
TC: transition channel to natural channel
TR: sanitary trunk line (historically significant)
UC: UIC connector between SED and SUMP
V: culvert
X: crossing culvert', 'Schema', GIS, 'table', LINK_TYPES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', LINK_TYPES, 'column', link_type_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Type of flow associated with link type', 'Schema', GIS, 'table', LINK_TYPES, 'column', pipe_flow_type_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of link type', 'Schema', GIS, 'table', LINK_TYPES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of link type', 'Schema', GIS, 'table', LINK_TYPES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', MATERIALS, 'column', material_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of material', 'Schema', GIS, 'table', MATERIALS, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of material', 'Schema', GIS, 'table', MATERIALS, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Types of nodes, usually originates from Hansen

ANG = Angle point
BIF = Bifurcation structure
CC = Catch Basin C (no longer used)
CD = Catch Basin D (no longer used)
CG = Catch Basin G (no longer used)
CMA = 
CNFL = 
CO = Cleanout
CSZ = Change in size
DE = Dead end or plugged line
DETI (DETIO) = Detention tank inlet
DIV = Diversion manhole
DIVS (DIVST) = Diversion structure
DMH = Drop manhole
DPI = Detention pond inlet
DPO = Detention pond outlet
DVT = Detention vault
ERRO (ERROR) =
FC = Flow control
FI = 
GI = 
GRB = Grade break
HAZ = Hazardous materials (hazmat) control
HLE = Hole
HW = Headwall/open inlet
INFI (INFINL) = Infiltration inlet
INLE (INLET) = Inlet
JS = Junction structure
LH = Lamphole
MH = Manhole', 'Schema', GIS, 'table', NODE_TYPES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', NODE_TYPES, 'column', node_type_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of node type', 'Schema', GIS, 'table', NODE_TYPES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of node type', 'Schema', GIS, 'table', NODE_TYPES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Types of orifice shapes', 'Schema', GIS, 'table', ORIFICE_SHAPES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', ORIFICE_SHAPES, 'column', orifice_shape_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of orifice shape', 'Schema', GIS, 'table', ORIFICE_SHAPES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of orifice shape', 'Schema', GIS, 'table', ORIFICE_SHAPES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Types of orifices', 'Schema', GIS, 'table', ORIFICE_TYPES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', ORIFICE_TYPES, 'column', orifice_type_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of orifice type', 'Schema', GIS, 'table', ORIFICE_TYPES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of orifice type', 'Schema', GIS, 'table', ORIFICE_TYPES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Types of flow coursing through links

EMD006

Type of flow traveling through pipe

C: combined
D: storm drainage
S: sanitary

Other types:

F: Force main/pumped
I: Illegal (illegal to connect directly with service)
U: Unknown
A: Abandoned', 'Schema', GIS, 'table', PIPE_FLOW_TYPES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', PIPE_FLOW_TYPES, 'column', pipe_flow_type_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of pipe flow type', 'Schema', GIS, 'table', PIPE_FLOW_TYPES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of pipe flow type', 'Schema', GIS, 'table', PIPE_FLOW_TYPES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Types of placement possibilities

Y = Yes, control can be placed
N = No, control cannot be placed
M = Maybe

L = lumped version of other facilities in table
S = Superseded (a previous Y or M has been changed based on a more recent inflow control evaluation)', 'Schema', GIS, 'table', PLACEMENT_TYPES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', PLACEMENT_TYPES, 'column', placement_type_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of placement type', 'Schema', GIS, 'table', PLACEMENT_TYPES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of placement type', 'Schema', GIS, 'table', PLACEMENT_TYPES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Types of pumps', 'Schema', GIS, 'table', PUMP_TYPES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', PUMP_TYPES, 'column', pump_type_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of pump type', 'Schema', GIS, 'table', PUMP_TYPES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of pump type', 'Schema', GIS, 'table', PUMP_TYPES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'EMD080

0 or null: parcel is outside USB AND does not and will not contribute flow that will enter Portland collection system
1: Unsewerable
2: Sewerable but not sewered
3: Sewerable and sewered', 'Schema', GIS, 'table', SEWERABILITIES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', SEWERABILITIES, 'column', sewerability_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of sewerability code', 'Schema', GIS, 'table', SEWERABILITIES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of sewerability code', 'Schema', GIS, 'table', SEWERABILITIES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Types of special links', 'Schema', GIS, 'table', SPECIAL_LINK_TYPES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', SPECIAL_LINK_TYPES, 'column', special_link_type_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of special link type', 'Schema', GIS, 'table', SPECIAL_LINK_TYPES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of special link type', 'Schema', GIS, 'table', SPECIAL_LINK_TYPES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Primary key, status ID', 'Schema', GIS, 'table', STATUSES, 'column', status_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of status', 'Schema', GIS, 'table', STATUSES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', STORM_TYPES, 'column', storm_type_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of storm type', 'Schema', GIS, 'table', STORM_TYPES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of storm type', 'Schema', GIS, 'table', STORM_TYPES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Types of street targets', 'Schema', GIS, 'table', STREET_TARGET_TYPES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', STREET_TARGET_TYPES, 'column', street_target_type_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of street target type', 'Schema', GIS, 'table', STREET_TARGET_TYPES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of street target type', 'Schema', GIS, 'table', STREET_TARGET_TYPES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Types of time frames', 'Schema', GIS, 'table', TIME_FRAMES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', TIME_FRAMES, 'column', time_frame_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of time frame', 'Schema', GIS, 'table', TIME_FRAMES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of time frame', 'Schema', GIS, 'table', TIME_FRAMES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Types of weirs', 'Schema', GIS, 'table', WEIR_TYPES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', WEIR_TYPES, 'column', weir_type_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of weir type', 'Schema', GIS, 'table', WEIR_TYPES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of weir type', 'Schema', GIS, 'table', WEIR_TYPES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', ZONES, 'column', zone_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of general zoning code', 'Schema', GIS, 'table', ZONES, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of general zoning code', 'Schema', GIS, 'table', ZONES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Provides cross section metadata for natural channels', 'Schema', GIS, 'table', CROSS_SECTIONS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key, cross section id', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', cross_section_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to LINKS', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', link_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Manning''s roughness for main channel', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', roughness_main
;

EXEC sp_addextendedproperty 'MS_Description', 'Manning''s roughness for left bank (downstream facing)', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', roughness_left
;

EXEC sp_addextendedproperty 'MS_Description', 'Manning''s roughness for right bank (downstream facing)', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', roughness_right
;

EXEC sp_addextendedproperty 'MS_Description', 'Station at which left bank begins (0 is at very left end of the cross section, downstream facing)', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', station_left
;

EXEC sp_addextendedproperty 'MS_Description', 'Station at which right bank begins (0 is at very left end of the cross section, downstream facing)', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', station_right
;

EXEC sp_addextendedproperty 'MS_Description', 'Length factor for left bank (downstream facing)', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', length_factor_left
;

EXEC sp_addextendedproperty 'MS_Description', 'Length factor for right bank (downstream facing)', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', length_factor_right
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id for cross section', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', mst_xsections_id_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id for associated link', 'Schema', GIS, 'table', CROSS_SECTIONS, 'column', mlinkid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Provides station/elevation data to describe the shape of cross sections', 'Schema', GIS, 'table', CROSS_SECTIONS_DATA
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key, cross section data id', 'Schema', GIS, 'table', CROSS_SECTIONS_DATA, 'column', cross_section_data_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to CROSS_SECTIONS', 'Schema', GIS, 'table', CROSS_SECTIONS_DATA, 'column', cross_section_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Order of data for a cross section datum', 'Schema', GIS, 'table', CROSS_SECTIONS_DATA, 'column', order_index
;

EXEC sp_addextendedproperty 'MS_Description', 'Station coordinate of datum', 'Schema', GIS, 'table', CROSS_SECTIONS_DATA, 'column', station
;

EXEC sp_addextendedproperty 'MS_Description', 'Elevation coordinate of datum', 'Schema', GIS, 'table', CROSS_SECTIONS_DATA, 'column', elevation
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', CROSS_SECTIONS_DATA, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', CROSS_SECTIONS_DATA, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', CROSS_SECTIONS_DATA, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', CROSS_SECTIONS_DATA, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', CROSS_SECTIONS_DATA, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id for cross section data', 'Schema', GIS, 'table', CROSS_SECTIONS_DATA, 'column', mst_xsection_dat_id_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'old id for associated cross section', 'Schema', GIS, 'table', CROSS_SECTIONS_DATA, 'column', mst_xsections_id_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Provides surveyed fixed floor elevations for use in basement backup risk analysis.', 'Schema', GIS, 'table', FIXED_FLOOR_ELEVATIONS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key, FFE Id', 'Schema', GIS, 'table', FIXED_FLOOR_ELEVATIONS, 'column', ffe_id
;

EXEC sp_addextendedproperty 'MS_Description', 'DSC Id', 'Schema', GIS, 'table', FIXED_FLOOR_ELEVATIONS, 'column', dsc_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Address of site', 'Schema', GIS, 'table', FIXED_FLOOR_ELEVATIONS, 'column', address
;

EXEC sp_addextendedproperty 'MS_Description', 'Property number tax record', 'Schema', GIS, 'table', FIXED_FLOOR_ELEVATIONS, 'column', rno
;

EXEC sp_addextendedproperty 'MS_Description', 'Elevation of first floor', 'Schema', GIS, 'table', FIXED_FLOOR_ELEVATIONS, 'column', fixed_floor_elevation
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if property has no evidence of basement', 'Schema', GIS, 'table', FIXED_FLOOR_ELEVATIONS, 'column', has_no_basement
;

EXEC sp_addextendedproperty 'MS_Description', 'Date of FFE survey', 'Schema', GIS, 'table', FIXED_FLOOR_ELEVATIONS, 'column', survey_date
;

EXEC sp_addextendedproperty 'MS_Description', 'General comments on record', 'Schema', GIS, 'table', FIXED_FLOOR_ELEVATIONS, 'column', comment
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', FIXED_FLOOR_ELEVATIONS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', FIXED_FLOOR_ELEVATIONS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', FIXED_FLOOR_ELEVATIONS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was added', 'Schema', GIS, 'table', FIXED_FLOOR_ELEVATIONS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', FIXED_FLOOR_ELEVATIONS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated DSC', 'Schema', GIS, 'table', FIXED_FLOOR_ELEVATIONS, 'column', dscid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Used to be IC_DISCOVEG

Provides disconnection to vegetation data for DSCs.', 'Schema', GIS, 'table', IC_DISCOS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key, IC Disco ID', 'Schema', GIS, 'table', IC_DISCOS, 'column', ic_disco_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Parcel ID', 'Schema', GIS, 'table', IC_DISCOS, 'column', parcel_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Divide ID', 'Schema', GIS, 'table', IC_DISCOS, 'column', divide_id
;

EXEC sp_addextendedproperty 'MS_Description', 'DSC Id of DSC on which disco record sits', 'Schema', GIS, 'table', IC_DISCOS, 'column', dsc_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to IMPERVIOUS_TYPES', 'Schema', GIS, 'table', IC_DISCOS, 'column', ia_type
;

EXEC sp_addextendedproperty 'MS_Description', 'A code indicating the type of assumption resulting in the Disco record; foreign key to ASSUMPTION_CODES', 'Schema', GIS, 'table', IC_DISCOS, 'column', assumption_code
;

EXEC sp_addextendedproperty 'MS_Description', 'The time frame of the record; foreign key to TIME_FRAMES', 'Schema', GIS, 'table', IC_DISCOS, 'column', time_frame
;

EXEC sp_addextendedproperty 'MS_Description', 'Refers to the impervious area of the timeframe that will be used for calculating the effect of the disconnection; foreign key to TIME_FRAMES', 'Schema', GIS, 'table', IC_DISCOS, 'column', ia_time_frame
;

EXEC sp_addextendedproperty 'MS_Description', 'Area of disconnection', 'Schema', GIS, 'table', IC_DISCOS, 'column', disco_area
;

EXEC sp_addextendedproperty 'MS_Description', 'Decimal percentage effectiveness (0..1) of the control.  Not all controls are 100% effective (i.e., 100% of their area is removed from the collection system).', 'Schema', GIS, 'table', IC_DISCOS, 'column', effectiveness
;

EXEC sp_addextendedproperty 'MS_Description', 'Comment on the control', 'Schema', GIS, 'table', IC_DISCOS, 'column', comment
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; indicates whether control is in operation and should be applied to model', 'Schema', GIS, 'table', IC_DISCOS, 'column', is_active
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', IC_DISCOS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', IC_DISCOS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', IC_DISCOS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended; requires conversion from original (varchar(8) YYYYMMDD)', 'Schema', GIS, 'table', IC_DISCOS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', IC_DISCOS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated parcel', 'Schema', GIS, 'table', IC_DISCOS, 'column', parcelid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated divide of parcel', 'Schema', GIS, 'table', IC_DISCOS, 'column', divideid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated dsc', 'Schema', GIS, 'table', IC_DISCOS, 'column', dscid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Provides disconnection to drywell data for DSCs.', 'Schema', GIS, 'table', IC_DRYWELLS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key, IC Drywell ID', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', ic_drywell_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Parcel ID', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', parcel_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Divide ID', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', divide_id
;

EXEC sp_addextendedproperty 'MS_Description', 'DSC Id of DSC on which disco record sits', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', dsc_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to IMPERVIOUS_TYPES', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', ia_type
;

EXEC sp_addextendedproperty 'MS_Description', 'A code indicating the type of assumption resulting in the Disco record; foreign key to ASSUMPTION_CODES', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', assumption_code
;

EXEC sp_addextendedproperty 'MS_Description', 'The time frame of the record; foreign key to TIME_FRAMES', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', time_frame
;

EXEC sp_addextendedproperty 'MS_Description', 'Refers to the impervious area of the timeframe that will be used for calculating the effect of the disconnection; foreign key to TIME_FRAMES

EX = existing
FU = future', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', ia_time_frame
;

EXEC sp_addextendedproperty 'MS_Description', 'Area of disconnection', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', drywell_area
;

EXEC sp_addextendedproperty 'MS_Description', 'Comment on the control', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', comment
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; indicates whether control is in operation and should be applied to model', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', is_active
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended; requires conversion from original (varchar(8) YYYYMMDD)', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated parcel', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', parcelid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated divide of parcel', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', divideid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated DSC', 'Schema', GIS, 'table', IC_DRYWELLS, 'column', dscid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Used to be IC_NGTOREDIR

Provides redirections of SSC draining nodes to other nodes.', 'Schema', GIS, 'table', IC_NODE_REDIRECTORS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key, IC Node Redirector Id', 'Schema', GIS, 'table', IC_NODE_REDIRECTORS, 'column', ic_node_redirector_id
;

EXEC sp_addextendedproperty 'MS_Description', 'SSC ID of subcatchment whose draining node will be redirected', 'Schema', GIS, 'table', IC_NODE_REDIRECTORS, 'column', ssc_id
;

EXEC sp_addextendedproperty 'MS_Description', 'New draining node for subcatchment', 'Schema', GIS, 'table', IC_NODE_REDIRECTORS, 'column', node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', IC_NODE_REDIRECTORS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', IC_NODE_REDIRECTORS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', IC_NODE_REDIRECTORS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', IC_NODE_REDIRECTORS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', IC_NODE_REDIRECTORS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated SSC', 'Schema', GIS, 'table', IC_NODE_REDIRECTORS, 'column', surfscid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated draining node', 'Schema', GIS, 'table', IC_NODE_REDIRECTORS, 'column', ngto_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Orifice flow restriction/diversion data', 'Schema', GIS, 'table', ORIFICES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key, orifice ID', 'Schema', GIS, 'table', ORIFICES, 'column', orifice_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of orifice', 'Schema', GIS, 'table', ORIFICES, 'column', orifice_name
;

EXEC sp_addextendedproperty 'MS_Description', 'Upstream node ID, foreign key to NODES', 'Schema', GIS, 'table', ORIFICES, 'column', us_node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Downstream node ID, foreign key to NODES. If empty, then the link_id must not be empty.  If both aren''t empty, then this overrides.   If both are not empty, ds_node_id overrides.', 'Schema', GIS, 'table', ORIFICES, 'column', ds_node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to LINKS.  Indicates the link along which the orifice will be placed.  The link must have its us_node_id match the record''s us_node_id.  If this field is empty, ds_node_id must not be empty.    If both are not empty, ds_node_id overrides.', 'Schema', GIS, 'table', ORIFICES, 'column', link_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to ORIFICE_TYPES', 'Schema', GIS, 'table', ORIFICES, 'column', orifice_type_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to ORIFICE_SHAPES', 'Schema', GIS, 'table', ORIFICES, 'column', orifice_shape_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Cross-sectional area of orifice', 'Schema', GIS, 'table', ORIFICES, 'column', orifice_area
;

EXEC sp_addextendedproperty 'MS_Description', 'Height of orifice (only used for shape = R)', 'Schema', GIS, 'table', ORIFICES, 'column', height
;

EXEC sp_addextendedproperty 'MS_Description', 'Invert of orifice (only used for orifice_type = S)', 'Schema', GIS, 'table', ORIFICES, 'column', invert
;

EXEC sp_addextendedproperty 'MS_Description', 'Orifice coefficient', 'Schema', GIS, 'table', ORIFICES, 'column', coefficient
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', ORIFICES, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', ORIFICES, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', ORIFICES, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', ORIFICES, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', ORIFICES, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Provides utility and spatial conflict data for pipes.

Not considered integral to model-build.', 'Schema', GIS, 'table', PIPE_CONFLICTS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key.  Conflict id', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', conflict_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to LINKS', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', link_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Upstream node ID, foreign key to NODES', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', us_node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Downstream node ID, foreign key to NODES', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', ds_node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Unknown', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', link_id_2
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to Hansen/DME link table', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', hansen_compkey
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of water line crossings', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', num_water_crossings
;

EXEC sp_addextendedproperty 'MS_Description', 'Smallest diameter of crossing water lines', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', min_diam_water_crossing_in
;

EXEC sp_addextendedproperty 'MS_Description', 'Largest diameter of crossing water lines', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', max_diam_water_crossing_in
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if pipe has parallel water line', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', has_water_parallel
;

EXEC sp_addextendedproperty 'MS_Description', 'Maximum diameter of parallel water line', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', max_diam_water_parallel_in
;

EXEC sp_addextendedproperty 'MS_Description', 'Approximate distance to parallel water if the line exists', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_to_parallel_water
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of crossing sewer pipes', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', num_sewer_crossings
;

EXEC sp_addextendedproperty 'MS_Description', 'Smallest diameter of crossing sewers', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', min_diam_sewer_crossing_in
;

EXEC sp_addextendedproperty 'MS_Description', 'Largest diameter of sewer crossing', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', max_diam_sewer_crossing_in
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if pipe has parallel sewer pipes', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', has_sewer_parallel
;

EXEC sp_addextendedproperty 'MS_Description', 'Largest diameter of parallel sewer pipes', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', max_diam_sewer_parallel_in
;

EXEC sp_addextendedproperty 'MS_Description', 'Approximate distance to parallel sewer pipe, if any', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_to_parallel_sewer
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of street crossings', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', num_street_crossings
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of arterial crossings', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', num_arterial_crossings
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of major arterial crossings', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', num_maj_arterial_crossings
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of freeway crossings', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', num_freeway_crossings
;

EXEC sp_addextendedproperty 'MS_Description', 'Line is in street surface', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', is_on_street
;

EXEC sp_addextendedproperty 'MS_Description', 'Type of street if line is on street surface', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', street_type
;

EXEC sp_addextendedproperty 'MS_Description', 'Distance of line to street centerline', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_to_street_centerline
;

EXEC sp_addextendedproperty 'MS_Description', 'Average daily traffic volume (count/day)', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', avg_traffic_vol_numperday
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of streets if upstream node of line is in street intersection', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', num_str_us_node_in_street
;

EXEC sp_addextendedproperty 'MS_Description', 'Distance of upstream node to point of street intersection', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_us_node_to_str_intsec
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of streets if downstream node of line is in street intersection', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', num_str_ds_node_in_street
;

EXEC sp_addextendedproperty 'MS_Description', 'Distance of downstream node to point of street intersection', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_ds_node_to_str_intsec
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of fiber optic crossings', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', num_fiber_crossings
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if line has a parallel fiber optic line', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', has_fiber_parallel
;

EXEC sp_addextendedproperty 'MS_Description', 'Approximate distance to fiber optic line', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_to_fiber_parallel
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of gas line crossings', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', num_gas_crossings
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if line has a parallel gas line', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', has_gas_parallel
;

EXEC sp_addextendedproperty 'MS_Description', 'Distance to parallel gas line', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_to_gas_parallel
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of railroad crossings', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', num_rail_crossings
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if line has parallel railroad lines', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', has_rail_parallel
;

EXEC sp_addextendedproperty 'MS_Description', 'Distance to parallel railroad line', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_to_rail_parallel
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of light rail crossings', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', num_lrt_crossings
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if line has parallel light rail tracks', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', has_lrt_parallel
;

EXEC sp_addextendedproperty 'MS_Description', 'Distance from line to parallel light rail tracks', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_to_lrt_parallel
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of emergency route crossings', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', num_emg_route_crossings
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if line has parallel emergency routes', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', has_emg_route_parallel
;

EXEC sp_addextendedproperty 'MS_Description', 'Distance from line to parallel emergency route', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_to_emg_route_parallel
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if line is within an environmental conservation zone', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', is_within_conservation
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if line is within environmental protection zone', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', is_within_protection
;

EXEC sp_addextendedproperty 'MS_Description', 'Approximate length of pipe within environmental conservation zone', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', length_within_conservation
;

EXEC sp_addextendedproperty 'MS_Description', 'Approximate length of line within environmental protection zone', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', length_within_protection
;

EXEC sp_addextendedproperty 'MS_Description', 'Overlapping area of 12.5 ft radius buffer around line within environmental conservation zone', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', area_within_conservation
;

EXEC sp_addextendedproperty 'MS_Description', 'Overlapping area of 12.5 ft radius buffer around line within environmental protection zone', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', area_within_protection
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if upstream node of line is within an MS4 area', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', us_node_is_within_ms4
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; upstream node is within a UIC subcatchment', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', us_node_is_within_uic
;

EXEC sp_addextendedproperty 'MS_Description', 'Upstream node depth', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', us_node_depth
;

EXEC sp_addextendedproperty 'MS_Description', 'Downstream node depth', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', ds_node_depth
;

EXEC sp_addextendedproperty 'MS_Description', 'Slope of pipe (fractional form: (usie-dsie)/length)', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', slope
;

EXEC sp_addextendedproperty 'MS_Description', 'Percent slope of surface, negative indicates adverse slope', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', ground_surface_slope
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if line is within 50 feet of an ECSI (environmental cleanup site)', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', is_near_ecsi
;

EXEC sp_addextendedproperty 'MS_Description', 'Distance to nearest ECSI', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', distance_to_ecsi
;

EXEC sp_addextendedproperty 'MS_Description', 'Length of pipe within 50 feet of an ECSI', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', length_within_ecsi_range
;

EXEC sp_addextendedproperty 'MS_Description', 'Average pipe depth * overlap of 12.5 ft pipe buffer and 50 ft ECSI buffer', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', ecsi_volume_cuyd
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true indicates pipe is within 250 ft of a school', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', is_near_school
;

EXEC sp_addextendedproperty 'MS_Description', 'Distance of line to nearest school', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_to_school
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if line is within 250 ft of a hospital', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', is_near_hospital
;

EXEC sp_addextendedproperty 'MS_Description', 'Distance of line to nearest hospital', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_to_hospital
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if line is within 250 ft of a police station', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', is_near_police_station
;

EXEC sp_addextendedproperty 'MS_Description', 'Distance from line to nearest police station', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_to_police_station
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if line is within 250 ft of a fire station', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', is_near_fire_station
;

EXEC sp_addextendedproperty 'MS_Description', 'Distance from line to nearest fire station', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_to_fire_station
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if line is within 10 ft of a building', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', is_near_building
;

EXEC sp_addextendedproperty 'MS_Description', 'Approximate distance from building to line', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_to_building
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if within 25 ft of a hydrant', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', is_near_hydrant
;

EXEC sp_addextendedproperty 'MS_Description', 'Distance from pipe to nearest hydrant', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', dist_to_hydrant
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if pipe is in a historically difficult construction area', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', in_difficult_area
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated link', 'Schema', GIS, 'table', PIPE_CONFLICTS, 'column', mlinkid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Pipe cross section shapes (completely enclosed shapes; see CROSS_SECTIONS for open channel shapes)', 'Schema', GIS, 'table', PIPE_SHAPES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', PIPE_SHAPES, 'column', shape_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Primary key, shape code', 'Schema', GIS, 'table', PIPE_SHAPES, 'column', shape_name
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of shape', 'Schema', GIS, 'table', PIPE_SHAPES, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Shape number id for use in PDX SWMM', 'Schema', GIS, 'table', PIPE_SHAPES, 'column', pdx_swmm_shape_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Type ID for use in DHI models', 'Schema', GIS, 'table', PIPE_SHAPES, 'column', dhi_type_num
;

EXEC sp_addextendedproperty 'MS_Description', 'Shape number id for use in XPSWMM', 'Schema', GIS, 'table', PIPE_SHAPES, 'column', xpswmm_shape_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Average Manning''s roughness of cross section', 'Schema', GIS, 'table', PIPE_SHAPES, 'column', roughness
;

EXEC sp_addextendedproperty 'MS_Description', 'General comment/usage of shape', 'Schema', GIS, 'table', PIPE_SHAPES, 'column', comment
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', PIPE_SHAPES, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', PIPE_SHAPES, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', PIPE_SHAPES, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', PIPE_SHAPES, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', PIPE_SHAPES, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Used to be called User Defined Geometries

Provides coordinate data for defining pipe shape cross sections', 'Schema', GIS, 'table', PIPE_SHAPES_DATA
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key, user defined geometry id', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', udg_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to PIPE_SHAPES', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', shape_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Maximum vertical dimension of geometry', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', height_in
;

EXEC sp_addextendedproperty 'MS_Description', 'Maximum horizontal dimension of geometry', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', width_in
;

EXEC sp_addextendedproperty 'MS_Description', 'Order of cross section in batch of other records with the same shape_id, height, and width, moving from bottom to top', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', order_index
;

EXEC sp_addextendedproperty 'MS_Description', 'Depth at location depicted by record, from bottom of geometry', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', depth
;

EXEC sp_addextendedproperty 'MS_Description', 'Cross sectional area at depth depicted by record, from the bottom to the depth indicated', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', xsec_area
;

EXEC sp_addextendedproperty 'MS_Description', 'Cross sectional hydraulic radius at depth depicted by record', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', hydraulic_radius
;

EXEC sp_addextendedproperty 'MS_Description', 'Cross sectional wetted perimeter at depth depicted by record', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', wetted_perimeter
;

EXEC sp_addextendedproperty 'MS_Description', 'Cross sectional surface width at depth depicted by record', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', surface_width
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated pipe shape', 'Schema', GIS, 'table', PIPE_SHAPES_DATA, 'column', shape_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Provides depth/head to flow curves for pumps', 'Schema', GIS, 'table', PUMP_CURVES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', PUMP_CURVES, 'column', pump_curve_id
;

EXEC sp_addextendedproperty 'MS_Description', 'ID of pump', 'Schema', GIS, 'table', PUMP_CURVES, 'column', pump_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of pump', 'Schema', GIS, 'table', PUMP_CURVES, 'column', pump_name
;

EXEC sp_addextendedproperty 'MS_Description', 'Order of pump curve record', 'Schema', GIS, 'table', PUMP_CURVES, 'column', order_index
;

EXEC sp_addextendedproperty 'MS_Description', 'Curve depth/head', 'Schema', GIS, 'table', PUMP_CURVES, 'column', depth_head
;

EXEC sp_addextendedproperty 'MS_Description', 'Curve flow rate at the specified depth/head', 'Schema', GIS, 'table', PUMP_CURVES, 'column', flow
;

EXEC sp_addextendedproperty 'MS_Description', 'Type of curve being described.  Deprecated.', 'Schema', GIS, 'table', PUMP_CURVES, 'column', pump_type
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', PUMP_CURVES, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', PUMP_CURVES, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', PUMP_CURVES, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', PUMP_CURVES, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', PUMP_CURVES, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Provides pump station operations data ', 'Schema', GIS, 'table', PUMPS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', PUMPS, 'column', pump_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of pump', 'Schema', GIS, 'table', PUMPS, 'column', pump_name
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to NODES. Upstream node ID', 'Schema', GIS, 'table', PUMPS, 'column', us_node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to NODES. Downstream node id.', 'Schema', GIS, 'table', PUMPS, 'column', ds_node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Associate link being modified', 'Schema', GIS, 'table', PUMPS, 'column', link_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Type of pump', 'Schema', GIS, 'table', PUMPS, 'column', pump_type
;

EXEC sp_addextendedproperty 'MS_Description', 'Initial depth of the wetwell', 'Schema', GIS, 'table', PUMPS, 'column', initial_depth
;

EXEC sp_addextendedproperty 'MS_Description', 'Elevation (ft) at which pump turns on', 'Schema', GIS, 'table', PUMPS, 'column', on_elevation
;

EXEC sp_addextendedproperty 'MS_Description', 'Elevation (ft) at which pump turns off', 'Schema', GIS, 'table', PUMPS, 'column', off_elevation
;

EXEC sp_addextendedproperty 'MS_Description', 'Volume of wetwell (constant)', 'Schema', GIS, 'table', PUMPS, 'column', wetwell_volume
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', PUMPS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', PUMPS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', PUMPS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', PUMPS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', PUMPS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Hourly and weekly sanitary flow factors for modeling diurnal changes in baseflow', 'Schema', GIS, 'table', SAN_PATTERNS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key, sanitary pattern Id', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', san_pattern_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of diurnal pattern', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Unknown usage', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', instance
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 0:00-1:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h1
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 1:00-2:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h2
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 2:00-3:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h3
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 3:00-4:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h4
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 4:00-5:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h5
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 5:00-6:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h6
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 6:00-7:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h7
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 7:00-8:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h8
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 8:00-9:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h9
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 9:00-10:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h10
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 10:00-11:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h11
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 11:00-12:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h12
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 12:00-13:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h13
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 13:00-14:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h14
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 14:00-15:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h15
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 15:00-16:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h16
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 16:00-17:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h17
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 17:00-18:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h18
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 18:00-19:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h19
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 19:00-20:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h20
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 20:00-21:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h21
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 21:00-22:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h22
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 22:00-23:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h23
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for 23:00-0:00', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', h24
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for Sunday', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', sunday
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for Monday', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', monday
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for Tuesday', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', tuesday
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for Wednesday', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', wednesday
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for Thursday', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', thursday
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for Friday', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', friday
;

EXEC sp_addextendedproperty 'MS_Description', 'Diurnal factor for Saturday', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', saturday
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', SAN_PATTERNS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Metadata for orifices, weirs, and pumps', 'Schema', GIS, 'table', SPECIAL_LINKS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key, special link ID', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', special_link_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Node from which the special link originates (upstream end)', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Link Id along which the special link will be aligned.', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', to_link_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Sequence ID for a node/link combination that has more than one special link attached.  May not be necessary, as this was used as part of a composite key.', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', to_link_id_index
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to SPECIAL_LINK_TYPES', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', special_link_type
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to TIME_FRAMES', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', time_frame
;

EXEC sp_addextendedproperty 'MS_Description', 'Date at which the special link is valid.   YYYYMMDD format.', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', valid_from_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Data at which the special link is no longer valid. YYYYMMDD format.', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', valid_to_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Permanent Node ID to be used for the downstream end of the special link, for use in modeling', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', special_link_node_model_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'An old key for the special links table.', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', mspeclinkid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'An old key for the special links table.', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', slid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id for associated node forming upstream end of special link', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', node_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of link that the special link is modifying', 'Schema', GIS, 'table', SPECIAL_LINKS, 'column', tomlinkid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Tag-value data structure for providing flexible data entry for pumps, weirs, and orifices', 'Schema', GIS, 'table', SPECIAL_LINKS_DATA
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key, special link data id', 'Schema', GIS, 'table', SPECIAL_LINKS_DATA, 'column', special_link_data_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to SPECIAL_LINKS', 'Schema', GIS, 'table', SPECIAL_LINKS_DATA, 'column', special_link_id
;

EXEC sp_addextendedproperty 'MS_Description', 'The tag of the tag-value pair', 'Schema', GIS, 'table', SPECIAL_LINKS_DATA, 'column', tag_name
;

EXEC sp_addextendedproperty 'MS_Description', 'The text value of the tag-value pair.  Usually only one of text_value or numeric_value is used for any one record.', 'Schema', GIS, 'table', SPECIAL_LINKS_DATA, 'column', text_value
;

EXEC sp_addextendedproperty 'MS_Description', 'Sequence ID for a node/link combination that has more than one special link attached.  May not be necessary, as this was used as part of a composite key.', 'Schema', GIS, 'table', SPECIAL_LINKS_DATA, 'column', to_link_id_index
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', SPECIAL_LINKS_DATA, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', SPECIAL_LINKS_DATA, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', SPECIAL_LINKS_DATA, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', SPECIAL_LINKS_DATA, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', SPECIAL_LINKS_DATA, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'An old key for the special links table.', 'Schema', GIS, 'table', SPECIAL_LINKS_DATA, 'column', mspeclinkid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'An old key for the special links table.', 'Schema', GIS, 'table', SPECIAL_LINKS_DATA, 'column', slid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Storm data, including type and event bounds', 'Schema', GIS, 'table', STORMS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key. Storm ID', 'Schema', GIS, 'table', STORMS, 'column', storm_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Common name for storm', 'Schema', GIS, 'table', STORMS, 'column', name
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to STORM_TYPES', 'Schema', GIS, 'table', STORMS, 'column', type
;

EXEC sp_addextendedproperty 'MS_Description', 'Description of storm', 'Schema', GIS, 'table', STORMS, 'column', description
;

EXEC sp_addextendedproperty 'MS_Description', 'Abbreviation used for filenames related to the storm', 'Schema', GIS, 'table', STORMS, 'column', abbreviation
;

EXEC sp_addextendedproperty 'MS_Description', 'Filename relative to rainfall repository (SAMasterXX\rainfall)', 'Schema', GIS, 'table', STORMS, 'column', filename
;

EXEC sp_addextendedproperty 'MS_Description', 'Beginning date and time of storm for use in setting up simulation', 'Schema', GIS, 'table', STORMS, 'column', start_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Ending date and time of storm for use in setting up simulation', 'Schema', GIS, 'table', STORMS, 'column', end_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Time step interval in minutes', 'Schema', GIS, 'table', STORMS, 'column', time_step_min
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of gages in rainfall file', 'Schema', GIS, 'table', STORMS, 'column', num_gages
;

EXEC sp_addextendedproperty 'MS_Description', 'Used for interface files with two-digit years; leave blank if four-digit year is used', 'Schema', GIS, 'table', STORMS, 'column', start_year_override
;

EXEC sp_addextendedproperty 'MS_Description', 'Used for interface files with two digit years; leave blank if four-digit year is used', 'Schema', GIS, 'table', STORMS, 'column', end_year_override
;

EXEC sp_addextendedproperty 'MS_Description', 'Wet time step', 'Schema', GIS, 'table', STORMS, 'column', wet_time_step
;

EXEC sp_addextendedproperty 'MS_Description', 'Wet-to-dry transition time step', 'Schema', GIS, 'table', STORMS, 'column', wet_to_dry_time_step
;

EXEC sp_addextendedproperty 'MS_Description', 'Dry time step', 'Schema', GIS, 'table', STORMS, 'column', dry_time_step
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', STORMS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', STORMS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', STORMS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', STORMS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', STORMS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Provides weir flow restriction data', 'Schema', GIS, 'table', WEIRS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key, weir ID', 'Schema', GIS, 'table', WEIRS, 'column', weir_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Name of weir', 'Schema', GIS, 'table', WEIRS, 'column', weir_name
;

EXEC sp_addextendedproperty 'MS_Description', 'Upstream node ID, foreign key to NODES', 'Schema', GIS, 'table', WEIRS, 'column', us_node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Downstream node ID, foreign key to NODES.  If empty, then the link_id must not be empty.  If both are not empty, ds_node_id overrides.', 'Schema', GIS, 'table', WEIRS, 'column', ds_node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to LINKS.  Indicates the link along which the weir will be placed.  The link must have its us_node_id match the record''s us_node_id.  If this field is empty, ds_node_id must not be empty.  If both are not empty, ds_node_id overrides.', 'Schema', GIS, 'table', WEIRS, 'column', link_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to WEIR_TYPES', 'Schema', GIS, 'table', WEIRS, 'column', weir_type
;

EXEC sp_addextendedproperty 'MS_Description', 'Crown (capping) elevation over weir.  Above this elevation, the weir will go into surcharge/orifice mode.', 'Schema', GIS, 'table', WEIRS, 'column', crown
;

EXEC sp_addextendedproperty 'MS_Description', 'Crest elevation of weir', 'Schema', GIS, 'table', WEIRS, 'column', crest
;

EXEC sp_addextendedproperty 'MS_Description', 'Length of weir', 'Schema', GIS, 'table', WEIRS, 'column', length
;

EXEC sp_addextendedproperty 'MS_Description', 'Weir coefficient', 'Schema', GIS, 'table', WEIRS, 'column', coefficient
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', WEIRS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', WEIRS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', WEIRS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', WEIRS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', WEIRS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'This is an amalgamation of City of Portland and Metro zoning polygons.  City of Portland zones are used within city boundaries, and a conversion of Metro to City of Portland zones are used outside city boundaries.', 'Schema', GIS, 'table', ASM_ZONING
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key, zoning ID', 'Schema', GIS, 'table', ASM_ZONING, 'column', asm_zoning_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Area of zoning polygon', 'Schema', GIS, 'table', ASM_ZONING, 'column', zone_area
;

EXEC sp_addextendedproperty 'MS_Description', 'City containing zoning object', 'Schema', GIS, 'table', ASM_ZONING, 'column', city
;

EXEC sp_addextendedproperty 'MS_Description', 'perimeter of zoning object', 'Schema', GIS, 'table', ASM_ZONING, 'column', perimeter
;

EXEC sp_addextendedproperty 'MS_Description', 'comprehensive plan object id', 'Schema', GIS, 'table', ASM_ZONING, 'column', cp_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Unknown (full zoning code?)', 'Schema', GIS, 'table', ASM_ZONING, 'column', tmp_zone
;

EXEC sp_addextendedproperty 'MS_Description', 'Overlay code', 'Schema', GIS, 'table', ASM_ZONING, 'column', overlay
;

EXEC sp_addextendedproperty 'MS_Description', 'Comprehensive plan overlay code', 'Schema', GIS, 'table', ASM_ZONING, 'column', cp_overlay
;

EXEC sp_addextendedproperty 'MS_Description', 'Planning district code', 'Schema', GIS, 'table', ASM_ZONING, 'column', planning_district
;

EXEC sp_addextendedproperty 'MS_Description', 'Unknown', 'Schema', GIS, 'table', ASM_ZONING, 'column', hist
;

EXEC sp_addextendedproperty 'MS_Description', 'Unknown', 'Schema', GIS, 'table', ASM_ZONING, 'column', consv
;

EXEC sp_addextendedproperty 'MS_Description', 'Unknown', 'Schema', GIS, 'table', ASM_ZONING, 'column', nrmp
;

EXEC sp_addextendedproperty 'MS_Description', 'Unknown', 'Schema', GIS, 'table', ASM_ZONING, 'column', update_
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if zoning polygon is unincoporated', 'Schema', GIS, 'table', ASM_ZONING, 'column', is_unincorporated
;

EXEC sp_addextendedproperty 'MS_Description', 'Zoning feature ID', 'Schema', GIS, 'table', ASM_ZONING, 'column', zoning_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Comprehensive Plan zoning feature ID', 'Schema', GIS, 'table', ASM_ZONING, 'column', cp_zoning_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Existing conditions zoning code', 'Schema', GIS, 'table', ASM_ZONING, 'column', zone_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Comprehensive plan conditions zoning code', 'Schema', GIS, 'table', ASM_ZONING, 'column', zone_cp
;

EXEC sp_addextendedproperty 'MS_Description', 'Original zone under existing conditons', 'Schema', GIS, 'table', ASM_ZONING, 'column', original_zone_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Original zone under comprehensive plan conditons', 'Schema', GIS, 'table', ASM_ZONING, 'column', original_zone_cp
;

EXEC sp_addextendedproperty 'MS_Description', 'General zoning code', 'Schema', GIS, 'table', ASM_ZONING, 'column', general_zone_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Comprehensive plan general zoning code', 'Schema', GIS, 'table', ASM_ZONING, 'column', general_zone_cp
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', ASM_ZONING, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', ASM_ZONING, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', ASM_ZONING, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', ASM_ZONING, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', ASM_ZONING, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Connects centroids of DSCs to their connection point to the collection system', 'Schema', GIS, 'table', DSC_ZINGERS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key, DSC zinger ID', 'Schema', GIS, 'table', DSC_ZINGERS, 'column', dsc_zinger_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to DSCS', 'Schema', GIS, 'table', DSC_ZINGERS, 'column', dsc_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to LINKS', 'Schema', GIS, 'table', DSC_ZINGERS, 'column', link_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Type of link', 'Schema', GIS, 'table', DSC_ZINGERS, 'column', LinkType
;

EXEC sp_addextendedproperty 'MS_Description', 'Direct Subcatchments (DSCs) describe drainage connections for taxlots. Because taxlots can be served by multiple laterals, taxlots can be split.  This table incorporates both whole and split taxlots.', 'Schema', GIS, 'table', DSCS
;
EXEC sp_addextendedproperty 'MS_Description', 'Original taxlot ID, deprecated', 'Schema', GIS, 'table', DSCS, 'column', parcel_id
;

EXEC sp_addextendedproperty 'MS_Description', 'If this is a divided taxlot (i.e., the DSC is actually part of a larger taxlot), this ID will be larger than 0.  For any divided taxlot, this ID will be unique between all the other divides and greater than 0. Deprecated.', 'Schema', GIS, 'table', DSCS, 'column', divide_id
;

EXEC sp_addextendedproperty 'MS_Description', 'This is an amalgamation of the parcel_id and divide_id, with the divide_id padded to two digits with an additional zero.', 'Schema', GIS, 'table', DSCS, 'column', dsc_id
;

EXEC sp_addextendedproperty 'MS_Description', 'The foreign key to BES'' DISCO database', 'Schema', GIS, 'table', DSCS, 'column', disco_site_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Disco class', 'Schema', GIS, 'table', DSCS, 'column', disco_class
;

EXEC sp_addextendedproperty 'MS_Description', 'The link to which the DSC drains its sanitary flow.', 'Schema', GIS, 'table', DSCS, 'column', san_to_link_id
;

EXEC sp_addextendedproperty 'MS_Description', 'The link to which the DSC drains its storm flow. May be null, indicating all flows drain to the to_san_link_id.', 'Schema', GIS, 'table', DSCS, 'column', storm_to_link_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Pipe Flow Type of sanitary connection', 'Schema', GIS, 'table', DSCS, 'column', san_pipe_flow_type
;

EXEC sp_addextendedproperty 'MS_Description', 'Pipe Flow Type of storm connection', 'Schema', GIS, 'table', DSCS, 'column', storm_pipe_flow_type
;

EXEC sp_addextendedproperty 'MS_Description', 'Calculated; needs to update if san_to_link_id or connection_fraction_from_link_us_node changes, or if connecting san_to_link_id''s dimensions change', 'Schema', GIS, 'table', DSCS, 'column', sewer_crown
;

EXEC sp_addextendedproperty 'MS_Description', 'The distance of the DSC''s sanitary lateral connection from the upstream end of the link referenced by to_san_link_id.', 'Schema', GIS, 'table', DSCS, 'column', conn_frac_from_link_us_node
;

EXEC sp_addextendedproperty 'MS_Description', 'The elevation at which the DSC is considered to be undergoing surface flooding, when compared with the HGL at the connection point to the link referenced by to_san_link_id.', 'Schema', GIS, 'table', DSCS, 'column', flood_reference_elevation
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true indicates that normal sewer levels (i.e., within pipe) will indicate the DSC is undergoing basement backup.  This is due to the flood_reference_elevation being less than 8 ft from the pipe crown.', 'Schema', GIS, 'table', DSCS, 'column', false_basement_backup_risk
;

EXEC sp_addextendedproperty 'MS_Description', 'State property record number', 'Schema', GIS, 'table', DSCS, 'column', state_rno_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Property owner name', 'Schema', GIS, 'table', DSCS, 'column', owner_1
;

EXEC sp_addextendedproperty 'MS_Description', 'Property owner name', 'Schema', GIS, 'table', DSCS, 'column', owner_2
;

EXEC sp_addextendedproperty 'MS_Description', 'Property owner name', 'Schema', GIS, 'table', DSCS, 'column', owner_3
;

EXEC sp_addextendedproperty 'MS_Description', 'Property owner street address', 'Schema', GIS, 'table', DSCS, 'column', owner_address
;

EXEC sp_addextendedproperty 'MS_Description', 'Property owner city', 'Schema', GIS, 'table', DSCS, 'column', owner_city
;

EXEC sp_addextendedproperty 'MS_Description', 'Property owner state', 'Schema', GIS, 'table', DSCS, 'column', owner_state
;

EXEC sp_addextendedproperty 'MS_Description', 'Property owner zip code', 'Schema', GIS, 'table', DSCS, 'column', owner_zip
;

EXEC sp_addextendedproperty 'MS_Description', 'Site address', 'Schema', GIS, 'table', DSCS, 'column', site_address
;

EXEC sp_addextendedproperty 'MS_Description', 'Site city', 'Schema', GIS, 'table', DSCS, 'column', site_city
;

EXEC sp_addextendedproperty 'MS_Description', 'Site state', 'Schema', GIS, 'table', DSCS, 'column', site_state
;

EXEC sp_addextendedproperty 'MS_Description', 'Site zip code', 'Schema', GIS, 'table', DSCS, 'column', site_zip
;

EXEC sp_addextendedproperty 'MS_Description', 'Unknown usage, could possibly delete this', 'Schema', GIS, 'table', DSCS, 'column', flood_reference_elevation_2
;

EXEC sp_addextendedproperty 'MS_Description', 'Indicates property was vacant (as of last update)', 'Schema', GIS, 'table', DSCS, 'column', is_vacant
;

EXEC sp_addextendedproperty 'MS_Description', 'Detailed zoning code for existing conditions', 'Schema', GIS, 'table', DSCS, 'column', zone_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Detailed zoning for buildout conditions', 'Schema', GIS, 'table', DSCS, 'column', zone_cp
;

EXEC sp_addextendedproperty 'MS_Description', 'General zoning code for existing conditions', 'Schema', GIS, 'table', DSCS, 'column', general_zone_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'General zoning code for buildout conditions', 'Schema', GIS, 'table', DSCS, 'column', general_zone_cp
;

EXEC sp_addextendedproperty 'MS_Description', 'Amount of area within DSC that is in a protected environmental zone', 'Schema', GIS, 'table', DSCS, 'column', protected_enviro_zone
;

EXEC sp_addextendedproperty 'MS_Description', 'Fraction (0.0-1.0) of DSC area covered by impervious surfaces for existing conditions.', 'Schema', GIS, 'table', DSCS, 'column', ia_fraction_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Fraction (0.0-1.0) of DSC area covered by impervious surfaces for buildout conditions.', 'Schema', GIS, 'table', DSCS, 'column', ia_fraction_cp
;

EXEC sp_addextendedproperty 'MS_Description', 'Fraction (0.0-1.0) of DSC area covered by impervious surfaces for future conditions.', 'Schema', GIS, 'table', DSCS, 'column', ia_fraction_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Total area covered by the DSC, square feet.', 'Schema', GIS, 'table', DSCS, 'column', total_area
;

EXEC sp_addextendedproperty 'MS_Description', 'Area of the DSC covered by building impervious area for existing conditions.', 'Schema', GIS, 'table', DSCS, 'column', roof_area_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Area of the DSC covered by building impervious area for future conditions.', 'Schema', GIS, 'table', DSCS, 'column', roof_area_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Area of the DSC covered by parking/driveway impervious area for existing conditions.', 'Schema', GIS, 'table', DSCS, 'column', parking_area_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Area of the DSC covered by parking/driveway impervious area for future conditions.', 'Schema', GIS, 'table', DSCS, 'column', parking_area_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Baseflow for existing conditions', 'Schema', GIS, 'table', DSCS, 'column', baseflow_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Baseflow for future conditions', 'Schema', GIS, 'table', DSCS, 'column', baseflow_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Baseflow as specified by the BES sewer design manual', 'Schema', GIS, 'table', DSCS, 'column', baseflow_design_manual
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to GROWTH_STATES', 'Schema', GIS, 'table', DSCS, 'column', growth_state
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true indicates that impervious area should increase to comp plan levels for future (i.e., if the taxlot is in a "planning polygon, meaning a main street traffic zone, a commercial refill area, residential refill area, or a vacant lot.', 'Schema', GIS, 'table', DSCS, 'column', cp_used_for_fu_area_increase
;

EXEC sp_addextendedproperty 'MS_Description', 'Basin ID (as spatially queried from the ASM sewer basin boundaries layer), three-letter abbreviation', 'Schema', GIS, 'table', DSCS, 'column', gis_basin
;

EXEC sp_addextendedproperty 'MS_Description', 'Amount of roof area shunted to inflow controls for existing conditions.', 'Schema', GIS, 'table', DSCS, 'column', ic_roof_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Amount of roof area shunted to inflow controls for future conditions.', 'Schema', GIS, 'table', DSCS, 'column', ic_roof_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Amount of parking/driveway area shunted to inflow controls for existing conditions.', 'Schema', GIS, 'table', DSCS, 'column', ic_parking_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Amount of parking/driveway area shunted to inflow controls for future conditions.', 'Schema', GIS, 'table', DSCS, 'column', ic_parking_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Amount of roof area effectively shunted to inflow controls for existing conditions.  Some inflow controls are not assumed to be 100% effective, and so this value is the actual modeled area that goes to inflow controls.', 'Schema', GIS, 'table', DSCS, 'column', effective_ic_roof_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Amount of parking area effectively shunted to inflow controls for existing conditions.  Some inflow controls are not assumed to be 100% effective, and so this value is the actual modeled area that goes to inflow controls.', 'Schema', GIS, 'table', DSCS, 'column', effective_ic_parking_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Amount of roof area effectively shunted to inflow controls for future conditions.  Some inflow controls are not assumed to be 100% effective, and so this value is the actual modeled area that goes to inflow controls.', 'Schema', GIS, 'table', DSCS, 'column', effective_ic_roof_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Amount of parking area effectively shunted to inflow controls for future conditions.  Some inflow controls are not assumed to be 100% effective, and so this value is the actual modeled area that goes to inflow controls.', 'Schema', GIS, 'table', DSCS, 'column', effective_ic_parking_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to SEWERABILITIES', 'Schema', GIS, 'table', DSCS, 'column', sewerability
;

EXEC sp_addextendedproperty 'MS_Description', 'Null: Default
A: As-built
B: Building plan
P: Plumbing record', 'Schema', GIS, 'table', DSCS, 'column', data_source
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true indicates the DSC has a septic system (septic tank or cesspool)', 'Schema', GIS, 'table', DSCS, 'column', local_treatment
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true indicates DSC has a protected environmental zone intersecting it', 'Schema', GIS, 'table', DSCS, 'column', in_protected_enviro_zone
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true indicates DSC has a basement', 'Schema', GIS, 'table', DSCS, 'column', has_basement
;

EXEC sp_addextendedproperty 'MS_Description', 'Permanent citywide property id', 'Schema', GIS, 'table', DSCS, 'column', property_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', DSCS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', DSCS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', DSCS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', DSCS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', DSCS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated DSC', 'Schema', GIS, 'table', DSCS, 'column', dscid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'old id of sanitary connection link', 'Schema', GIS, 'table', DSCS, 'column', san_to_mlinkid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of storm connection link', 'Schema', GIS, 'table', DSCS, 'column', storm_to_mlinkid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Pipe, channel, ditch, and culvert data', 'Schema', GIS, 'table', LINKS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key', 'Schema', GIS, 'table', LINKS, 'column', link_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Primary key, link ID', 'Schema', GIS, 'table', LINKS, 'column', link_name
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to Hansen/DME link table', 'Schema', GIS, 'table', LINKS, 'column', hansen_compkey
;

EXEC sp_addextendedproperty 'MS_Description', 'Upstream node ID, foreign key to NODES', 'Schema', GIS, 'table', LINKS, 'column', us_node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Downstream node ID, foreign key to NODES', 'Schema', GIS, 'table', LINKS, 'column', ds_node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Pipe shape', 'Schema', GIS, 'table', LINKS, 'column', pipe_shape
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to LINK_TYPES', 'Schema', GIS, 'table', LINKS, 'column', link_type
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to PIPE_FLOW_TYPES', 'Schema', GIS, 'table', LINKS, 'column', pipe_flow_type
;

EXEC sp_addextendedproperty 'MS_Description', 'Length of pipe (horizontal projection)', 'Schema', GIS, 'table', LINKS, 'column', length
;

EXEC sp_addextendedproperty 'MS_Description', 'Diameter of pipe (if circular) or maximum horizontal cross-sectional dimension (other shapes)', 'Schema', GIS, 'table', LINKS, 'column', diameter_or_width_in
;

EXEC sp_addextendedproperty 'MS_Description', 'ignored if circular, otherwise maximum vertical cross-sectional dimension', 'Schema', GIS, 'table', LINKS, 'column', height_in
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to MATERIALS', 'Schema', GIS, 'table', LINKS, 'column', material
;

EXEC sp_addextendedproperty 'MS_Description', 'Upstream depth (rim to invert)', 'Schema', GIS, 'table', LINKS, 'column', us_depth
;

EXEC sp_addextendedproperty 'MS_Description', 'Downstream depth, rim to invert', 'Schema', GIS, 'table', LINKS, 'column', ds_depth
;

EXEC sp_addextendedproperty 'MS_Description', 'Upstream invert elevation', 'Schema', GIS, 'table', LINKS, 'column', us_invert
;

EXEC sp_addextendedproperty 'MS_Description', 'Downstream invert elevation', 'Schema', GIS, 'table', LINKS, 'column', ds_invert
;

EXEC sp_addextendedproperty 'MS_Description', 'As built number', 'Schema', GIS, 'table', LINKS, 'column', as_built_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Date pipe was constructed', 'Schema', GIS, 'table', LINKS, 'column', constructed_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Upstream end x-coordinate', 'Schema', GIS, 'table', LINKS, 'column', us_x_coord
;

EXEC sp_addextendedproperty 'MS_Description', 'Upstream end y-coordinate', 'Schema', GIS, 'table', LINKS, 'column', us_y_coord
;

EXEC sp_addextendedproperty 'MS_Description', 'Downstream end x-coordinate', 'Schema', GIS, 'table', LINKS, 'column', ds_x_coord
;

EXEC sp_addextendedproperty 'MS_Description', 'Downstream end y-coordinate', 'Schema', GIS, 'table', LINKS, 'column', ds_y_coord
;

EXEC sp_addextendedproperty 'MS_Description', 'Average Manning''s roughness for the entire interior of the pipe cross section', 'Schema', GIS, 'table', LINKS, 'column', roughness
;

EXEC sp_addextendedproperty 'MS_Description', 'Deprecated.  Always "EX"', 'Schema', GIS, 'table', LINKS, 'column', time_frame
;

EXEC sp_addextendedproperty 'MS_Description', 'Merged Record Data
\\CASSIO\Modeling\Model_Programs\Emgaats\MRDIIb2\Doc

0 = not processed
1 = Resolved (Mapped DME links found whose upstream and downstream nodes match exactly with Hansen)
2 = Bridge edge nodes (edge nodes occurred historically at quartersection edges)
3 = Resolvable via existing map objects (Link not in the DME, but whose upstream and downstream nodes belong to two different DME links that have flag = 1)
4 = Hanging (Link not in the DME, but exactly one of the endpoints of the link is on a DME link that has flag =1. The dangling end must be confirmed geographically)
7 = Resolvable via existing map objects and Hansen network trace (Link not in the DME, but which are part of a set of two or more unmapped Hansen segments whose ultimate upstream and downstream nodes belong to at least one and up to two DME links that have SynthFlag = 1. The middle nodes and segments of the set must be confirmed geographically because they are not anchored to any Type 1 pipes)
9 = Unresolved (Link not in the DME, and ultimately untraceable via Hansen to a DME link that has SynthFlag = 1. Other research needs to be done to confirm alignment and location)', 'Schema', GIS, 'table', LINKS, 'column', mrd_result
;

EXEC sp_addextendedproperty 'MS_Description', 'Eight character field used by Profiler to identify source of changes to certain attributes

1st position = Dimensions
2nd position = Shape
3rd position = Material
4th position = IE Up
5th position = IE Down
6th position = Rim
7th position = Length
8th position = Synth

For each position, use the following codes

? = Unknown
A = As-builts
B = Observation
C = Contour
D = Depth Down
E = DEM
F = Facility maps
G = Parallel ground surface
H = Hansen
I = Interpolate
K = Match crown
L = Field check
M = Model maps
O = Other
P = Predesign
R = Match springline
S = Minimum pipe slope
T = Same node transfer
U = Default value
V = Survey
W = WAG
X = Extend slope
Y = BoP Stream Lines
Z = LiDAR', 'Schema', GIS, 'table', LINKS, 'column', data_quality
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to HANSEN_SERVICE_CODES', 'Schema', GIS, 'table', LINKS, 'column', hansen_service_status
;

EXEC sp_addextendedproperty 'MS_Description', 'Not really used.  Begin date of asset''s anticipated usage for timeframe purposes.  YYYYMMDD format.', 'Schema', GIS, 'table', LINKS, 'column', valid_from_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Not really used.  End date of asset''s anticipated usage for timeframe purposes.  YYYYMMDD format.', 'Schema', GIS, 'table', LINKS, 'column', valid_to_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Not used', 'Schema', GIS, 'table', LINKS, 'column', cad_key
;

EXEC sp_addextendedproperty 'MS_Description', 'Not used in master links. Message if us_node_id or ds_node_id do not match license plate format.', 'Schema', GIS, 'table', LINKS, 'column', audit_node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Not used in master links.  Message if the link appears to be a duplicate, either spatial or database', 'Schema', GIS, 'table', LINKS, 'column', audit_dups
;

EXEC sp_addextendedproperty 'MS_Description', 'Not used in master links. Indicates endpoints are not snapped to its end nodes.', 'Schema', GIS, 'table', LINKS, 'column', audit_spatial
;

EXEC sp_addextendedproperty 'MS_Description', 'Not used in master links.  True indicates no tests failed.', 'Schema', GIS, 'table', LINKS, 'column', audit_passed
;

EXEC sp_addextendedproperty 'MS_Description', 'Not used in master. Date and time link was processed.', 'Schema', GIS, 'table', LINKS, 'column', audit_processed_timestamp
;

EXEC sp_addextendedproperty 'MS_Description', 'Design flow of the pipe using Manning''s equation (Q = 1.486/n*AR^(2/3)*S^(1/2))', 'Schema', GIS, 'table', LINKS, 'column', design_flow
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to DME objects', 'Schema', GIS, 'table', LINKS, 'column', dme_global_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', LINKS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', LINKS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', LINKS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', LINKS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', LINKS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated link', 'Schema', GIS, 'table', LINKS, 'column', mlinkid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of upstream node', 'Schema', GIS, 'table', LINKS, 'column', us_node_name_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'old id of downstream node', 'Schema', GIS, 'table', LINKS, 'column', ds_node_name_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old name of pipe shape', 'Schema', GIS, 'table', LINKS, 'column', pipe_shape_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Manhole and node data', 'Schema', GIS, 'table', NODES
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key, node_id', 'Schema', GIS, 'table', NODES, 'column', node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Primary key.  Node id.', 'Schema', GIS, 'table', NODES, 'column', node_name
;

EXEC sp_addextendedproperty 'MS_Description', 'X-coordinate of node', 'Schema', GIS, 'table', NODES, 'column', x_coord
;

EXEC sp_addextendedproperty 'MS_Description', 'Y-coordinate of node', 'Schema', GIS, 'table', NODES, 'column', y_coord
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to NODE_TYPES', 'Schema', GIS, 'table', NODES, 'column', node_type
;

EXEC sp_addextendedproperty 'MS_Description', 'Ground or rim elevation', 'Schema', GIS, 'table', NODES, 'column', ground_elevation
;

EXEC sp_addextendedproperty 'MS_Description', 'Currently unused. Boolean; true if node has special features (storage, outfall)', 'Schema', GIS, 'table', NODES, 'column', has_special_node
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if link has special features modifying it (pumps, weirs, and/or orifices)', 'Schema', GIS, 'table', NODES, 'column', has_special_link
;

EXEC sp_addextendedproperty 'MS_Description', 'Virtual raingage ID.  Same as quartersection underlying the node''s position.', 'Schema', GIS, 'table', NODES, 'column', virtual_gage_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to the DME nodes table.', 'Schema', GIS, 'table', NODES, 'column', dme_global_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Source of data for node', 'Schema', GIS, 'table', NODES, 'column', data_quality
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', NODES, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', NODES, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', NODES, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', NODES, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', NODES, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Permanent and anticipated parking area inflow controls', 'Schema', GIS, 'table', PARKING_TARGETS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key. Parking target ID', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', parking_target_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Used for identifying a parking control ID for any developed alternatives', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', model_alt_parking_target_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Carried over from DSCS', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', parcel_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Carried over from DSCS', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', divide_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Carried over from DSCS', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', dsc_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Parking area under existing conditions that have already been assigned to inflow control. Carried over from DSCS.', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', area_under_inflow_control_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Total parking area under existing conditions', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', parking_area_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'For the control in question, the amount of parking area intended to be controlled', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', target_area
;

EXEC sp_addextendedproperty 'MS_Description', 'The upstream node of the link to which the DSC involved with the parking inflow control is connected', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', node_id_dsc
;

EXEC sp_addextendedproperty 'MS_Description', 'Draining node of the overlying SSC in which the parking control lies', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', node_id_ssc
;

EXEC sp_addextendedproperty 'MS_Description', 'The actual node to be used for connecting runoff from the control.  If the parking area has inlets, this is equal to node_id_dsc; otherwise, this is equal to node_id_ssc', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true indicates the control was evaluated and confirmed by engineers in the field', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', field_evaluated
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true indicates the parking area involved has inlets', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', has_inlets
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of available parking spaces', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', num_parking_spaces
;

EXEC sp_addextendedproperty 'MS_Description', 'Percentage of parking lot occupied at time of observation', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', observed_parking_usage_pct
;

EXEC sp_addextendedproperty 'MS_Description', 'MULTIPLE = has multiple drainage cells
UNIFORM = has a single, uniform drainage pattern', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', drainage_pattern_type
;

EXEC sp_addextendedproperty 'MS_Description', 'Same as node_id. Deprecated.', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', node_id_2
;

EXEC sp_addextendedproperty 'MS_Description', 'Determines if the parking area is controllable. Foreign key to PLACEMENT_TYPES', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', placement_possibility
;

EXEC sp_addextendedproperty 'MS_Description', 'Fraction (0..1) of the parking area that can be controlled', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', fraction_controllable
;

EXEC sp_addextendedproperty 'MS_Description', 'According to field survey, the parking control in question would be. Foreign key to IC_TARGET_DIFFICULTIES.', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', difficulty
;

EXEC sp_addextendedproperty 'MS_Description', 'Unknown purpose', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', parking_eff_disc
;

EXEC sp_addextendedproperty 'MS_Description', 'Observation notes', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', comments
;

EXEC sp_addextendedproperty 'MS_Description', 'Fraction (0..1) of parking area controlled by drywells.', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', fraction_to_drywell
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true when used inside a model indicates that the control should be included in deployment files', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', build_ic_for_model
;

EXEC sp_addextendedproperty 'MS_Description', 'Origination of the parking control.  Usually given in the form ProjectNumber_Basin.', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', source
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to IC_TARGET_CONSTRUCTED_STATUSES', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', constructed_status
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table; conversion necessary from original (varchar(17) YYYYMMDD ->datetime)', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated parking target', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', icid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old secondary id of associated parking target (used for reporting)', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', picid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated parcel', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', parcelid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated divide of parcel', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', divideid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated DSC', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', dscid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'The upstream node of the link to which the DSC involved with the parking inflow control is connected (temporary)', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', nodeid_dsc_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Draining node of the overlying SSC in which the parking control lies (temporary)', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', nodeid_ssc_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'The actual node to be used for connecting runoff from the control.  If the parking area has inlets, this is equal to node_id_dsc; otherwise, this is equal to node_id_ssc (temporary)', 'Schema', GIS, 'table', PARKING_TARGETS, 'column', nodeid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Permanent and anticipated parking area inflow controls', 'Schema', GIS, 'table', ROOF_TARGETS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key. Roof target ID', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', roof_target_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Used for identifying a roof control ID for any developed alternatives', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', model_alt_roof_target_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Carried over from DSCS', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', parcel_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Carried over from DSCS', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', divide_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Carried over from DSCS', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', dsc_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Node to which the parcel drains', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Roof area under existing conditions that have already been assigned to inflow controls. Carried over from DSCS.', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', area_under_inflow_control_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Total roof area under existing conditions', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', roof_area_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; indicates the presence of downspouts', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', has_external_downspouts
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of observed downspouts.  Should be equal to ', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', num_dspouts
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of downspouts currently disconnected to vegetation', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', num_dspouts_to_veg_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of downspouts currently disconnected to the street', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', num_dspouts_to_street_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of downspouts currently disconnected to stormwater planter', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', num_dspouts_to_planter_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of downspouts currently disconnected to bioretention facility', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', num_dspouts_to_bioretention_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of downspouts currently disconnected to drywell', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', num_dspouts_to_drywell_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of downspouts currently disconnected to ecoroofs', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', num_dspouts_to_ecoroof_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of downspouts that can be disconnected to vegetation', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', num_dspouts_to_veg_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of downspouts that can be disconnected to the street', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', num_dspouts_to_street_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of downspouts that can be disconnected to stormwater planter', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', num_dspouts_to_planter_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of downspouts that can be disconnected to bioretention', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', num_dspouts_to_bioretention_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of downspouts that can be disconnected to drywell', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', num_dspouts_to_drywell_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of downspouts that can be disconnected to ecoroof', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', num_dspouts_to_ecoroof_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Number of downspouts that are deemed uncontrollable', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', num_dspouts_uncontrollable_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if landscaping is available onsite to accommodate control facility', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', is_landscape_available
;

EXEC sp_addextendedproperty 'MS_Description', 'Fraction (0..1) of roof that currently drain to external downspouts', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', frac_drained_to_ext_dspouts_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'According to field survey, the roof control in question would be. Foreign key to IC_TARGET_DIFFICULTIES.', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', difficulty
;

EXEC sp_addextendedproperty 'MS_Description', 'Unknown purpose', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', roof_eff_disc
;

EXEC sp_addextendedproperty 'MS_Description', 'Observation notes', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', comments
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if a stormwater planter is possible on the site', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', planters_ok
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true indicates bioretention facility is possible on the site', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', bioretention_ok
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true when used inside a model indicates that the control should be included in deployment files', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', build_ic_for_model
;

EXEC sp_addextendedproperty 'MS_Description', 'Origination of the parking control.  Usually given in the form ProjectNumber_Basin.', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', source
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to IC_TARGET_CONSTRUCTED_STATUSES', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', constructed_status
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table; conversion necessary from original (varchar(17) YYYYMMDD ->datetime)', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated roof target', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', icid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old secondary id of associated roof target (used for reporting)', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', ricid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated parcel', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', parcelid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated divide of parcel', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', divideid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated DSC', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', dscid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of draining node for roof target', 'Schema', GIS, 'table', ROOF_TARGETS, 'column', ngtoroof_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Primary key, SSC zinger ID', 'Schema', GIS, 'table', SSC_ZINGERS, 'column', ssc_zinger_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to SSCS', 'Schema', GIS, 'table', SSC_ZINGERS, 'column', ssc_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to NODES (for draining node)', 'Schema', GIS, 'table', SSC_ZINGERS, 'column', node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Surface subcatchments (SSCs) data providing hydrologic characteristics', 'Schema', GIS, 'table', SSCS
;
EXEC sp_addextendedproperty 'MS_Description', 'SSC ID. Primary key', 'Schema', GIS, 'table', SSCS, 'column', ssc_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Draining node for existing conditions', 'Schema', GIS, 'table', SSCS, 'column', node_id_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Draining node for future conditions', 'Schema', GIS, 'table', SSCS, 'column', node_id_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Alternate draining node id for both existing and future conditions. Commonly used for sumped subcatchments that still need to be traced into models, and indicates where the subatchment would have drained if the sump were not built.', 'Schema', GIS, 'table', SSCS, 'column', alt_trace_node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Average slope of the SSC', 'Schema', GIS, 'table', SSCS, 'column', slope
;

EXEC sp_addextendedproperty 'MS_Description', 'The assumed maximum length of flow from the most upstream point to the draining node', 'Schema', GIS, 'table', SSCS, 'column', flow_length
;

EXEC sp_addextendedproperty 'MS_Description', 'Difference in elevation between the highest and lowest points within the SSC.  Used for average slope calculation.', 'Schema', GIS, 'table', SSCS, 'column', elevation_difference
;

EXEC sp_addextendedproperty 'MS_Description', 'Average Manning''s roughness coefficient for the pervious portions of the SSC', 'Schema', GIS, 'table', SSCS, 'column', pervious_roughness
;

EXEC sp_addextendedproperty 'MS_Description', 'Average Manning''s roughness coefficient for the impervious portions of the SSC', 'Schema', GIS, 'table', SSCS, 'column', impervious_roughness
;

EXEC sp_addextendedproperty 'MS_Description', 'Average depth of storage/abstraction within the impervious portions of the SSC', 'Schema', GIS, 'table', SSCS, 'column', impervious_storage_depth_in
;

EXEC sp_addextendedproperty 'MS_Description', 'Average depth of storage/abstraction within the pervious portions of the SSC', 'Schema', GIS, 'table', SSCS, 'column', pervious_storage_depth_in
;

EXEC sp_addextendedproperty 'MS_Description', 'Green-Ampt infiltration parameter.  Average capillary suction.', 'Schema', GIS, 'table', SSCS, 'column', average_capillary_suction_in
;

EXEC sp_addextendedproperty 'MS_Description', 'Green-Ampt infiltration parameter.  Saturated hydraulic conductivity (depth/time units).', 'Schema', GIS, 'table', SSCS, 'column', satur_hydraulic_cond_inhr
;

EXEC sp_addextendedproperty 'MS_Description', 'Green-Ampt infiltration parameter.  Initial moisture deficit (fraction).', 'Schema', GIS, 'table', SSCS, 'column', initial_moisture_deficit
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if the subcatchment goes to a sump in existing conditions.', 'Schema', GIS, 'table', SSCS, 'column', is_sumped_ex
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if the subcatchment goes to a sump in future conditions.', 'Schema', GIS, 'table', SSCS, 'column', is_sumped_fu
;

EXEC sp_addextendedproperty 'MS_Description', 'Area of the SSC.', 'Schema', GIS, 'table', SSCS, 'column', area_ac
;

EXEC sp_addextendedproperty 'MS_Description', 'Amount of area with pavement in the SSC', 'Schema', GIS, 'table', SSCS, 'column', pavement_area_ac
;

EXEC sp_addextendedproperty 'MS_Description', 'Amount of trees covering pavement area.  Cannot be larger than pavement_area.', 'Schema', GIS, 'table', SSCS, 'column', tree_over_pave_area_ac
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true if subcatchment should be updated (used during ssc processing)', 'Schema', GIS, 'table', SSCS, 'column', needs_update
;

EXEC sp_addextendedproperty 'MS_Description', 'Area of sidewalks for existing conditions, cannot be greater than pavement area', 'Schema', GIS, 'table', SSCS, 'column', sidewalk_area_ex_ac
;

EXEC sp_addextendedproperty 'MS_Description', 'Area of sidewalks (only if part of non-commercial/industrial zone). Not used in impervious area calculations.', 'Schema', GIS, 'table', SSCS, 'column', sidewalk_area_other_ex_ac
;

EXEC sp_addextendedproperty 'MS_Description', 'Sidewalk effectiveness factor for calibration', 'Schema', GIS, 'table', SSCS, 'column', sidewalk_factor
;

EXEC sp_addextendedproperty 'MS_Description', 'Area of sidewalks for future conditions, cannot be greater than pavement area', 'Schema', GIS, 'table', SSCS, 'column', sidewalk_area_fu_ac
;

EXEC sp_addextendedproperty 'MS_Description', 'Right of way impervious area for future conditions', 'Schema', GIS, 'table', SSCS, 'column', right_of_way_area_fu_ac
;

EXEC sp_addextendedproperty 'MS_Description', 'Right of way impervious area for future conditions in non-commercial/industrial areas', 'Schema', GIS, 'table', SSCS, 'column', right_of_way_area_other_fu_ac
;

EXEC sp_addextendedproperty 'MS_Description', 'Indicates the table name of the data source used to append the subcatchment', 'Schema', GIS, 'table', SSCS, 'column', data_source
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', SSCS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', SSCS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', SSCS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table', 'Schema', GIS, 'table', SSCS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', SSCS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated SSC', 'Schema', GIS, 'table', SSCS, 'column', surfscid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of draining node for existing conditions', 'Schema', GIS, 'table', SSCS, 'column', node_name_ex_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of draining node for future conditions', 'Schema', GIS, 'table', SSCS, 'column', node_name_fu_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of alternate tracing node', 'Schema', GIS, 'table', SSCS, 'column', alt_trace_node_name_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Permanent and anticipated street (right-of-way) inflow controls', 'Schema', GIS, 'table', STREET_TARGETS
;
EXEC sp_addextendedproperty 'MS_Description', 'Primary key. Street target ID', 'Schema', GIS, 'table', STREET_TARGETS, 'column', street_target_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Used for identifying a street control ID for any developed alternatives', 'Schema', GIS, 'table', STREET_TARGETS, 'column', model_alt_street_target_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to NODES', 'Schema', GIS, 'table', STREET_TARGETS, 'column', node_id
;

EXEC sp_addextendedproperty 'MS_Description', 'SSC id of subcatchment draining to street control', 'Schema', GIS, 'table', STREET_TARGETS, 'column', ssc_id
;

EXEC sp_addextendedproperty 'MS_Description', 'Foreign key to PLACEMENT_TYPES', 'Schema', GIS, 'table', STREET_TARGETS, 'column', placement_possibility
;

EXEC sp_addextendedproperty 'MS_Description', 'Observation notes', 'Schema', GIS, 'table', STREET_TARGETS, 'column', comments
;

EXEC sp_addextendedproperty 'MS_Description', 'CE = Curb extension
SP = Sidewalk planter
VV = Vortex valve
PP = Pervious pavement', 'Schema', GIS, 'table', STREET_TARGETS, 'column', control_type
;

EXEC sp_addextendedproperty 'MS_Description', 'Impervious area in subcatchment draining to street control', 'Schema', GIS, 'table', STREET_TARGETS, 'column', street_ia
;

EXEC sp_addextendedproperty 'MS_Description', 'Assumed maximum flowrate (cfs) of the flow restrictor or downstream release from curb extension. Used to set orifice area. For planter-type facilities, constant value of 0.087 is used as orifice area. For non-planter facilities, orifice area is 12% of the flow control.', 'Schema', GIS, 'table', STREET_TARGETS, 'column', max_release_flow
;

EXEC sp_addextendedproperty 'MS_Description', 'Text of the nearest intersection adjacent to the street control', 'Schema', GIS, 'table', STREET_TARGETS, 'column', street_intersection
;

EXEC sp_addextendedproperty 'MS_Description', 'Location of the street control with respect to the street intersection. NE, NW, SW, and SE are the most common values.  Others include N, W, S, E if the street control is placed mid-block.', 'Schema', GIS, 'table', STREET_TARGETS, 'column', street_corner
;

EXEC sp_addextendedproperty 'MS_Description', 'First street name in street_intersection', 'Schema', GIS, 'table', STREET_TARGETS, 'column', street_1
;

EXEC sp_addextendedproperty 'MS_Description', 'Used only if a single facility is used for each inlet. Amount of street 1''s drainage area going to the facility.', 'Schema', GIS, 'table', STREET_TARGETS, 'column', street_1_area
;

EXEC sp_addextendedproperty 'MS_Description', 'Used only if a single facility is used for each inlet. Amount of curb extension volume on street 1.', 'Schema', GIS, 'table', STREET_TARGETS, 'column', street_1_curb_ext_volume
;

EXEC sp_addextendedproperty 'MS_Description', 'No longer used', 'Schema', GIS, 'table', STREET_TARGETS, 'column', street_1_curb_ext_flow
;

EXEC sp_addextendedproperty 'MS_Description', 'Second street name in street_intersection', 'Schema', GIS, 'table', STREET_TARGETS, 'column', street_2
;

EXEC sp_addextendedproperty 'MS_Description', 'Used only if a single facility is used for each inlet. Amount of street 2''s drainage area going to the facility.', 'Schema', GIS, 'table', STREET_TARGETS, 'column', street_2_area
;

EXEC sp_addextendedproperty 'MS_Description', 'Used only if a single facility is used for each inlet. Amount of curb extension volume on street 2.', 'Schema', GIS, 'table', STREET_TARGETS, 'column', street_2_curb_ext_volume
;

EXEC sp_addextendedproperty 'MS_Description', 'No longer used', 'Schema', GIS, 'table', STREET_TARGETS, 'column', street_2_curb_ext_flow
;

EXEC sp_addextendedproperty 'MS_Description', 'Impervious area within surface subcatchment that can drain to vortex valve.  Usually = street_ia.', 'Schema', GIS, 'table', STREET_TARGETS, 'column', orifice_ia
;

EXEC sp_addextendedproperty 'MS_Description', 'Impervious area within surface subcatchment that can drain to a curb extension, sidewalk planter, or the like.  Equal to street_ia', 'Schema', GIS, 'table', STREET_TARGETS, 'column', curb_ext_area
;

EXEC sp_addextendedproperty 'MS_Description', 'Volume of available ponding storage around the inlet without exceeding curb height. Calculated by determining the pond area (to a depth of 4 inches) and multiplying by 1/3 (prismatic volume). XPSWMM uses this field to set facility size.', 'Schema', GIS, 'table', STREET_TARGETS, 'column', ponding_volume
;

EXEC sp_addextendedproperty 'MS_Description', 'Volume of curb extension or sidewalk planter defined as the cross-sectional area of basin times the largest possible length. XPSWMM uses this field to set facility size.', 'Schema', GIS, 'table', STREET_TARGETS, 'column', curb_ext_volume
;

EXEC sp_addextendedproperty 'MS_Description', 'Physical dimensions of facility and constraints.', 'Schema', GIS, 'table', STREET_TARGETS, 'column', comments_2
;

EXEC sp_addextendedproperty 'MS_Description', 'c = catchment swale (curb extension, sidewalk planter, etc.)
p = porous pavement
v = vortex valve', 'Schema', GIS, 'table', STREET_TARGETS, 'column', type_code
;

EXEC sp_addextendedproperty 'MS_Description', 'Concatenation of node_id, type_code, and street_corner.  Used for model deployment.', 'Schema', GIS, 'table', STREET_TARGETS, 'column', xpswmm_name
;

EXEC sp_addextendedproperty 'MS_Description', 'X-coordinate of street target', 'Schema', GIS, 'table', STREET_TARGETS, 'column', x_coord
;

EXEC sp_addextendedproperty 'MS_Description', 'Y-coordinate of street target', 'Schema', GIS, 'table', STREET_TARGETS, 'column', y_coord
;

EXEC sp_addextendedproperty 'MS_Description', 'Boolean; true when used inside a model indicates that the control should be included in deployment files', 'Schema', GIS, 'table', STREET_TARGETS, 'column', build_ic_for_model
;

EXEC sp_addextendedproperty 'MS_Description', 'Origination of the parking control.  Usually given in the form ProjectNumber_Basin.', 'Schema', GIS, 'table', STREET_TARGETS, 'column', source
;

EXEC sp_addextendedproperty 'MS_Description', '0 = Does not meet any of the states below
1 = Already constructed, using standard Stormwater Management Manual assumptions for facility volume
2 = Already constructed, using design/field data for facility volume
3 = To be constructed by 2011, uses Stormwater Management Manual for facility volume
4 = To be constructed by 2011, uses design/field data for facility volume', 'Schema', GIS, 'table', STREET_TARGETS, 'column', constructed_status
;

EXEC sp_addextendedproperty 'MS_Description', 'Free form, indicates source of modifications to record', 'Schema', GIS, 'table', STREET_TARGETS, 'column', edited_by
;

EXEC sp_addextendedproperty 'MS_Description', 'Reason edit was performed', 'Schema', GIS, 'table', STREET_TARGETS, 'column', edit_reason
;

EXEC sp_addextendedproperty 'MS_Description', 'Status of record, in terms of usability for further analysis and general state of data', 'Schema', GIS, 'table', STREET_TARGETS, 'column', status
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was appended to table

Conversion necessary from original (varchar(17) YYYYMMDD ->datetime)', 'Schema', GIS, 'table', STREET_TARGETS, 'column', append_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Date record was modified by edited_by', 'Schema', GIS, 'table', STREET_TARGETS, 'column', edit_date
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of draining node', 'Schema', GIS, 'table', STREET_TARGETS, 'column', ngtostreet_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated SSC', 'Schema', GIS, 'table', STREET_TARGETS, 'column', surfscid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old id of associated street target', 'Schema', GIS, 'table', STREET_TARGETS, 'column', icid_deprecated
;

EXEC sp_addextendedproperty 'MS_Description', 'Old secondary id of associated street target (used for reporting)', 'Schema', GIS, 'table', STREET_TARGETS, 'column', sicid_deprecated
;
