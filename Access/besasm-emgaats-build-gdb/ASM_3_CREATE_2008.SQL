--   Generated by Enterprise Architect Version 8.0.864
--   Created On : Monday, 28 March, 2011 
--   DBMS       : SQL Server 2005 
--   -------------------------------------------------- 

USE ASM_MASTER_RPT_SDE
;
--  Create Tables 
CREATE TABLE GIS.ASSUMPTION_CODES ( 
	assumption_code_id varchar(4) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of assumption code 
	description varchar(max)    --  Description of assumption code 
)
;

CREATE TABLE GIS.DATA_SOURCES ( 
	data_source_id varchar(1) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of data source 
	description varchar(max)    --  Description of data source 
)
;

CREATE TABLE GIS.DETAILED_ZONES ( 
	detailed_zone_id varchar(5) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of detailed zone 
	zone_id varchar(5),    --  Associated general zone for detailed zone 
	description varchar(max)    --  Description of detailed zone 
)
;

CREATE TABLE GIS.DISCO_CLASSES ( 
	disco_class_id varchar(1) NOT NULL,    --  Primary key 
	name varchar(50),    --  Name of DISCO class 
	description varchar(max)    --  Description of DISCO class 
)
;

CREATE TABLE GIS.DSC_DATA_SOURCES ( 
	name varchar(1) NOT NULL,    --  Primary key and name of DSC data source 
	description varchar(max)    --  Description of source quality (DSC data source) 
)
;

CREATE TABLE GIS.GROWTH_STATES ( 
	growth_state_id int NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of growth state 
	description varchar(max)    --  Description of growth state 
)
;

CREATE TABLE GIS.HANSEN_SERVICE_CODES ( 
	hansen_service_code_id varchar(6) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of Hansen service code 
	description varchar(max)    --  Description of hansen service code 
)
;

CREATE TABLE GIS.IC_TARGET_CONSTRUCTED_STATUSES ( 
	ic_target_constructed_status_id int NOT NULL,    --  Primary key 
	name varchar(50),    --  Name of constructed status code 
	description varchar(max)    --  Description of constructed status code 
)
;

CREATE TABLE GIS.IC_TARGET_DIFFICULTIES ( 
	ic_target_difficulty_id int NOT NULL,    --  Primary key 
	name varchar(50),    --  Name of inflow control target difficulty 
	description varchar(max)    --  Description of inflow control target difficulty 
)
;

CREATE TABLE GIS.IMPERVIOUS_TYPES ( 
	impervious_type_id varchar(1) NOT NULL,    --  Primary key 
	name varchar(20) NOT NULL,    --  Name of impervious type 
	description varchar(max)    --  Description of impervious type 
)
;

CREATE TABLE GIS.LINK_TYPES ( 
	link_type_id varchar(2) NOT NULL,    --  Primary key 
	pipe_flow_type_id varchar(1),    --  Type of flow associated with link type 
	name varchar(50) NOT NULL,    --  Name of link type 
	description varchar(max)    --  Description of link type 
)
;

CREATE TABLE GIS.MATERIALS ( 
	material_id varchar(6) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of material 
	description varchar(max)    --  Description of material 
)
;

CREATE TABLE GIS.NODE_TYPES ( 
	node_type_id varchar(4) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of node type 
	description varchar(max)    --  Description of node type 
)
;

CREATE TABLE GIS.ORIFICE_SHAPES ( 
	orifice_shape_id varchar(1) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of orifice shape 
	description varchar(max)    --  Description of orifice shape 
)
;

CREATE TABLE GIS.ORIFICE_TYPES ( 
	orifice_type_id varchar(2) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of orifice type 
	description varchar(max)    --  Description of orifice type 
)
;

CREATE TABLE GIS.PIPE_FLOW_TYPES ( 
	pipe_flow_type_id varchar(1) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of pipe flow type 
	description varchar(max)    --  Description of pipe flow type 
)
;

CREATE TABLE GIS.PLACEMENT_TYPES ( 
	placement_type_id varchar(1) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of placement type 
	description varchar(max)    --  Description of placement type 
)
;

CREATE TABLE GIS.PUMP_TYPES ( 
	pump_type_id int NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of pump type 
	description varchar(max)    --  Description of pump type 
)
;

CREATE TABLE GIS.SEWERABILITIES ( 
	sewerability_id int NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of sewerability code 
	description varchar(max)    --  Description of sewerability code 
)
;

CREATE TABLE GIS.SPECIAL_LINK_TYPES ( 
	special_link_type_id varchar(2) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of special link type 
	description varchar(max)    --  Description of special link type 
)
;

CREATE TABLE GIS.STATUSES ( 
	status_id varchar(3) NOT NULL,    --  Primary key, status ID 
	description varchar(100)    --  Description of status 
)
;

CREATE TABLE GIS.STORM_TYPES ( 
	storm_type_id varchar(1) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of storm type 
	description varchar(max)    --  Description of storm type 
)
;

CREATE TABLE GIS.STREET_TARGET_TYPES ( 
	street_target_type_id varchar(6) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of street target type 
	description varchar(max)    --  Description of street target type 
)
;

CREATE TABLE GIS.TIME_FRAMES ( 
	time_frame_id varchar(2) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of time frame 
	description varchar(max)    --  Description of time frame 
)
;

CREATE TABLE GIS.WEIR_TYPES ( 
	weir_type_id varchar(2) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of weir type 
	description varchar(max)    --  Description of weir type 
)
;

CREATE TABLE GIS.ZONES ( 
	zone_id varchar(5) NOT NULL,    --  Primary key 
	name varchar(50) NOT NULL,    --  Name of general zoning code 
	description varchar(max)    --  Description of general zoning code 
)
;

CREATE TABLE GIS.CROSS_SECTIONS ( 
	cross_section_id int NOT NULL,    --  Primary key, cross section id 
	link_id int,    --  Foreign key to LINKS 
	roughness_main numeric(6,5) DEFAULT 0.03,    --  Manning's roughness for main channel 
	roughness_left numeric(6,5) DEFAULT 0.05,    --  Manning's roughness for left bank (downstream facing) 
	roughness_right numeric(6,5) DEFAULT 0.05,    --  Manning's roughness for right bank (downstream facing) 
	station_left numeric(10,2),    --  Station at which left bank begins (0 is at very left end of the cross section, downstream facing) 
	station_right numeric(10,2),    --  Station at which right bank begins (0 is at very left end of the cross section, downstream facing) 
	length_factor_left numeric(6,5) DEFAULT 1,    --  Length factor for left bank (downstream facing) 
	length_factor_right numeric(6,5) DEFAULT 1,    --  Length factor for right bank (downstream facing) 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended to table 
	edit_date datetime,    --  Date record was modified by edited_by 
	mst_xsections_id_deprecated int,    --  Old id for cross section 
	mlinkid_deprecated int    --  Old id for associated link 
)
;

CREATE TABLE GIS.CROSS_SECTIONS_DATA ( 
	cross_section_data_id int NOT NULL,    --  Primary key, cross section data id 
	cross_section_id int,    --  Foreign key to CROSS_SECTIONS 
	order_index int DEFAULT 1,    --  Order of data for a cross section datum 
	station numeric(10,2),    --  Station coordinate of datum 
	elevation numeric(7,2),    --  Elevation coordinate of datum 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended to table 
	edit_date datetime,    --  Date record was modified by edited_by 
	mst_xsection_dat_id_deprecated int,    --  Old id for cross section data 
	mst_xsections_id_deprecated int    --  old id for associated cross section 
)
;

CREATE TABLE GIS.FIXED_FLOOR_ELEVATIONS ( 
	ffe_id int NOT NULL,    --  Primary key, FFE Id 
	dsc_id int,    --  DSC Id 
	address varchar(75),    --  Address of site 
	rno varchar(20),    --  Property number tax record 
	fixed_floor_elevation numeric(7,2),    --  Elevation of first floor 
	has_no_basement int,    --  Boolean; true if property has no evidence of basement 
	survey_date datetime,    --  Date of FFE survey 
	comment varchar(max),    --  General comments on record 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was added 
	edit_date datetime,    --  Date record was modified by edited_by 
	dscid_deprecated int    --  Old id of associated DSC 
)
;

CREATE TABLE GIS.IC_DISCOS ( 
	ic_disco_id int NOT NULL,    --  Primary key, IC Disco ID 
	parcel_id int,    --  Parcel ID 
	divide_id int,    --  Divide ID 
	dsc_id int,    --  DSC Id of DSC on which disco record sits 
	ia_type varchar(1),    --  Foreign key to IMPERVIOUS_TYPES 
	assumption_code varchar(4),    --  A code indicating the type of assumption resulting in the Disco record; foreign key to ASSUMPTION_CODES 
	time_frame varchar(2),    --  The time frame of the record; foreign key to TIME_FRAMES 
	ia_time_frame varchar(2),    --  Refers to the impervious area of the timeframe that will be used for calculating the effect of the disconnection; foreign key to TIME_FRAMES 
	disco_area numeric(10,2),    --  Area of disconnection 
	effectiveness numeric(5,4),    --  Decimal percentage effectiveness (0..1) of the control.  Not all controls are 100% effective (i.e., 100% of their area is removed from the collection system). 
	comment varchar(50),    --  Comment on the control 
	is_active int,    --  Boolean; indicates whether control is in operation and should be applied to model 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended; requires conversion from original (varchar(8) YYYYMMDD) 
	edit_date datetime,    --  Date record was modified by edited_by 
	parcelid_deprecated int,    --  Old id of associated parcel 
	divideid_deprecated int,    --  Old id of associated divide of parcel 
	dscid_deprecated int    --  Old id of associated dsc 
)
;

CREATE TABLE GIS.IC_DRYWELLS ( 
	ic_drywell_id int NOT NULL,    --  Primary key, IC Drywell ID 
	parcel_id int,    --  Parcel ID 
	divide_id int,    --  Divide ID 
	dsc_id int,    --  DSC Id of DSC on which disco record sits 
	ia_type varchar(1),    --  Foreign key to IMPERVIOUS_TYPES 
	assumption_code varchar(4),    --  A code indicating the type of assumption resulting in the Disco record; foreign key to ASSUMPTION_CODES 
	time_frame varchar(2),    --  The time frame of the record; foreign key to TIME_FRAMES 
	ia_time_frame varchar(2),    --  Refers to the impervious area of the timeframe that will be used for calculating the effect of the disconnection; foreign key to TIME_FRAMES 
--  EX = existing FU = future 
	drywell_area numeric(10,2),    --  Area of disconnection 
	comment varchar(50),    --  Comment on the control 
	is_active int,    --  Boolean; indicates whether control is in operation and should be applied to model 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended; requires conversion from original (varchar(8) YYYYMMDD) 
	edit_date datetime,    --  Date record was modified by edited_by 
	parcelid_deprecated int,    --  Old id of associated parcel 
	divideid_deprecated int,    --  Old id of associated divide of parcel 
	dscid_deprecated int    --  Old id of associated DSC 
)
;

CREATE TABLE GIS.IC_NODE_REDIRECTORS ( 
	ic_node_redirector_id int NOT NULL,    --  Primary key, IC Node Redirector Id 
	ssc_id int,    --  SSC ID of subcatchment whose draining node will be redirected 
	node_id int,    --  New draining node for subcatchment 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended to table 
	edit_date datetime,    --  Date record was modified by edited_by 
	surfscid_deprecated int,    --  Old id of associated SSC 
	ngto_deprecated varchar(10)    --  Old id of associated draining node 
)
;

CREATE TABLE GIS.ORIFICES ( 
	orifice_id int NOT NULL,    --  Primary key, orifice ID 
	orifice_name varchar(10),    --  Name of orifice 
	us_node_id int NOT NULL,    --  Upstream node ID, foreign key to NODES 
	ds_node_id int,    --  Downstream node ID, foreign key to NODES. If empty, then the link_id must not be empty.  If both aren't empty, then this overrides.   If both are not empty, ds_node_id overrides. 
	link_id int,    --  Foreign key to LINKS.  Indicates the link along which the orifice will be placed.  The link must have its us_node_id match the record's us_node_id.  If this field is empty, ds_node_id must not be empty.    If both are not empty, ds_node_id overrides. 
	orifice_type_id varchar(2) NOT NULL,    --  Foreign key to ORIFICE_TYPES 
	orifice_shape_id varchar(1) NOT NULL,    --  Foreign key to ORIFICE_SHAPES 
	orifice_area numeric(7,4) NOT NULL,    --  Cross-sectional area of orifice 
	height numeric(7,4),    --  Height of orifice (only used for shape = R) 
	invert numeric(7,2),    --  Invert of orifice (only used for orifice_type = S) 
	coefficient numeric(7,4) NOT NULL,    --  Orifice coefficient 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended to table 
	edit_date datetime    --  Date record was modified by edited_by 
)
;

CREATE TABLE GIS.PIPE_CONFLICTS ( 
	conflict_id int NOT NULL,    --  Primary key.  Conflict id 
	link_id int,    --  Foreign key to LINKS 
	us_node_id varchar(10),    --  Upstream node ID, foreign key to NODES 
	ds_node_id varchar(10),    --  Downstream node ID, foreign key to NODES 
	link_id_2 int,    --  Unknown 
	hansen_compkey int,    --  Foreign key to Hansen/DME link table 
	num_water_crossings int,    --  Number of water line crossings 
	min_diam_water_crossing_in int,    --  Smallest diameter of crossing water lines 
	max_diam_water_crossing_in int,    --  Largest diameter of crossing water lines 
	has_water_parallel int,    --  Boolean; true if pipe has parallel water line 
	max_diam_water_parallel_in int,    --  Maximum diameter of parallel water line 
	dist_to_parallel_water int,    --  Approximate distance to parallel water if the line exists 
	num_sewer_crossings int,    --  Number of crossing sewer pipes 
	min_diam_sewer_crossing_in int,    --  Smallest diameter of crossing sewers 
	max_diam_sewer_crossing_in int,    --  Largest diameter of sewer crossing 
	has_sewer_parallel int,    --  Boolean; true if pipe has parallel sewer pipes 
	max_diam_sewer_parallel_in int,    --  Largest diameter of parallel sewer pipes 
	dist_to_parallel_sewer int,    --  Approximate distance to parallel sewer pipe, if any 
	num_street_crossings int,    --  Number of street crossings 
	num_arterial_crossings int,    --  Number of arterial crossings 
	num_maj_arterial_crossings int,    --  Number of major arterial crossings 
	num_freeway_crossings int,    --  Number of freeway crossings 
	is_on_street int,    --  Line is in street surface 
	street_type int,    --  Type of street if line is on street surface 
	dist_to_street_centerline int,    --  Distance of line to street centerline 
	avg_traffic_vol_numperday int,    --  Average daily traffic volume (count/day) 
	num_str_us_node_in_street int,    --  Number of streets if upstream node of line is in street intersection 
	dist_us_node_to_str_intsec int,    --  Distance of upstream node to point of street intersection 
	num_str_ds_node_in_street int,    --  Number of streets if downstream node of line is in street intersection 
	dist_ds_node_to_str_intsec int,    --  Distance of downstream node to point of street intersection 
	num_fiber_crossings int,    --  Number of fiber optic crossings 
	has_fiber_parallel int,    --  Boolean; true if line has a parallel fiber optic line 
	dist_to_fiber_parallel int,    --  Approximate distance to fiber optic line 
	num_gas_crossings int,    --  Number of gas line crossings 
	has_gas_parallel int,    --  Boolean; true if line has a parallel gas line 
	dist_to_gas_parallel int,    --  Distance to parallel gas line 
	num_rail_crossings int,    --  Number of railroad crossings 
	has_rail_parallel int,    --  Boolean; true if line has parallel railroad lines 
	dist_to_rail_parallel int,    --  Distance to parallel railroad line 
	num_lrt_crossings int,    --  Number of light rail crossings 
	has_lrt_parallel int,    --  Boolean; true if line has parallel light rail tracks 
	dist_to_lrt_parallel int,    --  Distance from line to parallel light rail tracks 
	num_emg_route_crossings int,    --  Number of emergency route crossings 
	has_emg_route_parallel int,    --  Boolean; true if line has parallel emergency routes 
	dist_to_emg_route_parallel int,    --  Distance from line to parallel emergency route 
	is_within_conservation int,    --  Boolean; true if line is within an environmental conservation zone 
	is_within_protection int,    --  Boolean; true if line is within environmental protection zone 
	length_within_conservation int,    --  Approximate length of pipe within environmental conservation zone 
	length_within_protection int,    --  Approximate length of line within environmental protection zone 
	area_within_conservation int,    --  Overlapping area of 12.5 ft radius buffer around line within environmental conservation zone 
	area_within_protection int,    --  Overlapping area of 12.5 ft radius buffer around line within environmental protection zone 
	us_node_is_within_ms4 int,    --  Boolean; true if upstream node of line is within an MS4 area 
	us_node_is_within_uic int,    --  Boolean; upstream node is within a UIC subcatchment 
	us_node_depth numeric(8,4),    --  Upstream node depth 
	ds_node_depth numeric(8,4),    --  Downstream node depth 
	slope numeric(10,2),    --  Slope of pipe (fractional form: (usie-dsie)/length) 
	ground_surface_slope int,    --  Percent slope of surface, negative indicates adverse slope 
	is_near_ecsi int,    --  Boolean; true if line is within 50 feet of an ECSI (environmental cleanup site) 
	distance_to_ecsi int,    --  Distance to nearest ECSI 
	length_within_ecsi_range int,    --  Length of pipe within 50 feet of an ECSI 
	ecsi_volume_cuyd int,    --  Average pipe depth * overlap of 12.5 ft pipe buffer and 50 ft ECSI buffer 
	is_near_school int,    --  Boolean; true indicates pipe is within 250 ft of a school 
	dist_to_school int,    --  Distance of line to nearest school 
	is_near_hospital int,    --  Boolean; true if line is within 250 ft of a hospital 
	dist_to_hospital int,    --  Distance of line to nearest hospital 
	is_near_police_station int,    --  Boolean; true if line is within 250 ft of a police station 
	dist_to_police_station int,    --  Distance from line to nearest police station 
	is_near_fire_station int,    --  Boolean; true if line is within 250 ft of a fire station 
	dist_to_fire_station int,    --  Distance from line to nearest fire station 
	is_near_building int,    --  Boolean; true if line is within 10 ft of a building 
	dist_to_building int,    --  Approximate distance from building to line 
	is_near_hydrant int,    --  Boolean; true if within 25 ft of a hydrant 
	dist_to_hydrant int,    --  Distance from pipe to nearest hydrant 
	in_difficult_area int,    --  Boolean; true if pipe is in a historically difficult construction area 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended to table 
	edit_date datetime,    --  Date record was modified by edited_by 
	mlinkid_deprecated int    --  Old id of associated link 
)
;

CREATE TABLE GIS.PIPE_SHAPES ( 
	shape_id int NOT NULL,    --  Primary key 
	shape_name varchar(4) NOT NULL,    --  Primary key, shape code 
	description varchar(max),    --  Description of shape 
	pdx_swmm_shape_id int,    --  Shape number id for use in PDX SWMM 
	dhi_type_num int,    --  Type ID for use in DHI models 
	xpswmm_shape_id int,    --  Shape number id for use in XPSWMM 
	roughness numeric(6,5),    --  Average Manning's roughness of cross section 
	comment varchar(max),    --  General comment/usage of shape 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended to table 
	edit_date datetime    --  Date record was modified by edited_by 
)
;

CREATE TABLE GIS.PIPE_SHAPES_DATA ( 
	udg_id int NOT NULL,    --  Primary key, user defined geometry id 
	shape_id int,    --  Foreign key to PIPE_SHAPES 
	height_in numeric(7,4),    --  Maximum vertical dimension of geometry 
	width_in numeric(7,4),    --  Maximum horizontal dimension of geometry 
	order_index int,    --  Order of cross section in batch of other records with the same shape_id, height, and width, moving from bottom to top 
	depth numeric(7,4),    --  Depth at location depicted by record, from bottom of geometry 
	xsec_area numeric(7,4),    --  Cross sectional area at depth depicted by record, from the bottom to the depth indicated 
	hydraulic_radius numeric(7,4),    --  Cross sectional hydraulic radius at depth depicted by record 
	wetted_perimeter numeric(7,4),    --  Cross sectional wetted perimeter at depth depicted by record 
	surface_width numeric(7,4),    --  Cross sectional surface width at depth depicted by record 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended to table 
	edit_date datetime,    --  Date record was modified by edited_by 
	shape_deprecated varchar(4)    --  Old id of associated pipe shape 
)
;

CREATE TABLE GIS.PUMP_CURVES ( 
	pump_curve_id int NOT NULL,    --  Primary key 
	pump_id int NOT NULL,    --  ID of pump 
	pump_name varchar(50),    --  Name of pump 
	order_index int,    --  Order of pump curve record 
	depth_head numeric(7,4),    --  Curve depth/head 
	flow numeric(7,4),    --  Curve flow rate at the specified depth/head 
	pump_type int,    --  Type of curve being described.  Deprecated. 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended to table 
	edit_date datetime    --  Date record was modified by edited_by 
)
;

CREATE TABLE GIS.PUMPS ( 
	pump_id int NOT NULL,    --  Primary key 
	pump_name varchar(20),    --  Name of pump 
	us_node_id int NOT NULL,    --  Foreign key to NODES. Upstream node ID 
	ds_node_id int,    --  Foreign key to NODES. Downstream node id. 
	link_id int,    --  Associate link being modified 
	pump_type int NOT NULL,    --  Type of pump 
	initial_depth numeric(7,2),    --  Initial depth of the wetwell 
	on_elevation numeric(10,2) NOT NULL,    --  Elevation (ft) at which pump turns on 
	off_elevation numeric(10,2) NOT NULL,    --  Elevation (ft) at which pump turns off 
	wetwell_volume numeric(7,2),    --  Volume of wetwell (constant) 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended to table 
	edit_date datetime    --  Date record was modified by edited_by 
)
;

CREATE TABLE GIS.SAN_PATTERNS ( 
	san_pattern_id int NOT NULL,    --  Primary key, sanitary pattern Id 
	name varchar(50),    --  Name of diurnal pattern 
	instance int DEFAULT 0,    --  Unknown usage 
	h1 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 0:00-1:00 
	h2 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 1:00-2:00 
	h3 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 2:00-3:00 
	h4 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 3:00-4:00 
	h5 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 4:00-5:00 
	h6 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 5:00-6:00 
	h7 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 6:00-7:00 
	h8 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 7:00-8:00 
	h9 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 8:00-9:00 
	h10 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 9:00-10:00 
	h11 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 10:00-11:00 
	h12 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 11:00-12:00 
	h13 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 12:00-13:00 
	h14 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 13:00-14:00 
	h15 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 14:00-15:00 
	h16 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 15:00-16:00 
	h17 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 16:00-17:00 
	h18 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 17:00-18:00 
	h19 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 18:00-19:00 
	h20 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 19:00-20:00 
	h21 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 20:00-21:00 
	h22 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 21:00-22:00 
	h23 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 22:00-23:00 
	h24 numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for 23:00-0:00 
	sunday numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for Sunday 
	monday numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for Monday 
	tuesday numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for Tuesday 
	wednesday numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for Wednesday 
	thursday numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for Thursday 
	friday numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for Friday 
	saturday numeric(6,4) DEFAULT 0.00,    --  Diurnal factor for Saturday 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT',    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended to table 
	edit_date datetime    --  Date record was modified by edited_by 
)
;

CREATE TABLE GIS.SPECIAL_LINKS ( 
	special_link_id int NOT NULL,    --  Primary key, special link ID 
	node_id int,    --  Node from which the special link originates (upstream end) 
	to_link_id int,    --  Link Id along which the special link will be aligned. 
	to_link_id_index int,    --  Sequence ID for a node/link combination that has more than one special link attached.  May not be necessary, as this was used as part of a composite key. 
	special_link_type varchar(2),    --  Foreign key to SPECIAL_LINK_TYPES 
	time_frame varchar(2),    --  Foreign key to TIME_FRAMES 
	valid_from_date varchar(8),    --  Date at which the special link is valid.   YYYYMMDD format. 
	valid_to_date varchar(8),    --  Data at which the special link is no longer valid. YYYYMMDD format. 
	special_link_node_model_id varchar(10),    --  Permanent Node ID to be used for the downstream end of the special link, for use in modeling 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended to table 
	edit_date datetime,    --  Date record was modified by edited_by 
	mspeclinkid_deprecated int,    --  An old key for the special links table. 
	slid_deprecated int,    --  An old key for the special links table. 
	node_deprecated varchar(10),    --  Old id for associated node forming upstream end of special link 
	tomlinkid_deprecated int    --  Old id of link that the special link is modifying 
)
;

CREATE TABLE GIS.SPECIAL_LINKS_DATA ( 
	special_link_data_id int NOT NULL,    --  Primary key, special link data id 
	special_link_id int,    --  Foreign key to SPECIAL_LINKS 
	tag_name varchar(15),    --  The tag of the tag-value pair 
	text_value varchar(30),    --  The text value of the tag-value pair.  Usually only one of text_value or numeric_value is used for any one record. 
	to_link_id_index int,    --  Sequence ID for a node/link combination that has more than one special link attached.  May not be necessary, as this was used as part of a composite key. 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended to table 
	edit_date datetime,    --  Date record was modified by edited_by 
	mspeclinkid_deprecated int,    --  An old key for the special links table. 
	slid_deprecated int    --  An old key for the special links table. 
)
;

CREATE TABLE GIS.STORMS ( 
	storm_id int NOT NULL,    --  Primary key. Storm ID 
	name varchar(50),    --  Common name for storm 
	type varchar(1),    --  Foreign key to STORM_TYPES 
	description varchar(50),    --  Description of storm 
	abbreviation varchar(5),    --  Abbreviation used for filenames related to the storm 
	filename varchar(255),    --  Filename relative to rainfall repository (SAMasterXX\rainfall) 
	start_date datetime,    --  Beginning date and time of storm for use in setting up simulation 
	end_date datetime,    --  Ending date and time of storm for use in setting up simulation 
	time_step_min int,    --  Time step interval in minutes 
	num_gages int,    --  Number of gages in rainfall file 
	start_year_override int,    --  Used for interface files with two-digit years; leave blank if four-digit year is used 
	end_year_override int,    --  Used for interface files with two digit years; leave blank if four-digit year is used 
	wet_time_step int,    --  Wet time step 
	wet_to_dry_time_step int,    --  Wet-to-dry transition time step 
	dry_time_step int,    --  Dry time step 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended to table 
	edit_date datetime    --  Date record was modified by edited_by 
)
;

CREATE TABLE GIS.WEIRS ( 
	weir_id int NOT NULL,    --  Primary key, weir ID 
	weir_name varchar(20),    --  Name of weir 
	us_node_id int NOT NULL,    --  Upstream node ID, foreign key to NODES 
	ds_node_id int,    --  Downstream node ID, foreign key to NODES.  If empty, then the link_id must not be empty.  If both are not empty, ds_node_id overrides. 
	link_id int,    --  Foreign key to LINKS.  Indicates the link along which the weir will be placed.  The link must have its us_node_id match the record's us_node_id.  If this field is empty, ds_node_id must not be empty.  If both are not empty, ds_node_id overrides. 
	weir_type varchar(2) NOT NULL,    --  Foreign key to WEIR_TYPES 
	crown numeric(7,2) NOT NULL,    --  Crown (capping) elevation over weir.  Above this elevation, the weir will go into surcharge/orifice mode. 
	crest numeric(7,2) NOT NULL,    --  Crest elevation of weir 
	length numeric(7,2) NOT NULL,    --  Length of weir 
	coefficient numeric(7,4) NOT NULL,    --  Weir coefficient 
	edited_by varchar(50) NOT NULL,    --  Free form, indicates source of modifications to record 
	edit_reason varchar(100) NOT NULL,    --  Reason edit was performed 
	status varchar(3) DEFAULT 'ACT' NOT NULL,    --  Status of record, in terms of usability for further analysis and general state of data 
	append_date datetime NOT NULL,    --  Date record was appended to table 
	edit_date datetime    --  Date record was modified by edited_by 
)
;

--  Create Primary Key Constraints 
ALTER TABLE GIS.ASSUMPTION_CODES ADD CONSTRAINT PK_ASSUMPTION_CODES 
	PRIMARY KEY CLUSTERED (assumption_code_id)
;

ALTER TABLE GIS.DATA_SOURCES ADD CONSTRAINT PK_DATA_SOURCES 
	PRIMARY KEY CLUSTERED (data_source_id)
;

ALTER TABLE GIS.DETAILED_ZONES ADD CONSTRAINT PK_DETAILED_ZONES 
	PRIMARY KEY CLUSTERED (detailed_zone_id)
;

ALTER TABLE GIS.DISCO_CLASSES ADD CONSTRAINT PK_DISCO_CLASSES 
	PRIMARY KEY CLUSTERED (disco_class_id)
;

ALTER TABLE GIS.DSC_DATA_SOURCES ADD CONSTRAINT PK_DSC_SOURCE_QUALITIES 
	PRIMARY KEY CLUSTERED (name)
;

ALTER TABLE GIS.GROWTH_STATES ADD CONSTRAINT PK_GROWTH_STATES 
	PRIMARY KEY CLUSTERED (growth_state_id)
;

ALTER TABLE GIS.HANSEN_SERVICE_CODES ADD CONSTRAINT PK_HANSEN_SERVICE_CODES 
	PRIMARY KEY CLUSTERED (hansen_service_code_id)
;

ALTER TABLE GIS.IC_TARGET_CONSTRUCTED_STATUSES ADD CONSTRAINT PK_IC_TARGET_CONSTRUCTED_STATUSES 
	PRIMARY KEY CLUSTERED (ic_target_constructed_status_id)
;

ALTER TABLE GIS.IC_TARGET_DIFFICULTIES ADD CONSTRAINT PK_IC_TARGET_DIFFICULTIES 
	PRIMARY KEY CLUSTERED (ic_target_difficulty_id)
;

ALTER TABLE GIS.IMPERVIOUS_TYPES ADD CONSTRAINT PK_IMPERVIOUS_TYPES 
	PRIMARY KEY CLUSTERED (impervious_type_id)
;

ALTER TABLE GIS.LINK_TYPES ADD CONSTRAINT PK_LINK_TYPES 
	PRIMARY KEY CLUSTERED (link_type_id)
;

ALTER TABLE GIS.MATERIALS ADD CONSTRAINT PK_MATERIALS 
	PRIMARY KEY CLUSTERED (material_id)
;

ALTER TABLE GIS.NODE_TYPES ADD CONSTRAINT PK_NODE_TYPES 
	PRIMARY KEY CLUSTERED (node_type_id)
;

ALTER TABLE GIS.ORIFICE_SHAPES ADD CONSTRAINT PK_ORIFICE_SHAPES 
	PRIMARY KEY CLUSTERED (orifice_shape_id)
;

ALTER TABLE GIS.ORIFICE_TYPES ADD CONSTRAINT PK_ORIFICE_TYPES 
	PRIMARY KEY CLUSTERED (orifice_type_id)
;

ALTER TABLE GIS.PIPE_FLOW_TYPES ADD CONSTRAINT PK_PIPE_FLOW_TYPES 
	PRIMARY KEY CLUSTERED (pipe_flow_type_id)
;

ALTER TABLE GIS.PLACEMENT_TYPES ADD CONSTRAINT PK_PLACEMENT_TYPES 
	PRIMARY KEY CLUSTERED (placement_type_id)
;

ALTER TABLE GIS.PUMP_TYPES ADD CONSTRAINT PK_PUMP_TYPES 
	PRIMARY KEY CLUSTERED (pump_type_id)
;

ALTER TABLE GIS.SEWERABILITIES ADD CONSTRAINT PK_SEWERABILITIES 
	PRIMARY KEY CLUSTERED (sewerability_id)
;

ALTER TABLE GIS.SPECIAL_LINK_TYPES ADD CONSTRAINT PK_SPECIAL_LINK_TYPES 
	PRIMARY KEY CLUSTERED (special_link_type_id)
;

ALTER TABLE GIS.STATUSES ADD CONSTRAINT PK_STATUSES 
	PRIMARY KEY CLUSTERED (status_id)
;

ALTER TABLE GIS.STORM_TYPES ADD CONSTRAINT PK_STORM_TYPES 
	PRIMARY KEY CLUSTERED (storm_type_id)
;

ALTER TABLE GIS.STREET_TARGET_TYPES ADD CONSTRAINT PK_STREET_TARGET_TYPES 
	PRIMARY KEY CLUSTERED (street_target_type_id)
;

ALTER TABLE GIS.TIME_FRAMES ADD CONSTRAINT PK_TIME_FRAMES 
	PRIMARY KEY CLUSTERED (time_frame_id)
;

ALTER TABLE GIS.WEIR_TYPES ADD CONSTRAINT PK_WEIR_TYPES 
	PRIMARY KEY CLUSTERED (weir_type_id)
;

ALTER TABLE GIS.ZONES ADD CONSTRAINT PK_ZONES 
	PRIMARY KEY CLUSTERED (zone_id)
;

ALTER TABLE GIS.CROSS_SECTIONS ADD CONSTRAINT PK_CROSS_SECTIONS 
	PRIMARY KEY CLUSTERED (cross_section_id)
;

ALTER TABLE GIS.CROSS_SECTIONS_DATA ADD CONSTRAINT PK_CROSS_SECTIONS_DATA 
	PRIMARY KEY CLUSTERED (cross_section_data_id)
;

ALTER TABLE GIS.FIXED_FLOOR_ELEVATIONS ADD CONSTRAINT PK_FIXED_FLOOR_ELEVATIONS 
	PRIMARY KEY CLUSTERED (ffe_id)
;

ALTER TABLE GIS.IC_DISCOS ADD CONSTRAINT PK_IC_DISCOS 
	PRIMARY KEY CLUSTERED (ic_disco_id)
;

ALTER TABLE GIS.IC_DRYWELLS ADD CONSTRAINT PK_IC_DRYWELLS 
	PRIMARY KEY CLUSTERED (ic_drywell_id)
;

ALTER TABLE GIS.IC_NODE_REDIRECTORS ADD CONSTRAINT PK_IC_NODE_REDIRECTORS 
	PRIMARY KEY CLUSTERED (ic_node_redirector_id)
;

ALTER TABLE GIS.ORIFICES ADD CONSTRAINT PK_ORIFICES 
	PRIMARY KEY CLUSTERED (orifice_id)
;

ALTER TABLE GIS.PIPE_CONFLICTS ADD CONSTRAINT PK_PIPE_CONFLICTS 
	PRIMARY KEY CLUSTERED (conflict_id)
;

ALTER TABLE GIS.PIPE_SHAPES ADD CONSTRAINT PK_PIPE_SHAPES 
	PRIMARY KEY CLUSTERED (shape_id)
;

ALTER TABLE GIS.PIPE_SHAPES_DATA ADD CONSTRAINT PK_USER_DEFINED_GEOMETRIES 
	PRIMARY KEY CLUSTERED (udg_id)
;

ALTER TABLE GIS.PUMP_CURVES ADD CONSTRAINT PK_PUMP_CURVES 
	PRIMARY KEY CLUSTERED (pump_curve_id)
;

ALTER TABLE GIS.PUMPS ADD CONSTRAINT PK_PUMPS 
	PRIMARY KEY CLUSTERED (pump_id)
;

ALTER TABLE GIS.SAN_PATTERNS ADD CONSTRAINT PK_SAN_PATTERNS 
	PRIMARY KEY CLUSTERED (san_pattern_id)
;

ALTER TABLE GIS.SPECIAL_LINKS ADD CONSTRAINT PK_SPECIAL_LINKS 
	PRIMARY KEY CLUSTERED (special_link_id)
;

ALTER TABLE GIS.SPECIAL_LINKS_DATA ADD CONSTRAINT PK_SPECIAL_LINKS_DATA 
	PRIMARY KEY CLUSTERED (special_link_data_id)
;

ALTER TABLE GIS.STORMS ADD CONSTRAINT PK_STORMS 
	PRIMARY KEY CLUSTERED (storm_id)
;

ALTER TABLE GIS.WEIRS ADD CONSTRAINT PK_WEIRS 
	PRIMARY KEY CLUSTERED (weir_id)
;


--  Create Indexes 
ALTER TABLE GIS.ASSUMPTION_CODES
	ADD CONSTRAINT UQ_ASSUMPTION_CODES_assumption_code_id UNIQUE (assumption_code_id)
;

ALTER TABLE GIS.ASSUMPTION_CODES
	ADD CONSTRAINT UQ_ASSUMPTION_CODES_name UNIQUE (name)
;

ALTER TABLE GIS.DATA_SOURCES
	ADD CONSTRAINT UQ_DATA_SOURCES_data_source_id UNIQUE (data_source_id)
;

ALTER TABLE GIS.DATA_SOURCES
	ADD CONSTRAINT UQ_DATA_SOURCES_name UNIQUE (name)
;

ALTER TABLE GIS.DETAILED_ZONES
	ADD CONSTRAINT UQ_DETAILED_ZONES_detailed_zone_id UNIQUE (detailed_zone_id)
;

ALTER TABLE GIS.DETAILED_ZONES
	ADD CONSTRAINT UQ_DETAILED_ZONES_name UNIQUE (name)
;

ALTER TABLE GIS.DISCO_CLASSES
	ADD CONSTRAINT UQ_DISCO_CLASSES_disco_class_id UNIQUE (disco_class_id)
;

ALTER TABLE GIS.DISCO_CLASSES
	ADD CONSTRAINT UQ_DISCO_CLASSES_name UNIQUE (name)
;

ALTER TABLE GIS.DSC_DATA_SOURCES
	ADD CONSTRAINT UQ_DSC_SOURCE_QUALITIES_name UNIQUE (name)
;

ALTER TABLE GIS.GROWTH_STATES
	ADD CONSTRAINT UQ_GROWTH_STATES_growth_state_id UNIQUE (growth_state_id)
;

ALTER TABLE GIS.GROWTH_STATES
	ADD CONSTRAINT UQ_GROWTH_STATES_name UNIQUE (name)
;

ALTER TABLE GIS.HANSEN_SERVICE_CODES
	ADD CONSTRAINT UQ_HANSEN_SERVICE_CODES_hansen_service_code_id UNIQUE (hansen_service_code_id)
;

ALTER TABLE GIS.HANSEN_SERVICE_CODES
	ADD CONSTRAINT UQ_HANSEN_SERVICE_CODES_name UNIQUE (name)
;

ALTER TABLE GIS.IC_TARGET_CONSTRUCTED_STATUSES
	ADD CONSTRAINT UQ_IC_TARGET_CONSTRUCTED_STATUSES_ic_target_constructed_status_id UNIQUE (ic_target_constructed_status_id)
;

ALTER TABLE GIS.IC_TARGET_CONSTRUCTED_STATUSES
	ADD CONSTRAINT UQ_IC_TARGET_CONSTRUCTED_STATUSES_name UNIQUE (name)
;

ALTER TABLE GIS.IC_TARGET_DIFFICULTIES
	ADD CONSTRAINT UQ_IC_TARGET_DIFFICULTIES_ic_target_difficulty_id UNIQUE (ic_target_difficulty_id)
;

ALTER TABLE GIS.IC_TARGET_DIFFICULTIES
	ADD CONSTRAINT UQ_IC_TARGET_DIFFICULTIES_name UNIQUE (name)
;

ALTER TABLE GIS.IMPERVIOUS_TYPES
	ADD CONSTRAINT UQ_IMPERVIOUS_TYPES_impervious_type_id UNIQUE (impervious_type_id)
;

ALTER TABLE GIS.IMPERVIOUS_TYPES
	ADD CONSTRAINT UQ_IMPERVIOUS_TYPES_name UNIQUE (name)
;

ALTER TABLE GIS.LINK_TYPES
	ADD CONSTRAINT UQ_LINK_TYPES_link_type_id UNIQUE (link_type_id)
;

ALTER TABLE GIS.LINK_TYPES
	ADD CONSTRAINT UQ_LINK_TYPES_name UNIQUE (name)
;

ALTER TABLE GIS.MATERIALS
	ADD CONSTRAINT UQ_MATERIALS_material_id UNIQUE (material_id)
;

ALTER TABLE GIS.MATERIALS
	ADD CONSTRAINT UQ_MATERIALS_name UNIQUE (name)
;

ALTER TABLE GIS.NODE_TYPES
	ADD CONSTRAINT UQ_NODE_TYPES_name UNIQUE (name)
;

ALTER TABLE GIS.NODE_TYPES
	ADD CONSTRAINT UQ_NODE_TYPES_node_type_id UNIQUE (node_type_id)
;

ALTER TABLE GIS.ORIFICE_SHAPES
	ADD CONSTRAINT UQ_ORIFICE_SHAPES_name UNIQUE (name)
;

ALTER TABLE GIS.ORIFICE_SHAPES
	ADD CONSTRAINT UQ_ORIFICE_SHAPES_orifice_shape_id UNIQUE (orifice_shape_id)
;

ALTER TABLE GIS.ORIFICE_TYPES
	ADD CONSTRAINT UQ_ORIFICE_TYPES_name UNIQUE (name)
;

ALTER TABLE GIS.ORIFICE_TYPES
	ADD CONSTRAINT UQ_ORIFICE_TYPES_orifice_type_id UNIQUE (orifice_type_id)
;

ALTER TABLE GIS.PIPE_FLOW_TYPES
	ADD CONSTRAINT UQ_PIPE_FLOW_TYPES_name UNIQUE (name)
;

ALTER TABLE GIS.PIPE_FLOW_TYPES
	ADD CONSTRAINT UQ_PIPE_FLOW_TYPES_pipe_flow_type_id UNIQUE (pipe_flow_type_id)
;

ALTER TABLE GIS.PLACEMENT_TYPES
	ADD CONSTRAINT UQ_PLACEMENT_TYPES_name UNIQUE (name)
;

ALTER TABLE GIS.PLACEMENT_TYPES
	ADD CONSTRAINT UQ_PLACEMENT_TYPES_placement_type_id UNIQUE (placement_type_id)
;

ALTER TABLE GIS.PUMP_TYPES
	ADD CONSTRAINT UQ_PUMP_TYPES_name UNIQUE (name)
;

ALTER TABLE GIS.PUMP_TYPES
	ADD CONSTRAINT UQ_PUMP_TYPES_pump_type_id UNIQUE (pump_type_id)
;

ALTER TABLE GIS.SEWERABILITIES
	ADD CONSTRAINT UQ_SEWERABILITIES_name UNIQUE (name)
;

ALTER TABLE GIS.SEWERABILITIES
	ADD CONSTRAINT UQ_SEWERABILITIES_sewerability_id UNIQUE (sewerability_id)
;

ALTER TABLE GIS.SPECIAL_LINK_TYPES
	ADD CONSTRAINT UQ_SPECIAL_LINK_TYPES_name UNIQUE (name)
;

ALTER TABLE GIS.SPECIAL_LINK_TYPES
	ADD CONSTRAINT UQ_SPECIAL_LINK_TYPES_special_link_type_id UNIQUE (special_link_type_id)
;

ALTER TABLE GIS.STATUSES
	ADD CONSTRAINT UQ_STATUSES_status_id UNIQUE (status_id)
;

ALTER TABLE GIS.STORM_TYPES
	ADD CONSTRAINT UQ_STORM_TYPES_name UNIQUE (name)
;

ALTER TABLE GIS.STORM_TYPES
	ADD CONSTRAINT UQ_STORM_TYPES_storm_type_id UNIQUE (storm_type_id)
;

ALTER TABLE GIS.STREET_TARGET_TYPES
	ADD CONSTRAINT UQ_STREET_TARGET_TYPES_name UNIQUE (name)
;

ALTER TABLE GIS.STREET_TARGET_TYPES
	ADD CONSTRAINT UQ_STREET_TARGET_TYPES_street_target_type_id UNIQUE (street_target_type_id)
;

ALTER TABLE GIS.TIME_FRAMES
	ADD CONSTRAINT UQ_TIME_FRAMES_name UNIQUE (name)
;

ALTER TABLE GIS.TIME_FRAMES
	ADD CONSTRAINT UQ_TIME_FRAMES_time_frame_id UNIQUE (time_frame_id)
;

ALTER TABLE GIS.WEIR_TYPES
	ADD CONSTRAINT UQ_WEIR_TYPES_name UNIQUE (name)
;

ALTER TABLE GIS.WEIR_TYPES
	ADD CONSTRAINT UQ_WEIR_TYPES_weir_type_id UNIQUE (weir_type_id)
;

ALTER TABLE GIS.ZONES
	ADD CONSTRAINT UQ_ZONES_name UNIQUE (name)
;

ALTER TABLE GIS.ZONES
	ADD CONSTRAINT UQ_ZONES_zone_id UNIQUE (zone_id)
;

ALTER TABLE GIS.CROSS_SECTIONS
	ADD CONSTRAINT UQ_CROSS_SECTIONS_cross_section_id UNIQUE (cross_section_id)
;

ALTER TABLE GIS.CROSS_SECTIONS
	ADD CONSTRAINT UC_LIMIT_ROUGHNESS_MAIN CHECK (roughness_main > 0.001 and roughness_main < 1.0)
;

ALTER TABLE GIS.CROSS_SECTIONS
	ADD CONSTRAINT UC_LIMIT_ROUGHNESS_LEFT CHECK (roughness_left > 0.001 and roughness_left < 1.0)
;

ALTER TABLE GIS.CROSS_SECTIONS
	ADD CONSTRAINT UC_LIMIT_ROUGHNESS_RIGHT CHECK (roughness_right > 0.001 and roughness_right < 1.0)
;

ALTER TABLE GIS.CROSS_SECTIONS
	ADD CONSTRAINT UC_LIMIT_LENGTH_FACTOR_LEFT CHECK (length_factor_left > 0.0 and length_factor_left < 2.0)
;

ALTER TABLE GIS.CROSS_SECTIONS
	ADD CONSTRAINT UC_LIMIT_LENGTH_FACTOR_RIGHT CHECK (length_factor_right > 0.0 and length_factor_right < 2.0)
;

ALTER TABLE GIS.CROSS_SECTIONS_DATA
	ADD CONSTRAINT UQ_CROSS_SECTIONS_DATA_cross_section_data_id UNIQUE (cross_section_data_id)
;

ALTER TABLE GIS.CROSS_SECTIONS_DATA
	ADD CONSTRAINT UC_LIMIT_CROSS_SECTIONS_DATA_ORDER_INDEX CHECK (order_index > 0)
;

ALTER TABLE GIS.FIXED_FLOOR_ELEVATIONS
	ADD CONSTRAINT UQ_FIXED_FLOOR_ELEVATIONS_ffe_id UNIQUE (ffe_id)
;

ALTER TABLE GIS.IC_DISCOS
	ADD CONSTRAINT UQ_IC_DISCOS_ic_disco_id UNIQUE (ic_disco_id)
;

ALTER TABLE GIS.IC_DISCOS
	ADD CONSTRAINT UC_LIMIT_IC_DISCO_AREA CHECK (disco_area >= 0.0)
;

ALTER TABLE GIS.IC_DISCOS
	ADD CONSTRAINT UC_LIMIT_EFFECTIVENESS CHECK (effectiveness >= 0.0 and effectiveness <= 1.0)
;

ALTER TABLE GIS.IC_DRYWELLS
	ADD CONSTRAINT UQ_IC_DRYWELLS_ic_drywell_id UNIQUE (ic_drywell_id)
;

ALTER TABLE GIS.IC_DRYWELLS
	ADD CONSTRAINT UC_LIMIT_DRYWELL_AREA CHECK (drywell_area >= 0.0)
;

ALTER TABLE GIS.IC_NODE_REDIRECTORS
	ADD CONSTRAINT UQ_IC_NODE_REDIRECTORS_ic_node_redirector_id UNIQUE (ic_node_redirector_id)
;

ALTER TABLE GIS.ORIFICES
	ADD CONSTRAINT UQ_ORIFICES_orifice_id UNIQUE (orifice_id)
;

ALTER TABLE GIS.ORIFICES
	ADD CONSTRAINT UC_LIMIT_ORIFICE_AREA CHECK (orifice_area > 0.0)
;

ALTER TABLE GIS.ORIFICES
	ADD CONSTRAINT UC_LIMIT_HEIGHT CHECK (height >= 0.0)
;

ALTER TABLE GIS.ORIFICES
	ADD CONSTRAINT UC_LIMIT_ORIFICE_COEFFICIENT CHECK (coefficient > 0.0)
;

ALTER TABLE GIS.PIPE_CONFLICTS
	ADD CONSTRAINT UQ_PIPE_CONFLICTS_conflict_id UNIQUE (conflict_id)
;

ALTER TABLE GIS.PIPE_SHAPES
	ADD CONSTRAINT UQ_PIPE_SHAPES_shape_id UNIQUE (shape_id)
;

ALTER TABLE GIS.PIPE_SHAPES
	ADD CONSTRAINT UQ_PIPE_SHAPES_shape_name UNIQUE (shape_name)
;

ALTER TABLE GIS.PIPE_SHAPES_DATA
	ADD CONSTRAINT UQ_USER_DEFINED_GEOMETRIES_udg_id UNIQUE (udg_id)
;

ALTER TABLE GIS.PIPE_SHAPES_DATA
	ADD CONSTRAINT UC_LIMIT_PIPE_SHAPE_DATA_ORDER_INDEX CHECK (order_index >= 0)
;

ALTER TABLE GIS.PIPE_SHAPES_DATA
	ADD CONSTRAINT UC_LIMIT_DEPTH CHECK (depth >= 0.0)
;

ALTER TABLE GIS.PIPE_SHAPES_DATA
	ADD CONSTRAINT UC_LIMIT_PIPE_SHAPE_DATA_AREA CHECK (xsec_area >= 0.0)
;

ALTER TABLE GIS.PIPE_SHAPES_DATA
	ADD CONSTRAINT UC_LIMIT_HYDRAULIC_RADIUS CHECK (hydraulic_radius >= 0.0)
;

ALTER TABLE GIS.PIPE_SHAPES_DATA
	ADD CONSTRAINT UC_LIMIT_WETTED_PERIMETER CHECK (wetted_perimeter >= 0.0)
;

ALTER TABLE GIS.PIPE_SHAPES_DATA
	ADD CONSTRAINT UC_LIMIT_SURFACE_WIDTH CHECK (surface_width >= 0.0)
;

ALTER TABLE GIS.PUMP_CURVES
	ADD CONSTRAINT UQ_PUMP_CURVES_pump_curve_id UNIQUE (pump_curve_id)
;

ALTER TABLE GIS.PUMP_CURVES
	ADD CONSTRAINT UC_LIMIT_PUMP_CURVE_ORDER_INDEX CHECK (order_index >= 0)
;

ALTER TABLE GIS.PUMPS
	ADD CONSTRAINT UQ_PUMPS_pump_id UNIQUE (pump_id)
;

ALTER TABLE GIS.PUMPS
	ADD CONSTRAINT UC_LIMIT_INITIAL_DEPTH CHECK (initial_depth >= 0.0)
;

ALTER TABLE GIS.PUMPS
	ADD CONSTRAINT UC_CHECK_OFF_AGAINST_ON_ELEVATION CHECK (on_elevation > off_elevation)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UQ_SAN_PATTERNS_san_pattern_id UNIQUE (san_pattern_id)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H1 CHECK (h1 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H2 CHECK (h2 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H3 CHECK (h3 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H4 CHECK (h4 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H5 CHECK (h5 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H6 CHECK (h6 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H7 CHECK (h7 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H8 CHECK (h8 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H9 CHECK (h9 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H10 CHECK (h10 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H11 CHECK (h11 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H12 CHECK (h12 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H13 CHECK (h13 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H14 CHECK (h14 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H15 CHECK (h15 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H16 CHECK (h16 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H17 CHECK (h17 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H18 CHECK (h18 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H19 CHECK (h19 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H20 CHECK (h20 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H21 CHECK (h21 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H22 CHECK (h22 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H23 CHECK (h23 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_H24 CHECK (h24 >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_SUNDAY CHECK (sunday >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_MONDAY CHECK (monday >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_TUESDAY CHECK (tuesday >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_WEDNESDAY CHECK (wednesday >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_THURSDAY CHECK (thursday >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_FRIDAY CHECK (friday >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_SATURDAY CHECK (saturday >= 0.0)
;

ALTER TABLE GIS.SAN_PATTERNS
	ADD CONSTRAINT UC_LIMIT_INSTANCE CHECK (instance >= 0)
;

ALTER TABLE GIS.SPECIAL_LINKS
	ADD CONSTRAINT UQ_SPECIAL_LINKS_special_link_id UNIQUE (special_link_id)
;

ALTER TABLE GIS.SPECIAL_LINKS_DATA
	ADD CONSTRAINT UQ_SPECIAL_LINKS_DATA_special_link_data_id UNIQUE (special_link_data_id)
;

ALTER TABLE GIS.STORMS
	ADD CONSTRAINT UQ_STORMS_storm_id UNIQUE (storm_id)
;

ALTER TABLE GIS.STORMS
	ADD CONSTRAINT UC_CHECK_END_AFTER_START_DATE CHECK (end_date > start_date)
;

ALTER TABLE GIS.STORMS
	ADD CONSTRAINT UC_LIMIT_TIME_STEP_MIN CHECK (time_step_min > 0)
;

ALTER TABLE GIS.STORMS
	ADD CONSTRAINT UC_LIMIT_WET_TIME_STEP CHECK (wet_time_step > 0)
;

ALTER TABLE GIS.STORMS
	ADD CONSTRAINT UC_LIMIT_WET_TO_DRY_TIME_STEP CHECK (wet_to_dry_time_step > 0)
;

ALTER TABLE GIS.STORMS
	ADD CONSTRAINT UC_LIMIT_DRY_TIME_STEP CHECK (dry_time_step > 0)
;

ALTER TABLE GIS.STORMS
	ADD CONSTRAINT UC_LIMIT_NUM_GAGES CHECK (num_gages > 0)
;

ALTER TABLE GIS.WEIRS
	ADD CONSTRAINT UQ_WEIRS_weir_id UNIQUE (weir_id)
;

ALTER TABLE GIS.WEIRS
	ADD CONSTRAINT UC_LIMIT_WEIR_LENGTH CHECK (length > 0.0)
;

ALTER TABLE GIS.WEIRS
	ADD CONSTRAINT UC_LIMIT_WEIR_COEFFICIENT CHECK (coefficient > 0.0)
;

ALTER TABLE GIS.WEIRS
	ADD CONSTRAINT UC_CHECK_CREST_AGAINST_CROWN CHECK (crest <= crown)
;

ALTER TABLE GIS.ASM_ZONING
	ADD CONSTRAINT UQ_ASM_ZONING_asm_zoning_id UNIQUE (asm_zoning_id)
;

ALTER TABLE GIS.ASM_ZONING
	ADD CONSTRAINT UC_LIMIT_ASM_ZONING_AREA CHECK (zone_area > 0.0)
;

ALTER TABLE GIS.ASM_ZONING
	ADD CONSTRAINT UC_LIMIT_PERIMETER CHECK (perimeter > 0.0)
;

ALTER TABLE GIS.DSC_ZINGERS
	ADD CONSTRAINT UQ_DSC_ZINGERS_dsc_zinger_id UNIQUE (dsc_zinger_id)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UQ_DSCS_dsc_id UNIQUE (dsc_id)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_IA_FRACTION_EX CHECK (ia_fraction_ex >= 0.0 and ia_fraction_ex <= 1.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_IA_FRACTION_CP CHECK (ia_fraction_cp >= 0.0 and ia_fraction_cp <= 1.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_IA_FRACTION_FU CHECK (ia_fraction_fu >= 0.0 and ia_fraction_fu <= 1.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_DSC_AREA CHECK (total_area >= 0.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_ROOF_AREA_EX CHECK (roof_area_ex >= 0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_ROOF_AREA_FU CHECK (roof_area_fu >= 0.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_PARKING_AREA_DSC_EX CHECK (parking_area_ex >= 0.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_PARKING_AREA_FU CHECK (parking_area_fu >= 0.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_BASEFLOW_EX CHECK (baseflow_ex >= 0.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_BASEFLOW_FU CHECK (baseflow_fu >= 0.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_BASEFLOW_DESIGN_MANUAL CHECK (baseflow_design_manual >= 0.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_IC_ROOF_EX CHECK (ic_roof_ex >= 0.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_IC_ROOF_FU CHECK (ic_roof_fu >= 0.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_IC_PARKING_EX CHECK (ic_parking_ex >= 0.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_IC_PARKING_FU CHECK (ic_parking_fu >= 0.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_EFFECTIVE_IC_ROOF_EX CHECK (effective_ic_roof_ex >= 0.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_EFFECTIVE_IC_PARKING_EX CHECK (effective_ic_parking_ex >= 0.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_EFFECTIVE_IC_ROOF_FU CHECK (effective_ic_roof_fu >= 0.0)
;

ALTER TABLE GIS.DSCS
	ADD CONSTRAINT UC_LIMIT_EFFECTIVE_IC_PARKING_FU CHECK (effective_ic_parking_fu >= 0.0)
;

ALTER TABLE GIS.LINKS
	ADD CONSTRAINT UQ_LINKS_link_id UNIQUE (link_id)
;

ALTER TABLE GIS.LINKS
	ADD CONSTRAINT UQ_LINKS_link_name UNIQUE (link_name)
;

ALTER TABLE GIS.LINKS
	ADD CONSTRAINT UC_LIMIT_LENGTH CHECK (length > 0.0)
;

ALTER TABLE GIS.LINKS
	ADD CONSTRAINT UC_LIMIT_DIAMETER_OR_WIDTH_IN CHECK (diameter_or_width_in > 0.0)
;

ALTER TABLE GIS.LINKS
	ADD CONSTRAINT UC_LIMIT_HEIGHT_IN CHECK (height_in >= 0.0)
;

ALTER TABLE GIS.LINKS
	ADD CONSTRAINT UC_LIMIT_US_DEPTH CHECK (us_depth >= 0.0)
;

ALTER TABLE GIS.LINKS
	ADD CONSTRAINT UC_LIMIT_DS_DEPTH CHECK (ds_depth >= 0.0)
;

ALTER TABLE GIS.LINKS
	ADD CONSTRAINT UC_LIMIT_ROUGHNESS CHECK (roughness > 0.0 and roughness < 1.0)
;

ALTER TABLE GIS.LINKS
	ADD CONSTRAINT UC_LIMIT_DESIGN_FLOW CHECK (design_flow >= 0.0)
;

ALTER TABLE GIS.NODES
	ADD CONSTRAINT UQ_NODES_node_id UNIQUE (node_id)
;

ALTER TABLE GIS.NODES
	ADD CONSTRAINT UQ_NODES_node_name UNIQUE (node_name)
;

ALTER TABLE GIS.PARKING_TARGETS
	ADD CONSTRAINT UQ_PARKING_TARGETS_parking_target_id UNIQUE (parking_target_id)
;

ALTER TABLE GIS.PARKING_TARGETS
	ADD CONSTRAINT UC_LIMIT_PARKING_AREA_UNDER_INFLOW_CONTROL_EX CHECK (area_under_inflow_control_ex >= 0.0)
;

ALTER TABLE GIS.PARKING_TARGETS
	ADD CONSTRAINT UC_LIMIT_PARKING_AREA_EX CHECK (parking_area_ex >= 0.0)
;

ALTER TABLE GIS.PARKING_TARGETS
	ADD CONSTRAINT UC_LIMIT_TARGET_AREA CHECK (target_area >= 0.0)
;

ALTER TABLE GIS.PARKING_TARGETS
	ADD CONSTRAINT UC_LIMIT_NUM_PARKING_SPACES CHECK (num_parking_spaces >= 0)
;

ALTER TABLE GIS.PARKING_TARGETS
	ADD CONSTRAINT UC_LIMIT_OBSERVED_PARKING_USAGE_PCT CHECK (observed_parking_usage_pct >= 0 and observed_parking_usage_pct <= 100)
;

ALTER TABLE GIS.PARKING_TARGETS
	ADD CONSTRAINT UC_LIMIT_FRACTION_CONTROLLABLE CHECK (fraction_controllable >= 0.0 and fraction_controllable <= 1.0)
;

ALTER TABLE GIS.PARKING_TARGETS
	ADD CONSTRAINT UC_LIMIT_FRACTION_TO_DRYWELL CHECK (fraction_to_drywell >= 0.0 and fraction_to_drywell <= 1.0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UQ_ROOF_TARGETS_roof_target_id UNIQUE (roof_target_id)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_ROOF_AREA_UNDER_INFLOW_CONTROL_EX CHECK (area_under_inflow_control_ex >= 0.0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_ROOF_TARGETS_ROOF_AREA_EX CHECK (roof_area_ex >= 0.0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_NUM_DSPOUTS CHECK (num_dspouts >= 0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_NUM_DSPOUTS_TO_VEG_EX CHECK (num_dspouts_to_veg_ex >= 0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_NUM_DSPOUTS_TO_STREET_EX CHECK (num_dspouts_to_street_ex >= 0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_NUM_DSPOUTS_TO_PLANTER_EX CHECK (num_dspouts_to_planter_ex >= 0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_NUM_DSPOUTS_TO_BIORETENTION_EX CHECK (num_dspouts_to_bioretention_ex >= 0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_NUM_DSPOUTS_TO_DRYWELL_EX CHECK (num_dspouts_to_drywell_ex >= 0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_NUM_DSPOUTS_TO_ECOROOF_EX CHECK (num_dspouts_to_ecoroof_ex >= 0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_NUM_DSPOUTS_TO_VEG_FU CHECK (num_dspouts_to_veg_fu >= 0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_NUM_DSPOUTS_TO_STREET_FU CHECK (num_dspouts_to_street_fu >= 0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_NUM_DSPOUTS_TO_PLANTER_FU CHECK (num_dspouts_to_planter_fu >= 0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_NUM_DSPOUTS_TO_BIORETENTION_FU CHECK (num_dspouts_to_bioretention_fu >= 0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_NUM_DSPOUTS_TO_DRYWELL_FU CHECK (num_dspouts_to_drywell_fu >= 0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_NUM_DSPOUTS_TO_ECOROOF_FU CHECK (num_dspouts_to_ecoroof_fu >= 0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_NUM_DSPOUTS_UNCONTROLLABLE_FU CHECK (num_dspouts_uncontrollable_fu >= 0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_LIMIT_FRAC_DRAINED_TO_EXT_DSPOUTS_EX CHECK (frac_drained_to_ext_dspouts_ex >= 0.0 and frac_drained_to_ext_dspouts_ex <= 1.0)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_CHECK_DSPOUTS_SUM_EX CHECK ((num_dspouts_to_veg_ex + 
num_dspouts_to_street_ex + 
num_dspouts_to_planter_ex + 
num_dspouts_to_bioretention_ex + 
num_dspouts_to_drywell_ex + 
num_dspouts_to_ecoroof_ex) <= num_dspouts)
;

ALTER TABLE GIS.ROOF_TARGETS
	ADD CONSTRAINT UC_CHECK_DSPOUTS_SUM_FU CHECK ((num_dspouts_to_veg_fu + 
num_dspouts_to_street_fu + 
num_dspouts_to_planter_fu + 
num_dspouts_to_bioretention_fu + 
num_dspouts_to_drywell_fu + 
num_dspouts_to_ecoroof_fu + 
num_dspouts_uncontrollable_fu) <= num_dspouts)
;

ALTER TABLE GIS.SSC_ZINGERS
	ADD CONSTRAINT UQ_SSC_ZINGERS_ssc_zinger_id UNIQUE (ssc_zinger_id)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UQ_SSCS_ssc_id UNIQUE (ssc_id)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_SLOPE CHECK (slope >= 0.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_FLOW_LENGTH CHECK (flow_length >= 0.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_PERVIOUS_ROUGHNESS CHECK (pervious_roughness > 0.0 and pervious_roughness < 1.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_IMPERVIOUS_ROUGHNESS CHECK (impervious_roughness > 0.0 and impervious_roughness < 1.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_IMPERVIOUS_STORAGE_DEPTH CHECK (impervious_storage_depth_in >= 0.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_PERVIOUS_STORAGE_DEPTH CHECK (pervious_storage_depth_in >= 0.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_AVERAGE_CAPILLARY_SUCTION CHECK (average_capillary_suction_in >= 0.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_SATURATED_HYDRAULIC_CONDUCT CHECK (satur_hydraulic_cond_inhr >= 0.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_INITIAL_MOISTURE_DEFICIT CHECK (initial_moisture_deficit >= 0.0 and initial_moisture_deficit <= 1.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_AREA_AC CHECK (area_ac > 0.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_PAVEMENT_AREA_AC CHECK (pavement_area_ac >= 0.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_TREE_OVER_PAVE_AREA_AC CHECK (tree_over_pave_area_ac >= 0.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_SIDEWALK_AREA_EX_AC CHECK (sidewalk_area_ex_ac >= 0.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_SIDEWALK_AREA_OTHER_EX_AC CHECK (sidewalk_area_other_ex_ac >= 0.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_SIDEWALK_FACTOR CHECK (sidewalk_factor > 0.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_SIDEWALK_AREA_FU_AC CHECK (sidewalk_area_fu_ac >= 0.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_RIGHT_OF_WAY_AREA_FU_AC CHECK (right_of_way_area_fu_ac >= 0.0)
;

ALTER TABLE GIS.SSCS
	ADD CONSTRAINT UC_LIMIT_RIGHT_OF_WAY_AREA_AC_OTHER_FU_AC CHECK (right_of_way_area_other_fu_ac >= 0.0)
;

ALTER TABLE GIS.STREET_TARGETS
	ADD CONSTRAINT UQ_STREET_TARGETS_street_target_id UNIQUE (street_target_id)
;

ALTER TABLE GIS.STREET_TARGETS
	ADD CONSTRAINT UC_LIMIT_STREET_IA CHECK (street_ia >= 0.0)
;

ALTER TABLE GIS.STREET_TARGETS
	ADD CONSTRAINT UC_LIMIT_MAX_RELEASE_FLOW CHECK (max_release_flow >= 0.0)
;

ALTER TABLE GIS.STREET_TARGETS
	ADD CONSTRAINT UC_LIMIT_ORIFICE_IA CHECK (orifice_ia >= 0.0)
;

ALTER TABLE GIS.STREET_TARGETS
	ADD CONSTRAINT UC_LIMIT_CURB_EXT_AREA CHECK (curb_ext_area >= 0.0)
;

ALTER TABLE GIS.STREET_TARGETS
	ADD CONSTRAINT UC_LIMIT_PONDING_VOLUME CHECK (ponding_volume >= 0.0)
;

ALTER TABLE GIS.STREET_TARGETS
	ADD CONSTRAINT UC_LIMIT_CURB_EXT_VOLUME CHECK (curb_ext_volume >= 0.0)
;


--  Create Foreign Key Constraints 
ALTER TABLE GIS.DETAILED_ZONES ADD CONSTRAINT FK_DETAILED_ZONES_ZONES 
	FOREIGN KEY (zone_id) REFERENCES GIS.ZONES (zone_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.LINK_TYPES ADD CONSTRAINT FK_LINK_TYPES_PIPE_FLOW_TYPES 
	FOREIGN KEY (pipe_flow_type_id) REFERENCES GIS.PIPE_FLOW_TYPES (pipe_flow_type_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.CROSS_SECTIONS ADD CONSTRAINT FK_CROSS_SECTIONS_LINKS 
	FOREIGN KEY (link_id) REFERENCES GIS.LINKS (link_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.CROSS_SECTIONS ADD CONSTRAINT FK_CROSS_SECTIONS_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.CROSS_SECTIONS_DATA ADD CONSTRAINT FK_CROSS_SECTIONS_DATA_CROSS_SECTIONS 
	FOREIGN KEY (cross_section_id) REFERENCES GIS.CROSS_SECTIONS (cross_section_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.CROSS_SECTIONS_DATA ADD CONSTRAINT FK_CROSS_SECTIONS_DATA_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.FIXED_FLOOR_ELEVATIONS ADD CONSTRAINT FK_FIXED_FLOOR_ELEVATIONS_DSCS 
	FOREIGN KEY (dsc_id) REFERENCES GIS.DSCS (dsc_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.FIXED_FLOOR_ELEVATIONS ADD CONSTRAINT FK_FIXED_FLOOR_ELEVATIONS_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.IC_DISCOS ADD CONSTRAINT FK_IC_DISCOS_ASSUMPTION_CODES 
	FOREIGN KEY (assumption_code) REFERENCES GIS.ASSUMPTION_CODES (assumption_code_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.IC_DISCOS ADD CONSTRAINT FK_IC_DISCOS_DSCS 
	FOREIGN KEY (dsc_id) REFERENCES GIS.DSCS (dsc_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.IC_DISCOS ADD CONSTRAINT FK_IC_DISCOS_IMPERVIOUS_TYPES 
	FOREIGN KEY (ia_type) REFERENCES GIS.IMPERVIOUS_TYPES (impervious_type_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.IC_DRYWELLS ADD CONSTRAINT FK_IC_DRYWELLS_ASSUMPTION_CODES 
	FOREIGN KEY (assumption_code) REFERENCES GIS.ASSUMPTION_CODES (assumption_code_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.IC_DRYWELLS ADD CONSTRAINT FK_IC_DRYWELLS_DSCS 
	FOREIGN KEY (dsc_id) REFERENCES GIS.DSCS (dsc_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.IC_DRYWELLS ADD CONSTRAINT FK_IC_DRYWELLS_IMPERVIOUS_TYPES 
	FOREIGN KEY (ia_type) REFERENCES GIS.IMPERVIOUS_TYPES (impervious_type_id)
;

ALTER TABLE GIS.IC_DRYWELLS ADD CONSTRAINT FK_IC_DRYWELLS_TIME_FRAMES 
	FOREIGN KEY (time_frame) REFERENCES GIS.TIME_FRAMES (time_frame_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.IC_DRYWELLS ADD CONSTRAINT FK_IC_DRYWELLS_TIME_FRAMES_IA 
	FOREIGN KEY (ia_time_frame) REFERENCES GIS.TIME_FRAMES (time_frame_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.IC_NODE_REDIRECTORS ADD CONSTRAINT FK_IC_NODE_REDIRECTORS_NODES 
	FOREIGN KEY (node_id) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.IC_NODE_REDIRECTORS ADD CONSTRAINT FK_IC_NODE_REDIRECTORS_SSCS 
	FOREIGN KEY (ssc_id) REFERENCES GIS.SSCS (ssc_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.IC_NODE_REDIRECTORS ADD CONSTRAINT FK_IC_NODE_REDIRECTORS_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ORIFICES ADD CONSTRAINT FK_ORIFICES_LINKS 
	FOREIGN KEY (link_id) REFERENCES GIS.LINKS (link_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ORIFICES ADD CONSTRAINT FK_ORIFICES_ORIFICE_SHAPES 
	FOREIGN KEY (orifice_shape_id) REFERENCES GIS.ORIFICE_SHAPES (orifice_shape_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ORIFICES ADD CONSTRAINT FK_ORIFICES_ORIFICE_TYPES 
	FOREIGN KEY (orifice_type_id) REFERENCES GIS.ORIFICE_TYPES (orifice_type_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ORIFICES ADD CONSTRAINT FK_ORIFICES_NODES_DS 
	FOREIGN KEY (ds_node_id) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ORIFICES ADD CONSTRAINT FK_ORIFICES_NODES_US 
	FOREIGN KEY (us_node_id) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ORIFICES ADD CONSTRAINT FK_ORIFICES_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PIPE_CONFLICTS ADD CONSTRAINT FK_PIPE_CONFLICTS_LINKS 
	FOREIGN KEY (link_id) REFERENCES GIS.LINKS (link_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PIPE_CONFLICTS ADD CONSTRAINT FK_PIPE_CONFLICTS_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PIPE_SHAPES ADD CONSTRAINT FK_PIPE_SHAPES_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PIPE_SHAPES_DATA ADD CONSTRAINT FK_USER_DEFINED_GEOMETRIES_PIPE_SHAPES 
	FOREIGN KEY (shape_id) REFERENCES GIS.PIPE_SHAPES (shape_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PIPE_SHAPES_DATA ADD CONSTRAINT FK_USER_DEFINED_GEOMETRIES_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PUMP_CURVES ADD CONSTRAINT FK_PUMP_CURVES_PUMPS 
	FOREIGN KEY (pump_id) REFERENCES GIS.PUMPS (pump_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PUMP_CURVES ADD CONSTRAINT FK_PUMP_CURVES_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PUMPS ADD CONSTRAINT FK_PUMPS_LINKS 
	FOREIGN KEY (link_id) REFERENCES GIS.LINKS (link_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PUMPS ADD CONSTRAINT FK_PUMPS_PUMP_TYPES 
	FOREIGN KEY (pump_type) REFERENCES GIS.PUMP_TYPES (pump_type_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PUMPS ADD CONSTRAINT FK_PUMPS_NODES_DS 
	FOREIGN KEY (ds_node_id) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PUMPS ADD CONSTRAINT FK_PUMPS_NODES_US 
	FOREIGN KEY (us_node_id) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PUMPS ADD CONSTRAINT FK_PUMPS_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.SAN_PATTERNS ADD CONSTRAINT FK_SAN_PATTERNS_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
;

ALTER TABLE GIS.SPECIAL_LINKS ADD CONSTRAINT FK_SPECIAL_LINKS_LINKS 
	FOREIGN KEY (to_link_id) REFERENCES GIS.LINKS (link_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.SPECIAL_LINKS ADD CONSTRAINT FK_SPECIAL_LINKS_NODES 
	FOREIGN KEY (node_id) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.SPECIAL_LINKS ADD CONSTRAINT FK_SPECIAL_LINKS_SPECIAL_LINK_TYPES 
	FOREIGN KEY (special_link_type) REFERENCES GIS.SPECIAL_LINK_TYPES (special_link_type_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.SPECIAL_LINKS ADD CONSTRAINT FK_SPECIAL_LINKS_TIME_FRAMES 
	FOREIGN KEY (time_frame) REFERENCES GIS.TIME_FRAMES (time_frame_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.SPECIAL_LINKS ADD CONSTRAINT FK_SPECIAL_LINKS_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.SPECIAL_LINKS_DATA ADD CONSTRAINT FK_SPECIAL_LINKS_DATA_SPECIAL_LINKS 
	FOREIGN KEY (special_link_id) REFERENCES GIS.SPECIAL_LINKS (special_link_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.SPECIAL_LINKS_DATA ADD CONSTRAINT FK_SPECIAL_LINKS_DATA_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.STORMS ADD CONSTRAINT FK_STORMS_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.STORMS ADD CONSTRAINT FK_STORMS_STORM_TYPES 
	FOREIGN KEY (type) REFERENCES GIS.STORM_TYPES (storm_type_id)
;

ALTER TABLE GIS.WEIRS ADD CONSTRAINT FK_WEIRS_LINKS 
	FOREIGN KEY (link_id) REFERENCES GIS.LINKS (link_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.WEIRS ADD CONSTRAINT FK_WEIRS_WEIR_TYPES 
	FOREIGN KEY (weir_type) REFERENCES GIS.WEIR_TYPES (weir_type_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.WEIRS ADD CONSTRAINT FK_WEIRS_NODES_US 
	FOREIGN KEY (us_node_id) REFERENCES GIS.NODES (node_id)
;

ALTER TABLE GIS.WEIRS ADD CONSTRAINT FK_WEIRS_NODES_DS 
	FOREIGN KEY (ds_node_id) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.WEIRS ADD CONSTRAINT FK_WEIRS_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ASM_ZONING ADD CONSTRAINT FK_ASM_ZONING_DETAILED_ZONES_EX 
	FOREIGN KEY (zone_ex) REFERENCES GIS.DETAILED_ZONES (detailed_zone_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ASM_ZONING ADD CONSTRAINT FK_ASM_ZONING_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ASM_ZONING ADD CONSTRAINT FK_ASM_ZONING_ZONES_CP 
	FOREIGN KEY (general_zone_cp) REFERENCES GIS.ZONES (zone_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ASM_ZONING ADD CONSTRAINT FK_ASM_ZONING_ZONES_EX 
	FOREIGN KEY (general_zone_ex) REFERENCES GIS.ZONES (zone_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ASM_ZONING ADD CONSTRAINT FK_ASM_ZONING_DETAILED_ZONES_CP 
	FOREIGN KEY (zone_cp) REFERENCES GIS.DETAILED_ZONES (detailed_zone_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.DSC_ZINGERS ADD CONSTRAINT FK_DSC_ZINGERS_DSCS 
	FOREIGN KEY (dsc_id) REFERENCES GIS.DSCS (dsc_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.DSC_ZINGERS ADD CONSTRAINT FK_DSC_ZINGERS_LINKS 
	FOREIGN KEY (link_id) REFERENCES GIS.LINKS (link_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.DSCS ADD CONSTRAINT FK_DSCS_DETAILED_ZONES_CP 
	FOREIGN KEY (zone_cp) REFERENCES GIS.DETAILED_ZONES (detailed_zone_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.DSCS ADD CONSTRAINT FK_DSCS_DISCO_CLASSES 
	FOREIGN KEY (disco_class) REFERENCES GIS.DISCO_CLASSES (disco_class_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.DSCS ADD CONSTRAINT FK_DSCS_DETAILED_ZONES_EX 
	FOREIGN KEY (zone_ex) REFERENCES GIS.DETAILED_ZONES (detailed_zone_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.DSCS ADD CONSTRAINT FK_DSCS_DSC_SOURCE_QUALITIES 
	FOREIGN KEY (data_source) REFERENCES GIS.DSC_DATA_SOURCES (name)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.DSCS ADD CONSTRAINT FK_DSCS_GROWTH_STATES 
	FOREIGN KEY (growth_state) REFERENCES GIS.GROWTH_STATES (growth_state_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.DSCS ADD CONSTRAINT FK_DSCS_LINKS_SAN 
	FOREIGN KEY (san_to_link_id) REFERENCES GIS.LINKS (link_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.DSCS ADD CONSTRAINT FK_DSCS_LINKS_STORM 
	FOREIGN KEY (storm_to_link_id) REFERENCES GIS.LINKS (link_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.DSCS ADD CONSTRAINT FK_DSCS_SEWERABILITIES 
	FOREIGN KEY (sewerability) REFERENCES GIS.SEWERABILITIES (sewerability_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.DSCS ADD CONSTRAINT FK_DSCS_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.DSCS ADD CONSTRAINT FK_DSCS_ZONES_CP 
	FOREIGN KEY (general_zone_cp) REFERENCES GIS.ZONES (zone_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.DSCS ADD CONSTRAINT FK_DSCS_ZONES_EX 
	FOREIGN KEY (general_zone_ex) REFERENCES GIS.ZONES (zone_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.LINKS ADD CONSTRAINT FK_LINKS_HANSEN_SERVICE_CODES 
	FOREIGN KEY (hansen_service_status) REFERENCES GIS.HANSEN_SERVICE_CODES (hansen_service_code_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.LINKS ADD CONSTRAINT FK_LINKS_LINK_TYPES 
	FOREIGN KEY (link_type) REFERENCES GIS.LINK_TYPES (link_type_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.LINKS ADD CONSTRAINT FK_LINKS_PIPE_FLOW_TYPES 
	FOREIGN KEY (pipe_flow_type) REFERENCES GIS.PIPE_FLOW_TYPES (pipe_flow_type_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.LINKS ADD CONSTRAINT FK_LINKS_MATERIALS 
	FOREIGN KEY (material) REFERENCES GIS.MATERIALS (material_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.LINKS ADD CONSTRAINT FK_LINKS_NODES_DS 
	FOREIGN KEY (ds_node_id) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.LINKS ADD CONSTRAINT FK_LINKS_NODES_US 
	FOREIGN KEY (us_node_id) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.LINKS ADD CONSTRAINT FK_LINKS_PIPE_SHAPES 
	FOREIGN KEY (pipe_shape) REFERENCES GIS.PIPE_SHAPES (shape_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.LINKS ADD CONSTRAINT FK_LINKS_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.NODES ADD CONSTRAINT FK_NODES_DATA_SOURCES 
	FOREIGN KEY (data_quality) REFERENCES GIS.DATA_SOURCES (data_source_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.NODES ADD CONSTRAINT FK_NODES_NODE_TYPES 
	FOREIGN KEY (node_type) REFERENCES GIS.NODE_TYPES (node_type_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.NODES ADD CONSTRAINT FK_NODES_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PARKING_TARGETS ADD CONSTRAINT FK_PARKING_TARGETS_DSCS 
	FOREIGN KEY (dsc_id) REFERENCES GIS.DSCS (dsc_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PARKING_TARGETS ADD CONSTRAINT FK_PARKING_TARGETS_PLACEMENT_TYPES 
	FOREIGN KEY (placement_possibility) REFERENCES GIS.PLACEMENT_TYPES (placement_type_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PARKING_TARGETS ADD CONSTRAINT FK_PARKING_TARGETS_NODES 
	FOREIGN KEY (node_id) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE CASCADE
;

ALTER TABLE GIS.PARKING_TARGETS ADD CONSTRAINT FK_PARKING_TARGETS_NODES_DSC 
	FOREIGN KEY (node_id_dsc) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PARKING_TARGETS ADD CONSTRAINT FK_PARKING_TARGETS_NODES_SSC 
	FOREIGN KEY (node_id_ssc) REFERENCES GIS.NODES (node_id)
;

ALTER TABLE GIS.PARKING_TARGETS ADD CONSTRAINT FK_PARKING_TARGETS_IC_TARGET_CONSTRUCTED_STATUSES 
	FOREIGN KEY (constructed_status) REFERENCES GIS.IC_TARGET_CONSTRUCTED_STATUSES (ic_target_constructed_status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PARKING_TARGETS ADD CONSTRAINT FK_PARKING_TARGETS_IC_TARGET_DIFFICULTIES 
	FOREIGN KEY (difficulty) REFERENCES GIS.IC_TARGET_DIFFICULTIES (ic_target_difficulty_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.PARKING_TARGETS ADD CONSTRAINT FK_PARKING_TARGETS_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ROOF_TARGETS ADD CONSTRAINT FK_ROOF_TARGETS_DSCS 
	FOREIGN KEY (dsc_id) REFERENCES GIS.DSCS (dsc_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ROOF_TARGETS ADD CONSTRAINT FK_ROOF_TARGETS_NODES 
	FOREIGN KEY (node_id) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ROOF_TARGETS ADD CONSTRAINT FK_ROOF_TARGETS_IC_TARGET_CONSTRUCTED_STATUSES 
	FOREIGN KEY (constructed_status) REFERENCES GIS.IC_TARGET_CONSTRUCTED_STATUSES (ic_target_constructed_status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ROOF_TARGETS ADD CONSTRAINT FK_ROOF_TARGETS_IC_TARGET_DIFFICULTIES 
	FOREIGN KEY (difficulty) REFERENCES GIS.IC_TARGET_DIFFICULTIES (ic_target_difficulty_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.ROOF_TARGETS ADD CONSTRAINT FK_ROOF_TARGETS_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.SSC_ZINGERS ADD CONSTRAINT FK_SSC_ZINGERS_NODES 
	FOREIGN KEY (node_id) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.SSC_ZINGERS ADD CONSTRAINT FK_SSC_ZINGERS_SSCS 
	FOREIGN KEY (ssc_id) REFERENCES GIS.SSCS (ssc_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.SSCS ADD CONSTRAINT FK_SSCS_NODES_ALT 
	FOREIGN KEY (alt_trace_node_id) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.SSCS ADD CONSTRAINT FK_SSCS_NODES_EX 
	FOREIGN KEY (node_id_ex) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.SSCS ADD CONSTRAINT FK_SSCS_NODES_FU 
	FOREIGN KEY (node_id_fu) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.SSCS ADD CONSTRAINT FK_SSCS_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.STREET_TARGETS ADD CONSTRAINT FK_STREET_TARGETS_IC_TARGET_CONSTRUCTED_STATUSES 
	FOREIGN KEY (constructed_status) REFERENCES GIS.IC_TARGET_CONSTRUCTED_STATUSES (ic_target_constructed_status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.STREET_TARGETS ADD CONSTRAINT FK_STREET_TARGETS_NODES 
	FOREIGN KEY (node_id) REFERENCES GIS.NODES (node_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.STREET_TARGETS ADD CONSTRAINT FK_STREET_TARGETS_PLACEMENT_TYPES 
	FOREIGN KEY (placement_possibility) REFERENCES GIS.PLACEMENT_TYPES (placement_type_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.STREET_TARGETS ADD CONSTRAINT FK_STREET_TARGETS_SSCS 
	FOREIGN KEY (ssc_id) REFERENCES GIS.SSCS (ssc_id)
;

ALTER TABLE GIS.STREET_TARGETS ADD CONSTRAINT FK_STREET_TARGETS_STREET_TARGET_TYPES 
	FOREIGN KEY (control_type) REFERENCES GIS.STREET_TARGET_TYPES (street_target_type_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE GIS.STREET_TARGETS ADD CONSTRAINT FK_STREET_TARGETS_STATUSES 
	FOREIGN KEY (status) REFERENCES GIS.STATUSES (status_id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
;
